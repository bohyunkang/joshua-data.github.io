<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-12-10T00:41:19+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Joshua Kim</title><subtitle>Data Analyst</subtitle><entry><title type="html">온체인 데이터 분석하기 | Dune Analytics 101</title><link href="http://localhost:4000/dune-analytics/" rel="alternate" type="text/html" title="온체인 데이터 분석하기 | Dune Analytics 101" /><published>2022-12-03T00:00:00+09:00</published><updated>2022-12-03T00:00:00+09:00</updated><id>http://localhost:4000/dune-analytics</id><content type="html" xml:base="http://localhost:4000/dune-analytics/"><![CDATA[<blockquote>
  <p>이번 시간에는 온체인 데이터 애널리틱스 플랫폼들 중 가장 핫하고 커뮤니티가 큰 <a href="https://dune.com/home">Dune Analytics</a>의 구조와 사용 방법에 대해 알아볼 것이다. 데이터 사이언스를 공부하고 블록체인 기업에서 일하는 본인에게 Dune Analytics는 가만히 쳐다보기만 해도 늘 심장이 쿵쾅거리며 텐션이 업되는 유토피아 같은 곳이다. 하지만 안타깝게도, 이 설레는 마음을 이어 받아 데이터 구조를 이해하고 사용 방법을 익히기 위한 레퍼런스가 상당히 부족하다는 것을 알게 되었다. 그리하여 나 처럼 데이터만 보면 마음이 벅차오르는 이 시대 모든 온체인 데이터 러버들에게 이 글을 바치고자 한다. Happy Duning!</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Intro: Web 3.0는 데이터 천국</li>
  <li>온체인 데이터를 떠먹여주는 Dune</li>
  <li>Dune, 돈 내고 써야 하는가</li>
  <li>Dune DB Schema
    <ul>
      <li>4.1. 데이터 조회 가능한 블록체인 리스트</li>
      <li>4.2. 어떤 테이블들로 구성되어 있는가</li>
    </ul>
  </li>
  <li>5개의 엔진
    <ul>
      <li>5.1. 데이터베이스 엔진</li>
      <li>5.2. PostgreSQL vs Spark SQL</li>
    </ul>
  </li>
  <li>Case Study
    <ul>
      <li>6.1. Ethereum NFT Project WAU (Weekly Active Users)</li>
      <li>6.2. Ethereum DEX TX Volume (Token-wise)</li>
    </ul>
  </li>
  <li>팁 대방출
    <ul>
      <li>7.1. CTE를 적극적으로 사용하자.</li>
      <li>7.2. 주요 CA Address Labeling을 해두자.</li>
      <li>7.3. Spark SQL 문법 공부를 하자.</li>
    </ul>
  </li>
  <li>Outro: Let’s mingle in!</li>
</ol>

<hr />

<p><img src="/assets/2022-12-03-dune-analytics/dune-logo.webp" alt="" /></p>
<blockquote>
  <p>Dune Analytics</p>
</blockquote>

<h1 id="1-intro-web-30는-데이터-천국">1. Intro: Web 3.0는 데이터 천국</h1>

<p>데이터 담당자인 나에게 있어 Web 3.0은 사랑 그 자체다. Web 2.0 플랫폼에서 근무하시는 분들은 다 아시겠지만, 매우 단순한 분석이나 ML Model Fitting을 위해 데이터를 확보하는 것은 매우 어렵고 장애 요소가 많은 일이다. 개인정보 보호법 준수를 위한 거버넌스 조건이 매우 많기 때문에, 고객의 식별자가 가명화(Pseudonymization)된 채로 Raw Data를 받게 되는 경우가 빈번하고, 또 특정 고객 Segment를 위한 타겟 프로모션 실행을 위해 Classifier ML Model을 구현했다고 하더라도 고객의 개인정보 보호를 위해 해당 Model을 각 고객들에게 매핑하여 Serving 하기에도 제약이 많다. (특히, Web 2.0 금융 기업일수록 이런 문제로 인한 데이터 활용 폭이 매우 좁은 것 같다.)</p>

<p>그러나 Web 3.0는 다르다. 우선, 데이터 접근성이 매우 민주적이다. 해당 블록체인 네트워크 내에서 노드를 돌리기만 하면 누구나 자유롭게 모든 데이터를 추출하여 적재할 수 있다. 대부분의 블록체인이 가명성 철학을 기반으로 이루어져 있기 때문에 개인정보 이슈가 적을 뿐 아니라, 특정 플랫폼의 운영 기업이 데이터를 독점하지도 않기 때문에 추출 용이성과 활용성이 무궁무진하다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/web3-platform.webp" alt="" /></p>
<blockquote>
  <p>Web 3.0는 플랫폼 참여자 모두가 데이터 소유권을 부여 받을 수 있다.</p>
</blockquote>

<p>또한, Web 3.0 데이터는 Data Cleaning 작업도 상당히 덜 요구되는 편이다. 데이터 팀에서 근무하시는 분들은 다 아시겠지만, 분석을 하기 위한 대부분의 Raw Data는 매우 지저분하다. Null 값, Typos, Outliers, Special Characters 등을 해결하는 것이 분석을 위한 필수 선결 과제다. 즉, 우리는 대부분의 시간을 데이터 “분석”이 아닌, 데이터 “전처리”를 하는 데 쓴다. (물론, Category Features Encoding, Imputation with Mean, Median, and Mode와 같은 전처리는 매우 중요한 과정이니, 여기에서 말하는 “전처리”란 인간의 직관이 요구되지 않는 단순 작업에 가까운 것들을 의미한다. 오해하시지 말라.)</p>

<p>반면, Web 3.0 데이터는 이미 정합성과 거버넌스를 프로토콜로 명확하게 규정된 채로 블록에 쌓이기 때문에, 예외적인 Instance나 Naming Rule로부터 벗어난 Feature가 매우 드물다. 가령, Ethereum의 Block Data는  <a href="https://ethereum.org/ko/developers/docs/blocks/">Ethereum Docs</a>에서 확인할 수 있듯이 명확하게 규정되어 있기 때문에, 매우 클린한 데이터를 추출할 수 있다. 또한, Ethereum의 State를 변화시키는 모든 Transactions의 Input Data 자체가 Typo나 Null Value가 존재할 경우 Validators에 의해 Fail되거나 Contract의 Function Call이 되지 않을 것이므로 이는 Miners나 Validators가 데이터 Screening의 기능을 하는 것으로도 이해될 수 있다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/eth-state-change.webp" alt="" /></p>
<blockquote>
  <p><a href="https://ethereum.org/ko/developers/docs/blocks/">Ethereum State Change</a></p>
</blockquote>

<p>아무튼 그래서 Web 3.0는 데이터의 보물섬(?) 같은 곳이다. 이러한 점 때문에, 몇 년 전부터 전세계의 수많은 데이터 분석가들이 온체인 데이터에 주목하기 시작했고, 수많은 온체인 데이터 연구와 작업들이 진행되고 있다.</p>

<h1 id="2-온체인-데이터를-떠먹여주는-dune">2. 온체인 데이터를 떠먹여주는 Dune</h1>

<p>사실 블록체인 데이터를 독자적으로 추출하여 적재하는 일은 상당히 어려운 일이다. 방금 필자가 다음과 같이 상술했는데, 사실 이건 말이 쉽지, 필자의 랩탑으로 노드를 돌린다면 아마 펑 하고 터질 것이다.</p>

<blockquote>
  <p>“해당 블록체인 네트워크 내에서 노드를 돌리기만 하면 누구나 자유롭게 모든 데이터를 추출하여 적재할 수 있다.”</p>
</blockquote>

<p>노드를 On-premise로 구축하는 작업은 상당한 수준의 리소스를 요구한다. 살짝 오래된 자료이지만, 아래 테이블을 보면 각 블록체인 별로 노드의 최소 사양 수준이 만만치 않다는 것을 알 수 있다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/node-specs.webp" alt="" /></p>
<blockquote>
  <p>Validator Node Specifications</p>
</blockquote>

<p>이러한 문제를 해결해주고자 한 것이 바로 Dune Analytics다. 즉, Dune은 자체적으로 각 블록체인 별로 노드를 구축함으로써 최종 사용자가 로컬 환경에서 굳이 노드를 운영하지 않고도 Dune의 DB를 조회하고, 실시간으로 온체인 데이터를 조회할 수 있도록 만든 서비스인 것이다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/dune-flow.webp" alt="" /></p>
<blockquote>
  <p><a href="https://dune.com/docs/#how-the-data-flows">how-the-data-flows</a>  를 읽고 직접 만들어본 Flow Chart</p>
</blockquote>

<p>이보다 더 상세한 Dune의 Operational Flow를 확인하고 싶다면,  <a href="https://dune.com/docs/">여기</a>를 클릭하여 매우 명쾌한 설명을 확인해보도록 하자.</p>

<h1 id="3-dune-돈-내고-써야-하는가">3. Dune, 돈 내고 써야 하는가</h1>

<p>참고로 Dune은 Freemium (Free + Premium) 형태로 서비스를 제공하고 있다. Dune도 영리적 기업이기 때문에 Pricing Plan이 수시로 변동될 수 있는데, 2022년 12월 현재 Plan은 다음과 같다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/dune-pricing.webp" alt="" /></p>
<blockquote>
  <p><a href="https://dune.com/docs/reference/pricing/">Dune Pricing</a></p>
</blockquote>

<p>예전에는 Plan이 Free or Premium의 Binary Classification 형태로만 구분되어 있었지만, 최근에 이렇게 다양한 Plan으로 업데이트 되었다. Free Plan을 써본 필자의 경험을 정리해보면 다음과 같다.</p>
<ol>
  <li>Free Plan을 쓰더라도 Query 속도와 처리량이 심각하게 느리지는 않다.
    <ul>
      <li>물론 약간의 코드 최적화를 통해 Request 처리량을 조절하는 스킬이 필요하다. (이게 무슨 의미인지 잠시 후에 팁으로 설명하겠다.)</li>
    </ul>
  </li>
  <li>자신이 저장한 쿼리 결과와 차트는 항상 공개된다.
    <ul>
      <li>비즈니스의 대외비와 연관된 중요한 데이터일 경우, Premium Plan을 사용하거나 혹은 SQL 문을 로컬에 따로 보관한 뒤 필요할 때마다 돌린 후 바로 삭제해야 한다.</li>
    </ul>
  </li>
</ol>

<p>따라서 각자 자신의 온체인 데이터 활용 환경 및 요구사항에 맞는 Plan을 사용하는 것이 중요할 것 같다.</p>

<h1 id="4-dune-db-schema">4. Dune DB Schema</h1>

<h2 id="41-데이터-조회-가능한-블록체인-리스트">4.1. 데이터 조회 가능한 블록체인 리스트</h2>

<p>2022년 12월 현재, Dune이 제공하는 온체인 데이터는 크게 다음의 8개 블록체인으로 구성된다. 앞으로 설명하는 모든 DB Schema는 모두 기본적으로 아래 8개 블록체인으로부터 끌어온 것이라고 생각하면 된다.</p>

<ul>
  <li>Ethereum (<a href="https://etherscan.io/">Etherscan</a>)</li>
  <li>Gnosis Chain — xDai (<a href="https://gnosisscan.io/">GnosisScan</a>)</li>
  <li>Polygon — PoS Mainnet (<a href="https://medium.com/iotrustlab/Arbiscan">Polygonscan</a>)</li>
  <li>Optimism — Ethereum L2 (<a href="https://optimistic.etherscan.io/">Optimism Etherscan</a>)</li>
  <li>Arbitrum — Ethereum L2 (<a href="https://arbiscan.io/">Arbiscan</a>)</li>
  <li>BNB Chain (<a href="https://bscscan.com/">BscScan</a>)</li>
  <li>Solana (<a href="https://solscan.io/">Solscan</a>)</li>
  <li>Avalanche C-Chain (<a href="https://snowtrace.io/">Snowtrace</a>)</li>
</ul>

<h2 id="42-어떤-테이블들로-구성되어-있는가">4.2. 어떤 테이블들로 구성되어 있는가</h2>

<p>Dune의 DB에는 수많은 테이블들이 존재한다. 그렇다고 해서, 모든 테이블들을 하나하나 조회해보는 것은 매우 비효율적이므로, 카테고리로 구분하여 큰 기둥을 잡아보자.</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Raw Tables</code></li>
  <li><code class="language-plaintext highlighter-rouge">Decoded Tables</code></li>
  <li><code class="language-plaintext highlighter-rouge">Spells</code></li>
  <li><code class="language-plaintext highlighter-rouge">Community Tables</code></li>
  <li><code class="language-plaintext highlighter-rouge">Prices Tables</code></li>
</ul>

<h3 id="raw-tables">Raw Tables</h3>

<p>Dune에서 조회할 수 있는 테이블들 중 첫번째 종류는 바로 Raw Tables다. 단어에서 느낄 수 있듯이, 가장 원시적인 형태의 데이터가 담긴 곳을 의미한다. Dune Docs에서는 다음과 같이 개념을 서술하고 있다.</p>

<blockquote>
  <p>“Raw tables provide you raw, unfiltered and unedited data.”</p>
</blockquote>

<p>가령, Raw Tables에는 다음과 같은 테이블이 있어서 직접 조회할 수 있다.</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">ethereum.blocks</code></li>
  <li><code class="language-plaintext highlighter-rouge">ethereum.creation_traces</code></li>
  <li><code class="language-plaintext highlighter-rouge">ethereum.traces</code></li>
  <li><code class="language-plaintext highlighter-rouge">ethereum.logs</code></li>
  <li><code class="language-plaintext highlighter-rouge">ethereum.transactions</code></li>
  <li><code class="language-plaintext highlighter-rouge">ethereum.contracts</code></li>
</ul>

<p>(1) <code class="language-plaintext highlighter-rouge">ethereum.blocks</code></p>

<p>각 Block에 존재하는 데이터를 확인할 수 있는 테이블이다. Block Header 영역에 존재하는 데이터 중 Merkle Root를 제외한 거의 모든 데이터를 확인할 수 있다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/etherscan-block.webp" alt="" /></p>
<blockquote>
  <p>즉,  <a href="https://etherscan.io/block/16095248">Etherscan</a>에서 각 Block을 조회했을 때 나오는 이 데이터들을 직접 조회할 수 있다는 말이다.</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">ethereum</span><span class="p">.</span><span class="n">blocks</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">number</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/ethereum.blocks.webp" alt="" /></p>

<p>(2) <code class="language-plaintext highlighter-rouge">ethereum.creation_traces</code></p>

<p>CA (Contract Account) 생성을 한 TX들의 데이터를 확인할 수 있는 테이블이다. TX를 서명한 EOA Address는 물론이고, Input Data까지 조회할 수 있다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/transaction-types.webp" alt="" /></p>
<blockquote>
  <p>위 그림에서 Contract Account를 Externally Owned Account로부터 생성하는 TX들을 의미한다.</p>
</blockquote>

<p><img src="/assets/2022-12-03-dune-analytics/contract-creation-message-call.webp" alt="" /></p>
<blockquote>
  <p><a href="https://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf">Creates and Calls Contract</a></p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">ethereum</span><span class="p">.</span><span class="n">creation_traces</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/ethereum-creation-traces.webp" alt="" /></p>

<p>(3) <code class="language-plaintext highlighter-rouge">ethereum.traces</code></p>

<p>CA로부터 실행된 TX들의 데이터를 확인할 수 있는 테이블이다. Ethereum에서는 이러한 TX를 특별히  Internal Transaction이라고 부르는데, Dune에서는 이를 trace로 표현하고 있는 것이다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/transaction-types.webp" alt="" /></p>
<blockquote>
  <p>위 그림에서 CA → CA에 해당하는 TX들을 확인할 수 있다는 의미이다. (물론 CA → EOA 유형도 포함한다.)</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">ethereum</span><span class="p">.</span><span class="n">traces</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/ethereum-traces.webp" alt="" /></p>

<p>(4) <code class="language-plaintext highlighter-rouge">ethereum.logs</code></p>

<p>CA를 실행했을 때 발생하는 이벤트 로그 내의 데이터를 조회할 수 있는 테이블이다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/transaction-types.webp" alt="" /></p>
<blockquote>
  <p>위 그림에서 EOA → CA에 해당하는 TX의 로그를 확인할 수 있다는 의미이다. (물론, CA → CA 유형도 있다.)</p>
</blockquote>

<p><img src="/assets/2022-12-03-dune-analytics/etherscan-ca-call.webp" alt="" /></p>
<blockquote>
  <p>즉,  <a href="https://etherscan.io/tx/0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e#eventlog">Etherscan</a>에서 CA Call을 실행한 TX의 Logs 탭의 데이터를 확인할 수 있다.</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">ethereum</span><span class="p">.</span><span class="n">logs</span>  
	<span class="k">ORDER</span> <span class="k">BY</span> 
		<span class="n">block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/ethereum-logs.webp" alt="" /></p>

<p>(5) <code class="language-plaintext highlighter-rouge">ethereum.transactions</code></p>

<p>Internal Transaction을 제외한 모든 TX 데이터를 확인할 수 있는 테이블이다. 즉, EOA로부터 브로드캐스트된 TX들에 대해서만 데이터를 조회할 수 있다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/transaction-types.webp" alt="" /></p>
<blockquote>
  <p>위 그림에서 EOA → CA, EOA → EOA 유형의 TX들을 확인할 수 있다는 의미이다.</p>
</blockquote>

<p><img src="/assets/2022-12-03-dune-analytics/etherscan-transaction.webp" alt="" /></p>
<blockquote>
  <p>즉,  <a href="https://etherscan.io/tx/0xbcd46c6c6befc4c6ecf234c3385a1caea6601688105fcc7c48037c80d7414613">Etherscan</a>에서 각 TX을 조회했을 때 나오는 이 데이터들을 직접 조회할 수 있다는 말이다.</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/ethereum-transactions.webp" alt="" /></p>

<p>(6) <code class="language-plaintext highlighter-rouge">ethereum.contracts</code></p>

<p>Ethereum Network 상에 배포된 CA 관련 데이터를 확인할 수 있는 테이블이다. CA Address는 물론이고, Contract Name, ABI, Creation Code 등 실질적인 데이터까지 모두 조회할 수 있다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/etherscan-contract.webp" alt="" /></p>
<blockquote>
  <p>즉,  <a href="https://etherscan.io/address/0x00000000219ab540356cbb839cbe05303d7705fa#code">Etherscan</a>에서 각 CA를 조회했을 때 나오는 이 Contract 관련 데이터를 직접 조회할 수 있다는 말이다.</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">ethereum</span><span class="p">.</span><span class="n">contracts</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/ethereum-contracts.webp" alt="" /></p>

<h3 id="decoded-tables">Decoded Tables</h3>

<blockquote>
  <p>“Instead of working with the transactions, logs, and traces in their raw states, on Dune we decode smart contract activity into nice human-readable tables.”</p>
</blockquote>

<p>Raw Tables는 가장 Original한 데이터를 조회할 수 있다는 측면에서 매우 귀중한 1차 소스적 가치를 지니고 있지만, 특히 CA의 실행 관련 데이터라면 ABI나 Bytecode 포맷으로 되어 있기 때문에 이를 해석하는 것은 매우 어렵다. (물론 천재 개발자 분들이라면 뇌 내 디코딩(?)을 통해 즉각 해석하실 수도…?) 따라서 Dune은 Raw Tables에 적재되고 있는 데이터들을 Key-Value 형태로 디코딩함으로써 Decoded Tables에 Column-wise로 데이터를 가공하여 제공하고 있다.</p>

<p>이러한 Decoded Tables를 활용하면, Uniswap이나 Sushiswap 등 DEX가 자체적으로 발표한 실적 데이터에 의존하지 않고, 오로지 Decoded Tables를 통해 거래대금이나 활성 사용자 규모 등을 실시간으로 확인할 수 있기 때문에 매우 유용하고 그만큼 인기도 많은 테이블이다.</p>

<p>Decoded Tables는 크게 두 가지 유형으로 구분된다.</p>

<p>(1) CA에서 브로드캐스트된 Internal TX 데이터</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">{projectname_blockchain}.{contractName}_evt_{eventName}</code></li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>
	<span class="k">FROM</span>
		<span class="n">uniswap_v2_ethereum</span><span class="p">.</span><span class="n">Pair_evt_Swap</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">evt_block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/uniswap_v2_ethereum.Pair_evt_Swap.webp" alt="" /></p>

<p>(2) EOA → CA / CA → CA (Function Call) 실행 관련 데이터</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">{projectname_blockchain}.{contractName}_call_{eventName}</code></li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>
	<span class="k">FROM</span>
		<span class="n">uniswap_v2_ethereum</span><span class="p">.</span><span class="n">Pair_call_Swap</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">call_block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/uniswap_v2_ethereum.Pair_call_Swap.webp" alt="" /></p>

<h3 id="prices-tables">Prices Tables</h3>

<blockquote>
  <p>“We pull price data from the coinpaprika API. The Price is the volume-weighted price based on real-time market data, translated to USD.”</p>
</blockquote>

<p>Prices Tables는 각 크립토 자산의 시장 가격 데이터를 실시간으로 조회할 수 있는 테이블이다. 블록체인에 Chainlink의 Price Feed가 있다면, Dune에는 Prices Tables가 있다고 비유해보면 적절할까. 이 시장 가격 데이터는 3rd Party Data Partner인  <a href="https://coinpaprika.com/">Coinpaprika</a>의 API를 활용하여 데이터를 적재하고 있는 것으로 보인다. 그리고 각 시장 가격은 각 거래소의 거래대금 기준으로 가중평균되어 USD로 환산된다. 가장 많이 사용되는 prices.usd 테이블은 분(minute) 단위로 시장 가격을 적재하고 있다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="k">DISTINCT</span> <span class="n">symbol</span>
	<span class="k">FROM</span>
		<span class="n">prices</span><span class="p">.</span><span class="n">usd</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">symbol</span>  
	<span class="k">LIMIT</span> <span class="mi">10</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/prices-usd.webp" alt="" /></p>

<h3 id="spells">Spells</h3>

<blockquote>
  <p>“Spells are custom tables that are built and maintained by Dune and our community.”</p>
</blockquote>

<p>Spells는 Dune과 커뮤니티에 의해 생성되고 유지보수되는 커스텀 테이블들을 의미한다. 필자가 경험했을 때 Spells는 장/단점을 매우 뚜렷하게 지니고 있었다.</p>

<p><strong>장점</strong></p>
<ul>
  <li>Raw Tables와 Decoded Tables을 이해하기에 매우 벅찬 사람들을 위해, 커뮤니티 마법사(Wizard)들이 데이터를 N차 가공하여 예쁘고 편리하게 만들어준다. 가령, Contract 별로 플랫폼명 Labeling을 해주거나, 혹은 유명한 dApps들을 중심으로 Table을 생성하기도 한다. 따라서 데이터 추출에 필요한 시간을 드라마틱하게 절약해줄 수 있다.</li>
</ul>

<p><strong>단점</strong></p>
<ul>
  <li>데이터의 안정성이 매우(X100) 떨어진다. 아무래도 오픈소스로 관리되는 테이블이므로, 종종 말도 안되는 데이터 로그가 발견되기도 한다. 이는 데이터 기반 의사결정에 매우 치명적인 위험성이 있음을 의미한다. 반드시 유념하도록 하자.</li>
</ul>

<p>Spells에 해당되는 테이블들은 굉장히 많으므로, 직접 관심 있는 것들부터 하나하나 조회해보는 것을 추천한다. 다만, 대표적인 3가지 테이블만 사례로 나열해보겠다.</p>

<p>(1) <strong><code class="language-plaintext highlighter-rouge">dex.trades</code></strong></p>

<p>Ethereum 기반의 DEX 상에서 발생한 거래내역을 DEX 별로 상세하게 확인할 수 있는 테이블이다. 그러나, Labeled된 DEX의 수가 매우 제한적이고, 특정 기간 별로 누락된 데이터가 많으니 아직까지는 유지보수가 필요한 것으로 보인다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">dex</span><span class="p">.</span><span class="n">trades</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span><span class="p">;</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/dex-trades.webp" alt="" /></p>

<p>(2) <strong><code class="language-plaintext highlighter-rouge">erc20.stablecoins</code></strong></p>

<p>Ethereum ERC-20 표준 Stablecoin의 데이터를 확인할 수 있는 테이블이다. 해당 CA가 스테이블코인 프로젝트인지 여부를 매뉴얼하게 Labeling한 것으로 보이며, 이 테이블을 Mapper로 두고  <code class="language-plaintext highlighter-rouge">ethereum.traces</code>  상에서 각 스테이블코인의 Mint &amp; Burn 현황을 실시간으로 확인하는 데 매우 유용할 것으로 보인다. 그러나 방심은 금물. 언제든지 데이터 정합성이 훼손될 수도 있음을 반드시 명심하자.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">erc20</span><span class="p">.</span><span class="n">stablecoins</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/erc20.stablecoins.webp" alt="" /></p>

<p>(3) <strong><code class="language-plaintext highlighter-rouge">lending.borrow</code></strong></p>

<p>Ethereum 기반의 대출 플랫폼들에서 발생한 대출 실행 TX들을 확인할 수 있는 테이블이다. 대표적인 Aave, Compound 등을 중심으로 대출 실행자의 Address, 대출액, 토큰 등 상세 정보를 조회할 수 있다. 다만,  <code class="language-plaintext highlighter-rouge">dex.trades</code>  테이블과 마찬가지로, 모든 대출 플랫폼들의 데이터를 확인할 수 없으며, 시장 전체의 트렌드를 반영하려면 좀 더 많은 Labeling 작업이 요구될 것으로 보인다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">SELECT</span>
		<span class="o">*</span>  
	<span class="k">FROM</span>
		<span class="n">lending</span><span class="p">.</span><span class="n">borrow</span>  
	<span class="k">ORDER</span> <span class="k">BY</span>
		<span class="n">block_time</span> <span class="k">DESC</span>  
	<span class="k">LIMIT</span> <span class="mi">5</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/lending.borrow.webp" alt="" /></p>

<p>이 외에도 수많은 Spells 테이블들이 있다. 자세한 내용은 Dune에서 제공하는 아래 링크들을 확인하여 여러 각도로 데이터를 추출하고 가공해볼 수 있을 것이다.</p>

<ul>
  <li><a href="https://dune.com/docs/spellbook/">Spellbook</a></li>
  <li><a href="https://dune.com/docs/spellbook/spellbook-model-docs/">Spellbook Model Docs</a></li>
</ul>

<h1 id="5-5개의-엔진">5. 5개의 엔진</h1>

<h2 id="51-데이터베이스-엔진">5.1. 데이터베이스 엔진</h2>

<p>Dune에서 New Query 버튼을 클릭하여 SQL 작성을 하려고 하면 다음과 같은 엔진 리스트가 있음을 확인할 수 있을 것이다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/engine.webp" alt="" /></p>

<p>데이터베이스 엔진은 스토리지 엔진(Storage Engine)으로 불리기도 하는데, DBMS가 데이터를 CRUD (Create, Read, Update, and Delete) 하기 위해 사용하는 컴포넌트를 의미한다. 포트 번호를 달리하여 구분하기 하고 UI로 구분하기도 하는데, 아무튼 Dune을 활용하는 우리 입장에서 중요한 점은 다음과 같다.</p>
<ul>
  <li>동일한 엔진 내의 테이블끼리는 JOIN이나 UNION을 할 수 있다.</li>
  <li>서로 다른 엔진 내에 존재하는 테이블끼리는 JOIN이나 UNION을 할 수 없다.</li>
</ul>

<h2 id="52-postgresql-vs-spark-sql">5.2. PostgreSQL vs Spark SQL</h2>

<p>위 엔진 5개 중에서 1~4는 Row-oriented DB, 5는 Column-oriented DB이다.</p>
<ol>
  <li>Ethereum: PostgreSQL (Row-oriented DB)</li>
  <li>Gnosis Chain: PostgreSQL (Row-oriented DB)</li>
  <li>Optimism (OVM 1.0): PostgreSQL (Row-oriented DB)</li>
  <li>Optimism (OVM 2.0): PostgreSQL (Row-oriented DB)</li>
  <li>Dune Engine v2: Spark SQL (Column-oriented DB)</li>
</ol>

<p>그리고 Dune은 점진적으로 Row-oriented DB에서 Column-oriented로 DB로의 Migration 로드맵을 공시했다. (즉, 현재 Dune Engine v2로 데이터를 이관하는 작업을 단계적으로 진행 중이다. 2023년 1분기 내로 1~4 엔진은 모두 폐기될 예정이니,  <a href="https://dune.com/docs/reference/v1-sunsetting/">여기</a>를 참고하여 일정 관리를 하도록 하자.)</p>

<p>지나치게 개발적인 내용은 본 글에서 다루지 않겠지만, Row-oriented DB와 Column-orinted DB는 일반적으로 다음과 같은 개념으로 이해하면 된다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/facebook.webp" alt="" /></p>
<blockquote>
  <p><a href="https://dataschool.com/data-modeling-101/row-vs-column-oriented-databases">Row- vs. Column-oriented-databases</a></p>
</blockquote>

<ul>
  <li>Row-oriented DB가 위 테이블을 디스크에 저장하고 새로운 데이터를 추가(append)하는 메커니즘</li>
</ul>

<p><img src="/assets/2022-12-03-dune-analytics/raw-oriented-1.webp" alt="" />
<img src="/assets/2022-12-03-dune-analytics/raw-oriented-2.webp" alt="" /></p>

<ul>
  <li>Column-oriented DB가 위 테이블을 디스크에 저장하고 새로운 데이터를 추가(append)하는 메커니즘</li>
</ul>

<p><img src="/assets/2022-12-03-dune-analytics/col-oriented-1.webp" alt="" />
<img src="/assets/2022-12-03-dune-analytics/col-oriented-2.webp" alt="" /></p>

<p>Row-oriented DB의 장점</p>
<ul>
  <li>데이터를 추가(append)할 때, 기존 데이터의 Index 고려 없이 단순히 제일 마지막에 붙여넣기만 하면 되므로 연산 요구량이 적다.</li>
</ul>

<p>Row-oriented DB의 단점</p>
<ul>
  <li>특정 칼럼의 값을 조회할 때 메모리 사용량이 많다. 가령, 위 사례에서 모든 사람들의 Age 평균값을 구하려고 한다면, 각 Instance의 Age를 Memory에 저장하여 AVERAGE Method를 사용해야 한다.</li>
</ul>

<p>Column-oriented DB의 장점</p>
<ul>
  <li>특정 칼럼의 값을 조회할 때 메모리 사용량이 적다. 가령, 위 사례에서 Age 평균값을 구하려고 한다면, Age 값들이 하나의 Instance 안에 존재하므로 곧바로 AVERAGE Method를 사용할 수 있다.</li>
</ul>

<p>Column-oriented DB의 단점</p>
<ul>
  <li>데이터를 추가(append)할 때, 기존 데이터의 Index를 고려한 후 각 Instance마다 일일이 데이터를 추가해야 한다. 따라서 연산 요구량이 많다.</li>
</ul>

<p>중요한 점은, Column-oriented DB의 단점이 데이터를 조회하고자 하는 최종 사용자인 우리에게는 해당하지 않는다는 점이다. 이는 Dune이 노드로부터 데이터를 적재하는 시간과 비용을 더욱 늘리는 대신, 최종 사용자에게 속도가 더욱 개선된 퀴리 환경 UX를 제공하고자 하는 의지로 표현된다.</p>

<p><img src="/assets/2022-12-03-dune-analytics/row-store-col-store.webp" alt="" /></p>
<blockquote>
  <p><a href="[https://www.heavy.ai/technical-glossary/columnar-database](https://www.heavy.ai/technical-glossary/columnar-database)">Columnar Databases</a></p>
</blockquote>

<h1 id="6-case-study">6. Case Study</h1>

<p>필자는 최근 DeFi 및 NFT 시장 트렌드를 팔로우업하고자 데이터를 추출하여 간단한 차트를 만들어봤다. 매우 기초적인 차트이므로, 독자 분들이 더욱 멋진 차트로 가공해보시길 바란다.</p>

<h2 id="61-ethereum-nft-project-wau-weekly-active-users">6.1. Ethereum NFT Project WAU (Weekly Active Users)</h2>

<p>NFT Project 별로 인기도를 확인하기 위해서는 실제 거래대금, 활성 사용자 수 등 다양한 측면을 고려하여 트렌드를 확인해야 할 것이다. 이 차트에서는 각 NFT Project 거래에 참여한 Account Address 수의 Market Share(%)를 주 단위로 표현해보았다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">WITH</span> <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>  
	    <span class="k">SELECT</span>  
	        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'WEEK'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">yyyymmdd</span><span class="p">,</span>  
	        <span class="n">project</span><span class="p">,</span>  
	        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">sellerbuyer</span><span class="p">)</span> <span class="k">AS</span> <span class="n">wau</span>  
	    <span class="k">FROM</span> <span class="p">(</span>  
	        <span class="k">SELECT</span>  
	            <span class="n">block_time</span><span class="p">,</span>  
	            <span class="n">nft_project_name</span> <span class="k">AS</span> <span class="n">project</span><span class="p">,</span> <span class="n">seller</span> <span class="k">as</span> <span class="n">sellerbuyer</span>  
	        <span class="k">FROM</span>  
	            <span class="n">nft</span><span class="p">.</span><span class="n">trades</span>  
	        <span class="k">WHERE</span>  
	            <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="n">NOW</span><span class="p">()</span> <span class="o">-</span> <span class="s1">'1 YEAR'</span><span class="p">::</span><span class="n">INTERVAL</span>  
	            <span class="k">AND</span> <span class="n">nft_project_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">usd_amount</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">buyer</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="o">!=</span> <span class="n">buyer</span>  
	        <span class="k">UNION</span> <span class="k">ALL</span>  
	        <span class="k">SELECT</span>  
	            <span class="n">block_time</span><span class="p">,</span>  
	            <span class="n">nft_project_name</span> <span class="k">AS</span> <span class="n">project</span><span class="p">,</span> <span class="n">buyer</span> <span class="k">as</span> <span class="n">sellerbuyer</span>  
	        <span class="k">FROM</span>  
	            <span class="n">nft</span><span class="p">.</span><span class="n">trades</span>  
	        <span class="k">WHERE</span>  
	            <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="n">NOW</span><span class="p">()</span> <span class="o">-</span> <span class="s1">'1 YEAR'</span><span class="p">::</span><span class="n">INTERVAL</span>  
	            <span class="k">AND</span> <span class="n">nft_project_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">usd_amount</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">buyer</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="o">!=</span> <span class="n">buyer</span>  
	        <span class="p">)</span> <span class="n">SUB</span>  
	    <span class="k">GROUP</span> <span class="k">BY</span>  
	        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'WEEK'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">),</span>  
	        <span class="n">project</span>  
	<span class="p">),</span>  
	<span class="n">CTE_top_projects</span> <span class="k">AS</span> <span class="p">(</span>  
	    <span class="k">SELECT</span>  
	        <span class="n">project</span><span class="p">,</span>  
	        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">sellerbuyer</span><span class="p">)</span> <span class="k">AS</span> <span class="n">active_users</span>  
	    <span class="k">FROM</span> <span class="p">(</span>  
	        <span class="k">SELECT</span>  
	            <span class="n">nft_project_name</span> <span class="k">AS</span> <span class="n">project</span><span class="p">,</span> <span class="n">seller</span> <span class="k">AS</span> <span class="n">sellerbuyer</span>  
	        <span class="k">FROM</span>  
	            <span class="n">nft</span><span class="p">.</span><span class="n">trades</span>  
	        <span class="k">WHERE</span>  
	            <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="n">NOW</span><span class="p">()</span> <span class="o">-</span> <span class="s1">'1 YEAR'</span><span class="p">::</span><span class="n">INTERVAL</span>  
	            <span class="k">AND</span> <span class="n">nft_project_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">usd_amount</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">buyer</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="o">!=</span> <span class="n">buyer</span>  
	        <span class="k">UNION</span> <span class="k">ALL</span>  
	        <span class="k">SELECT</span>  
	            <span class="n">nft_project_name</span> <span class="k">AS</span> <span class="n">project</span><span class="p">,</span> <span class="n">seller</span> <span class="k">AS</span> <span class="n">sellerbuyer</span>  
	        <span class="k">FROM</span>  
	            <span class="n">nft</span><span class="p">.</span><span class="n">trades</span>  
	        <span class="k">WHERE</span>  
	            <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="n">NOW</span><span class="p">()</span> <span class="o">-</span> <span class="s1">'1 YEAR'</span><span class="p">::</span><span class="n">INTERVAL</span>  
	            <span class="k">AND</span> <span class="n">nft_project_name</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">usd_amount</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">buyer</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	            <span class="k">AND</span> <span class="n">seller</span> <span class="o">!=</span> <span class="n">buyer</span>  
	        <span class="p">)</span> <span class="n">SUB</span>  
	    <span class="k">GROUP</span> <span class="k">BY</span>  
	        <span class="n">project</span>  
	    <span class="k">ORDER</span> <span class="k">BY</span>  
	        <span class="n">active_users</span> <span class="k">DESC</span>  
	    <span class="k">LIMIT</span>  
	        <span class="mi">50</span>  
	<span class="p">),</span>  
	<span class="n">CTE_final</span> <span class="k">AS</span> <span class="p">(</span>  
	    <span class="k">SELECT</span>  
	        <span class="n">yyyymmdd</span><span class="p">,</span>  
	        <span class="k">CASE</span>  
	            <span class="k">WHEN</span> <span class="n">project</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">project</span> <span class="k">FROM</span> <span class="n">CTE_top_projects</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">project</span>  
	            <span class="k">ELSE</span> <span class="s1">'Others'</span>  
	        <span class="k">END</span> <span class="k">AS</span> <span class="n">project</span><span class="p">,</span>  
	        <span class="k">SUM</span><span class="p">(</span><span class="n">wau</span><span class="p">)</span> <span class="k">AS</span> <span class="n">wau</span>  
	    <span class="k">FROM</span>  
	        <span class="n">CTE_raw</span>  
	    <span class="k">GROUP</span> <span class="k">BY</span>  
	        <span class="n">yyyymmdd</span><span class="p">,</span>  
	        <span class="k">CASE</span>  
	            <span class="k">WHEN</span> <span class="n">project</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">project</span> <span class="k">FROM</span> <span class="n">CTE_top_projects</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">project</span>  
	            <span class="k">ELSE</span> <span class="s1">'Others'</span>  
	        <span class="k">END</span>  
	    <span class="k">ORDER</span> <span class="k">BY</span>  
	        <span class="n">yyyymmdd</span> <span class="k">DESC</span><span class="p">,</span>  
	        <span class="n">wau</span> <span class="k">DESC</span>  
	<span class="p">)</span>  
	<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">CTE_final</span><span class="p">;</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/Ethereum NFT Project WAU (Weekly Active Users).webp" alt="" /></p>

<h2 id="62-ethereum-dex-tx-volume-token-wise">6.2. Ethereum DEX TX Volume (Token-wise)</h2>

<p>각 DEX 내에서 발생한 거래들을 토큰 별로 규모를 확인하는 것 역시, 시장 트렌드를 파악하기 위해 매우 중요한 데이터가 될 것이다. 어떤 토큰들이 Short되거나 Long되는지를 실시간으로 조회함으로써 토큰의 시장 가격이나 Needs에 맞는 액션을 취할 수 있지 않을까.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">WITH</span> <span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>  
	    <span class="k">SELECT</span>  
	        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'WEEK'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">yyyymmdd</span><span class="p">,</span>  
	        <span class="n">token_a_symbol</span> <span class="k">AS</span> <span class="n">from_token</span><span class="p">,</span>  
	        <span class="k">SUM</span><span class="p">(</span><span class="n">usd_amount</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tx_volume</span>  
	    <span class="k">FROM</span>  
	        <span class="n">dex</span><span class="p">.</span><span class="n">trades</span>  
	    <span class="k">WHERE</span>  
	        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="n">NOW</span><span class="p">()</span> <span class="o">-</span> <span class="s1">'1 YEAR'</span><span class="p">::</span><span class="n">INTERVAL</span>   
	        <span class="k">AND</span> <span class="n">category</span> <span class="o">=</span> <span class="s1">'DEX'</span>  
	        <span class="k">AND</span> <span class="n">project</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	        <span class="k">AND</span> <span class="n">token_a_symbol</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	        <span class="k">AND</span> <span class="n">tx_from</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	        <span class="k">AND</span> <span class="n">tx_hash</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	        <span class="k">AND</span> <span class="n">usd_amount</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
	    <span class="k">GROUP</span> <span class="k">BY</span>  
	        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'WEEK'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">),</span>  
	        <span class="n">token_a_symbol</span>  
	<span class="p">),</span>  
	<span class="n">CTE_top_from_tokens</span> <span class="k">AS</span> <span class="p">(</span>  
	    <span class="k">SELECT</span>  
	        <span class="n">from_token</span><span class="p">,</span>  
	        <span class="k">SUM</span><span class="p">(</span><span class="n">tx_volume</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tx_volume</span>  
	    <span class="k">FROM</span>  
	        <span class="n">CTE_raw</span>  
	    <span class="k">GROUP</span> <span class="k">BY</span>  
	        <span class="n">from_token</span>  
	    <span class="k">ORDER</span> <span class="k">BY</span>  
	        <span class="n">tx_volume</span> <span class="k">DESC</span>  
	    <span class="k">LIMIT</span>  
	        <span class="mi">50</span>  
	<span class="p">),</span>  
	<span class="n">CTE_final</span> <span class="k">AS</span> <span class="p">(</span>  
	    <span class="k">SELECT</span>  
	        <span class="n">yyyymmdd</span><span class="p">,</span>  
	        <span class="k">CASE</span>  
	            <span class="k">WHEN</span> <span class="n">from_token</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">from_token</span> <span class="k">FROM</span> <span class="n">CTE_top_from_tokens</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">from_token</span>  
	            <span class="k">ELSE</span> <span class="s1">'Others'</span>  
	        <span class="k">END</span> <span class="k">AS</span> <span class="n">from_token</span><span class="p">,</span>  
	        <span class="k">SUM</span><span class="p">(</span><span class="n">tx_volume</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tx_volume</span>  
	    <span class="k">FROM</span>  
	        <span class="n">CTE_raw</span>  
	    <span class="k">GROUP</span> <span class="k">BY</span>  
	        <span class="n">yyyymmdd</span><span class="p">,</span>  
	        <span class="k">CASE</span>  
	            <span class="k">WHEN</span> <span class="n">from_token</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">from_token</span> <span class="k">FROM</span> <span class="n">CTE_top_from_tokens</span><span class="p">)</span> <span class="k">THEN</span> <span class="n">from_token</span>  
	            <span class="k">ELSE</span> <span class="s1">'Others'</span>  
	        <span class="k">END</span>  
	    <span class="k">ORDER</span> <span class="k">BY</span>  
	        <span class="n">yyyymmdd</span> <span class="k">DESC</span><span class="p">,</span>  
	        <span class="n">tx_volume</span> <span class="k">DESC</span>  
	<span class="p">)</span>  
	<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">CTE_final</span><span class="p">;</span>
</code></pre></div></div>

<p><img src="/assets/2022-12-03-dune-analytics/Ethereum DEX TX Volume (Token-wise).webp" alt="" /></p>

<h1 id="7-팁-대방출">7. 팁 대방출</h1>

<h2 id="71-cte를-적극적으로-사용하자">7.1. CTE를 적극적으로 사용하자.</h2>

<p>조회를 해보면 느낄 수 있는데 Instance가 엄청나게 많은 테이블의 경우, 쿼리 속도가 매우(X100) 느리다. 이 때문에 멘탈 케어를 위해 Premium Plan을 구독하고 싶은 욕구가 샘솟기도 한다. 그러나 Free Plan 상에서도 쿼리 속도를 10배 이상 늘릴 수 있는 방법이 있다. 바로  CTE(Common Table Expression)이다.</p>

<p>DB를 공부해보신 분들이라면 CTE 개념은 너무나도 기초적인 내용이지만, Dune 처럼 쿼리 속도가 심각하게 느린 환경일수록 CTE는 매우 중요한 가치를 지닌다. 필자가 경험해보니, 30분 걸리던 쿼리에 CTE를 활용함으로써 3분으로 단축된 적도 있었다.</p>

<p>CTE는 비단 쿼리문의 가독성을 높일 뿐 아니라, 여러 번 참조해야 할 테이블을 미리 Virtual Table로 메모리에 생성해둔 후 Re-read DB 과정 없이 메모리만을 참조할 수 있으므로 성능과 속도 역시 크게 향상될 수 있다. 다음 Framework를 항상 머리 속에 새겨놓도록 하자.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">WITH</span>  
	<span class="n">CTE_a</span> <span class="k">AS</span> <span class="p">(</span>  
		<span class="k">SELECT</span> <span class="o">*</span>  
		<span class="k">FROM</span> <span class="n">raw1</span>  
	<span class="p">),</span>  
	<span class="n">CTE_b</span> <span class="k">AS</span> <span class="p">(</span>  
		<span class="k">SELECT</span> <span class="o">*</span>  
		<span class="k">FROM</span> <span class="n">raw2</span>  
	<span class="p">)</span>  
	<span class="k">SELECT</span> <span class="o">*</span>  
	<span class="k">FROM</span> <span class="n">CTE_a</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span> <span class="n">CTE_b</span>  
		<span class="k">USING</span> <span class="p">(</span><span class="n">id</span><span class="p">)</span>  
	<span class="k">WHERE</span> <span class="n">CTE_a</span><span class="p">.</span><span class="n">id</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">id</span> <span class="k">FROM</span> <span class="n">CTE_b</span><span class="p">)</span>  
	<span class="p">;</span>
</code></pre></div></div>

<h2 id="72--주요-ca-address-labeling을-해두자">7.2.  주요 CA Address Labeling을 해두자.</h2>

<p>Data Labeling 작업은 비단 머신러닝의 지도학습(Supervised Learning)에만 요구되는 작업이 아니다. DeFi나 NFT 섹터 별로 주요 프로젝트들을 팔로우업 해야 한다면 각 프로젝트들이 배포한 CA Address를 꾸준히 찾아서 별도 데이터셋으로 관리하고, 또 업데이트 시 CA가 변경될 경우 해당 데이터셋 역시 주기적으로 변경해줘야 한다.</p>

<p>물론, <code class="language-plaintext highlighter-rouge">dex.trades</code> 같은 Spells 테이블의 경우 커뮤니티가 함께 DEX Name Labeling을 하여 편리하게 프로젝트별 현황을 파악할 수 있지만, 데이터 정합성을 결코 보장할 수 없다. 데이터 정합성을 위한 최고의 방법은 Uniswap, Sushiswap, BAYC, CryptoPunk 등 별로 배포한 CA Address를 직접 찾아 이를 Raw Tables나 Encoded Tables에서 조회하는 것이다.</p>

<h2 id="73--spark-sql--문법-공부를-하자">7.3.  Spark SQL  문법 공부를 하자.</h2>

<p>앞서 언급했듯이, 2023년 1분기 중으로 PostgreSQL 기반 DB Engine은 모두 사라지고, Spark SQL 기반인 Dune Engine v2로 개편될 예정이다. 그런데, MySQL, Oracle, PostgreSQL에 비해 Spark SQL은 문법이 상대적으로 까칠한(?) 편이다. 대부분의 데이터 분석가 분들이 Spark SQL보다 다른 SQL에 더욱 익숙하실 것이다. 따라서 이에 대한 대비가 필요하다.</p>

<p>Dune V1에서는 문법 요소가 Optional한 것들이 많아 개인의 쿼리 작성 취향에 따라 취사선택할 수 있어 부담이 적었다면, Dune V2에서는 아래와 같이 Requirable한 것들이 많아지므로 이를 반드시 정리를 하고 넘어가는 것을 추천한다. 자세한 비교표는  <a href="https://dune.com/docs/reference/dune-v2/query-engine/#spark-sql-postgressql-operator-changes">여기</a>를 참고하면 된다.</p>

<table>
  <thead>
    <tr>
      <th><strong>구분</strong></th>
      <th><strong>PostgreSQL</strong></th>
      <th><strong>SparkSQL</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Index Base</td>
      <td><code class="language-plaintext highlighter-rouge">1</code></td>
      <td><code class="language-plaintext highlighter-rouge">0</code></td>
    </tr>
    <tr>
      <td>Column 키워드</td>
      <td><code class="language-plaintext highlighter-rouge">"block_time"</code></td>
      <td><code class="language-plaintext highlighter-rouge">block_time</code> (Back Tick)</td>
    </tr>
    <tr>
      <td>Alias Naming</td>
      <td><code class="language-plaintext highlighter-rouge">AS "dt"</code></td>
      <td><code class="language-plaintext highlighter-rouge">AS dt</code> (Back Tick</td>
    </tr>
    <tr>
      <td>Interval 표현</td>
      <td><code class="language-plaintext highlighter-rouge">INTERVAL '1day'</code></td>
      <td><code class="language-plaintext highlighter-rouge">INTERVAL '1 day'</code></td>
    </tr>
    <tr>
      <td>NULL Array 정의</td>
      <td><code class="language-plaintext highlighter-rouge">NULL::integer[]</code></td>
      <td><code class="language-plaintext highlighter-rouge">CAST(NULL AS ARRAY&lt;int&gt;)</code></td>
    </tr>
  </tbody>
</table>

<h1 id="8-outro-lets-mingle-in">8. Outro: Let’s mingle in!</h1>

<p>글을 읽으며 공감 되었겠지만, Dune은 커뮤니티를 활용하는 것이 굉장히 중요한 온체인 데이터 플랫폼이다. Raw Tables, Decoded Tables 외에 수많은 테이블들은 커뮤니티에 의해 유지보수되고, 데이터 정합성 이슈를 어떻게 개선해가고 있는지, 그리고 어떤 식으로 데이터를 추출하고 있는지 등 이 모든 것들을 제대로 공부하고 이해해가기 위해서는 꾸준히 커뮤니티 내 Dune Wizard들과 교류를 해야 한다.</p>
<ul>
  <li><a href="https://dune.com/browse/dashboards/favorite">Wizard들이 만들어놓은 대시보드들</a></li>
  <li><a href="https://dune.com/community">Dune Community</a></li>
</ul>

<p>따라서 독자 분들께 감히 손을 내밀고 싶다. 우리 함께 온체인 데이터를 잘 활용하기 위해서 함께 많은 것들을 공유하고, 다양한 피드백들을 주고 받자고. 우리는 Web 3.0 시대의 데이터 마법사, Dune Wizard이니까. Let’s web 3.0 the data analytics!</p>

<p><img src="/assets/2022-12-03-dune-analytics/dune-xmas.webp" alt="" /></p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="korean" /><category term="blockchain" /><category term="on_chain_data" /><category term="sql" /><summary type="html"><![CDATA[이번 시간에는 온체인 데이터 애널리틱스 플랫폼들 중 가장 핫하고 커뮤니티가 큰 Dune Analytics의 구조와 사용 방법에 대해 알아볼 것이다. 데이터 사이언스를 공부하고 블록체인 기업에서 일하는 본인에게 Dune Analytics는 가만히 쳐다보기만 해도 늘 심장이 쿵쾅거리며 텐션이 업되는 유토피아 같은 곳이다. 하지만 안타깝게도, 이 설레는 마음을 이어 받아 데이터 구조를 이해하고 사용 방법을 익히기 위한 레퍼런스가 상당히 부족하다는 것을 알게 되었다. 그리하여 나 처럼 데이터만 보면 마음이 벅차오르는 이 시대 모든 온체인 데이터 러버들에게 이 글을 바치고자 한다. Happy Duning!]]></summary></entry><entry><title type="html">Amplitude 톺아보기</title><link href="http://localhost:4000/amplitude/" rel="alternate" type="text/html" title="Amplitude 톺아보기" /><published>2022-11-01T00:00:00+09:00</published><updated>2022-11-01T00:00:00+09:00</updated><id>http://localhost:4000/amplitude</id><content type="html" xml:base="http://localhost:4000/amplitude/"><![CDATA[<blockquote>
  <p>이번 아티클에서 다룰 이야기는 바로  <strong>Amplitude</strong>(앰플리튜드)다. 데이터 분석 포지션으로 입사를 한 후, 가장 먼저 접한 것이 Amplitude였는데, 새싹(🍀) 처럼 초심이 가득했던 마음으로 하나하나 익혀간 덕분에 애정이 각별한 툴이다. 개발팀, 마케팅팀 등 디센트와 함께 심장이 활활 타오르며 일하는 팀원 분들과 함께 하나하나 세팅하면서 익힌 Amplitude를 톺아보도록 하겠다.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>데이터 기반 성장의 시대</li>
  <li>Amplitude: “나는 네가 지난 여름에 한 일을 알고 있다.”
    <ul>
      <li>2.1. 고객  (User)</li>
      <li>2.2. 행동 (Event)</li>
    </ul>
  </li>
  <li>DB Schema를 떠올려보면 Amplitude도 결국 SQL 날리는 거야!</li>
  <li>Amplitude는 결국 전부 필터링 &amp; 분류, That’s enough!</li>
  <li>그래서 Amplitude 고수가 되려면 어떻게 해야 하는데?</li>
</ol>

<hr />

<h1 id="1-데이터-기반-성장의-시대">1. 데이터 기반 성장의 시대</h1>

<p>우리는 데이터의 시대에 살고 있다. 데이터 공부를 한 사람 입장에서 아주 자기중심적이고 과장된 표현이라는 것을 인정하지만, 데이터를 보지 않는 기업이나 국가기관은 이제 거의 없다.</p>

<p>빅데이터의 수집, ETL(추출, 변환, 적재) 인프라와 하드웨어의 발전 덕분에 수 년 전 데이터가 돈이 될 수 있는 시대에 진입했었다면, 지금은 기업의 경영과 국가 정책 결정 과정에 있어서 데이터가 필수 불가결한 수준까지 도달했다. 즉, 데이터 없이는 생존하기 어려운 시대가 온 것이다.</p>

<p>물론 데이터가 의사결정이나 전략적 방향 수립을 위한 유일무이한 관점이라고 말할 수는 없다. 그럼에도 불구하고, 사람의 직관으로 결론 내리기 어려운 것들에 대해 데이터가 매우 큰 힘을 발휘해줄 수 있으며, 효율적인 전략 방향 설정과 티핑 포인트(Tipping Point)를 탐색하는 데 데이터는 매우 중요한 도구적 가치를 지닌다.</p>

<p>필자가 근무 중인 모 기업 역시, 전사적으로 데이터 분석 인프라를 갖춤으로써 데이터 기반 의사결정과 그로스 해킹 과정을 숱하게 겪고 있다. Amplitude, Google Analytics, AppsFlyer 등 3rd-party 데이터 분석 툴은 물론이고, BigQuery, Redash, 및 로컬 DB를 통해서도 분석에 적극적으로 활용하고 있다.</p>

<p><img src="/assets/2022-11-01-amplitude/amplitude-logo.jpeg" alt="Amplitude Logo" /></p>
<blockquote>
  <p>Amplitude의 로고. 이니셜인 A를 Line Chart 처럼 형상화한 것이 개인적으로 참 마음에 든다.</p>
</blockquote>

<p>데이터 분석 스토리 시리즈의 첫 번째 이야기는 바로  <strong>Amplitude</strong>(앰플리튜드)다. 데이터 분석 포지션으로 입사를 한 후, 가장 먼저 접한 것이 Amplitude였는데, 새싹(🍀) 처럼 초심이 가득했던 마음으로 하나하나 익혀간 덕분에 애정이 각별한 툴이다. 개발팀, 마케팅팀 등 디센트와 함께 심장이 활활 타오르며 일하는 팀원 분들과 함께 하나하나 세팅하면서 익힌 Amplitude를 톺아보도록 하겠다.</p>

<p><img src="/assets/2022-11-01-amplitude/martian.jpeg" alt="The Martian" /></p>
<blockquote>
  <p>“개발자님! 이벤트 세팅해주신 것들 트랙킹된다! 트랙킹된다! 카피 댓!” (영화 마션)</p>
</blockquote>

<h1 id="2-amplitude-나는-네가-지난-여름에-한-일을-알고-있다">2. Amplitude: “나는 네가 지난 여름에 한 일을 알고 있다.”</h1>

<p><img src="/assets/2022-11-01-amplitude/i-know-what-you-did-last-summer.png" alt="I Know What You Did Last Summer" /></p>
<blockquote>
  <p>“나는 네가 지난 여름에 한 일을 알고 있다.” (1997년 개봉한 짐 길레스피 감독의 영화)</p>
</blockquote>

<p>Amplitude를 살짝 섬뜩하게 표현하면, “디센트 앱을 이용하는 고객들이 무엇을 했는지 다 기록하고, 조회할 수 있는 툴”이다. 즉, 고객들이 다음과 같은 행동을 했을 때 Amplitude는 이를 데이터로 기록해두고, 데이터 분석을 하는 나는 이를 실시간 차트로 표현할 수 있다.</p>
<ul>
  <li>회원가입을 완료하다.</li>
  <li>장바구니에 상품을 추가하다.</li>
  <li>프로모션 배너를 클릭하다.</li>
</ul>

<p>물론, Amplitude는 각국의 개인정보 보호법을 준수하기 위해 모든 사용자 식별자를 암호화하여 생성한다. 이 때문에 데이터 분석가는 특정 고객의 이름이나 생년월일을 Amplitude에서 실시간으로 추적할 수 없을 뿐더러, 그 어떠한 제3자 데이터베이스에도 보관되지 않는다. (물론, 다른 직원들도 알 방법이 없다.) 다만, 특정 행동을 한 고객들의 수, 국가, 운영체제 등으로 그룹화하여 분석을 진행할 뿐이다.</p>

<p>앞서 Amplitude를 섬뜩하게 표현했는데, 위키피디아 스타일로 정의를 내리자면 다음이 적절할 것 같다.</p>
<blockquote>
  <p>“Amplitude는  <strong>고객</strong>의  <strong>행동</strong>을 기록하고, 조회할 수 있는 툴이다.”</p>
</blockquote>

<p><strong>고객</strong>과 <strong>행동</strong>의 의미가 정확히 무엇인지 나누어 살펴보자.</p>

<h2 id="21-고객--user">2.1. 고객  (User)</h2>

<p>Amplitude에서는 고객을 User로 명명하여, 사용 기기(Device)의 정보나 로그인 정보 등 다양한 방식으로 식별하고 있다. User를 식별하는 것은 앱 데이터를 분석하는 과정에서 매우 (X 100) 중요하다. 가령, “손흥민”이라는 고객을 2명이 아닌 1명의 고객으로 잘 식별해야만 해당 고객이 회원가입을 하고, 최종 상품을 구매할 경우, 전환율(Conversion Rate)을 정확하게 측정할 수 있기 때문이다. Amplitude에서는 이러한 고객의 식별자를 Amplitude ID로 명명하고 있다.</p>

<p>Amplitude의  <a href="https://help.amplitude.com/hc/en-us/articles/115003135607-Track-unique-users-in-Amplitude#h_5c321a51-5d16-43f0-a4fe-f907567ad63b">Tech Docs</a>를 보면 식별 메커니즘을 명확하게 설명하고 있는데, 고객을 정확하게 식별하기 위해 2중으로 식별 알고리즘을 적용하여  <strong>Amplitude ID</strong>를 생성하고 있다.</p>

<table>
  <thead>
    <tr>
      <th><strong>알고리즘</strong></th>
      <th><strong>우선순위</strong></th>
      <th><strong>의미</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>User ID</td>
      <td>1</td>
      <td>앱 개발자가 직접 설정한 사용자 식별 방식</td>
    </tr>
    <tr>
      <td>Device ID</td>
      <td>2</td>
      <td>사용 기기의 IDFV를 가져오거나 Random Alphanumeric 문자열을 쿠키 데이터로 심어놓음</td>
    </tr>
    <tr>
      <td>Amplitude ID</td>
      <td>3</td>
      <td>User ID &gt; Device ID 순으로 참조하여 최종 고객 식별</td>
    </tr>
  </tbody>
</table>

<h2 id="22-행동-event">2.2. 행동 (Event)</h2>

<p>행동은 단어 그대로, 고객의 특정 행동을 의미한다. 이를 좀 더 개발스럽게(?) 표현하면, 앱 상에서 고객이 클라이언트 내에서 서버를 향해 요청(Request)한 트랜잭션이라고 할 수 있다. 개발자가 아니라면 외계어(👾)처럼 들릴 수 있으니, 다음 그림을 한 번 보도록 하자.</p>

<p><img src="/assets/2022-11-01-amplitude/user-events.png" alt="" /></p>
<blockquote>
  <p>필자는 그림에 소질이 없으니, 못생긴 그림이어도 이해를 바란다.</p>
</blockquote>

<p>즉, 행동(Event)은 공지사항을 클릭하거나, 구매를 완료하는 등 서버에 전달될 수 있는 사건들을 의미하는 것이다.</p>

<p>자, 그럼 위키피디아 스타일의 Amplitude 정의를 좀 더 아름답게 표현해보면, 다음과 같다.</p>
<blockquote>
  <p>“Amplitude는  <strong>주어(User)</strong>  +  <strong>동사(Event)</strong>로 데이터를 기록하고, 우리는 이 데이터를 조회할 수 있다.”</p>
</blockquote>

<p>가령, 월드클래스️⚽손흥민과 피겨퀸 💃김연아, 총 2명의 고객이 우리 앱을 사용하고 있다고 가정해보자. 그리고 흥민님과 연아님은 오늘 디센트 앱에서 다음과 같은 Event를 발생시켰다.</p>

<table>
  <thead>
    <tr>
      <th><strong>User</strong></th>
      <th><strong>Event</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>흥민</td>
      <td>회원가입을 완료했다.</td>
    </tr>
    <tr>
      <td>흥민</td>
      <td>장바구니에 상품을 추가했다.</td>
    </tr>
    <tr>
      <td>흥민</td>
      <td>프로모션 페이지를 조회했다.</td>
    </tr>
    <tr>
      <td>연아</td>
      <td>공지사항을 클릭했다.</td>
    </tr>
    <tr>
      <td>연아</td>
      <td>댓글을 작성했다.</td>
    </tr>
    <tr>
      <td>연아</td>
      <td>프로모션 페이지를 조회했다.</td>
    </tr>
  </tbody>
</table>

<p>그리고 데이터 덕후인 필자가 아래와 같은 궁금점을 해결하기 위해 Amplitude로 데이터 조회를 해보니, 다음과 같은 결과를 얻을 수 있었다.</p>

<ul>
  <li>영국(United Kingdom)에서 접속한 User의 Event가 무엇이 있을까?</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>User</strong></th>
      <th><strong>Event</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>XXX</td>
      <td>회원가입을 완료했다.</td>
    </tr>
    <tr>
      <td>XXX</td>
      <td>장바구니에 상품을 추가했다.</td>
    </tr>
    <tr>
      <td>XXX</td>
      <td>프로모션 페이지를 조회했다.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>참고로 흥민님은 작성일 현재 영국 런던에 거주한다.
오호, 영국 고객들이 이런 이벤트들을 행했구나!</p>
</blockquote>

<ul>
  <li>“프로모션 페이지 조회” Event를 행한 User는 총 몇 명일까?</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>User</strong></th>
      <th><strong>Event</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>XXX</td>
      <td>프로모션 페이지를 조회했다.</td>
    </tr>
    <tr>
      <td>XXX</td>
      <td>프로모션 페이지를 조회했다.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>오늘 고객 2명이 디센트 아카데미를 클릭했구나!</p>
</blockquote>

<h1 id="3-db-schema를-떠올려보면-amplitude도-결국-sql-날리는-거야">3. DB Schema를 떠올려보면 Amplitude도 결국 SQL 날리는 거야!</h1>

<p>Amplitude의 내부 데이터베이스를 살펴본 적도 없고 살펴볼 수도 없겠지만, Amplitude가 데이터를 기록하는 방식을 다음 ERD 다이어그램 정도로 이해하면 훨씬 습득력이 향상될 것 같다.</p>
<ul>
  <li>물론, Amplitude Data Export 기능을 활용하게 된다면 테이블 구조를 더욱 명확하게 확인할 수 있을 것이다.</li>
</ul>

<p><img src="/assets/2022-11-01-amplitude/user-events-erd.png" alt="" /></p>

<p>즉, User에는 식별자인 ID 뿐만 아니라, 거주 국가, 언어, 사용 기기, 운영체제 등 프로파일에 해당하는 정보를 가지고 있고, 각 User는 1개 이상의 Event를 행한다. 그리고 각 Event 역시 ID 뿐만 아니라, 상세 프로파일을 가지고 있다.</p>

<h1 id="4-amplitude는-결국-전부-필터링--분류-thats-enough">4. Amplitude는 결국 전부 필터링 &amp; 분류, That’s enough!</h1>

<p>Amplitude가 데이터를 수집하는 아키텍처를 굉장히 복잡하게 설명했지만, 사실 데이터 분석 업무에 이를 잘 녹여내기 위해서는 크게  <strong>필터링</strong>과  <strong>분류</strong>만 잘 하면 된다. 이를 좀 더 SQL스럽게(?) 말하면,  <strong>WHERE</strong> Syntax와  <strong>GROUP BY</strong>  Syntax만 잘 먹여주면 된다. 가령 다음과 같은 질문을 Amplitude가 쉽게 대답해줄 수 있다.</p>

<h3 id="전체-사용자들을-국가country로-분류-좀-해줄래">전체 사용자들을 국가(Country)로 분류 좀 해줄래?</h3>

<p><img src="/assets/2022-11-01-amplitude/user-group-by-country.png" alt="" /></p>
<blockquote>
  <p>Amplitude의 User Composition 차트</p>
</blockquote>

<ul>
  <li>다음 SQL 문과 너무 유사한 컨셉이지 않은가?!
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span>
      <span class="n">country</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">user_cnt</span>
  <span class="k">FROM</span>
      <span class="n">users</span>
  <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="n">country</span>
  <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="n">user_cnt</span> <span class="k">DESC</span>
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="사용자-가이드-클릭-수를-일자-별로-흐름을-알려줄래">사용자 가이드 클릭 수를 일자 별로 흐름을 알려줄래?</h3>

<p><img src="/assets/2022-11-01-amplitude/click-by-date.png" alt="" /></p>
<blockquote>
  <p>Amplitude의 Segmentation 차트</p>
</blockquote>

<ul>
  <li>다음 SQL 문과 너무 유사한 컨셉이지 않은가?
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span>
      <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">user_cnt</span>
  <span class="k">FROM</span>
      <span class="n">events</span>
  <span class="k">WHERE</span>
      <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'click_academy'</span>
  <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">)</span>
  <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<h1 id="5-그래서-amplitude-고수가-되려면-어떻게-해야-하는데">5. 그래서 Amplitude 고수가 되려면 어떻게 해야 하는데?</h1>

<p>엑셀과 SQL이 그렇듯, Amplitude도 쓰면 쓸수록 실력이 일취월장한다고 생각한다.</p>
<ul>
  <li>“아, 내가 이 경우를 고려하지 못하고 데이터를 추출했구나.”</li>
  <li>“이런 된장, Null 값을 제외 못했네.”</li>
  <li>“망했어, 기간 설정을 잘못했어.”</li>
  <li>“비율을 거꾸로 적용했네. 어쩐지 이상하더라.”</li>
</ul>

<p>이러한 시행착오가 쌓이면 쌓일수록 (그렇다, 내 이야기 맞다.) 정확한 필터링과 분류 능력이 향상되는 것 같다. 추가로, 심심할 때마다 다음 컨텐츠들을 읽어보면서 틈틈이 공부하는 것도 매우 도움이 될 것이라고 생각한다.</p>
<ul>
  <li><a href="https://medium.com/@amplitudeHQ">Amplitude의 공식 Medium Page</a></li>
  <li><a href="https://timothydaniell.medium.com/">Timothy Daniell의 Medium Page</a></li>
  <li><a href="https://blog.ab180.co/category/amplitude">AB180 Amplitude 블로그</a></li>
</ul>

<p>그럼, 이 땅의 모든 데이터 분석가, 마케터, 프론트엔드 개발자들을 응원하며, 글을 마친다. 또 다른 주제로 다시 돌아온다!</p>

<p><img src="/assets/2022-11-01-amplitude/the-simpsons.jpeg" alt="" /></p>
<blockquote>
  <p>너무 데이터 분석만 하지말고, 가끔씩 이렇게 멘탈을 놓고 춤도 춰야 한다.</p>
</blockquote>

<p><img src="/assets/2022-11-01-amplitude/alan-turing.png" alt="" /></p>
<blockquote>
  <p>“Those who can imagine anything, can create the impossible.” (어떤 것이든 상상이 가능한 사람은 불가능을 가능으로 바꿀 수 있다. ) - Alan Turing (튜링 머신의 아버지, 1912~1954)</p>
</blockquote>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="korean" /><category term="amplitude" /><category term="data_analytics" /><summary type="html"><![CDATA[이번 아티클에서 다룰 이야기는 바로 Amplitude(앰플리튜드)다. 데이터 분석 포지션으로 입사를 한 후, 가장 먼저 접한 것이 Amplitude였는데, 새싹(🍀) 처럼 초심이 가득했던 마음으로 하나하나 익혀간 덕분에 애정이 각별한 툴이다. 개발팀, 마케팅팀 등 디센트와 함께 심장이 활활 타오르며 일하는 팀원 분들과 함께 하나하나 세팅하면서 익힌 Amplitude를 톺아보도록 하겠다.]]></summary></entry><entry><title type="html">탈중앙화: 개념과 측정 방법, 그리고 한계</title><link href="http://localhost:4000/measuring-decentralization/" rel="alternate" type="text/html" title="탈중앙화: 개념과 측정 방법, 그리고 한계" /><published>2022-07-12T00:00:00+09:00</published><updated>2022-07-12T00:00:00+09:00</updated><id>http://localhost:4000/measuring-decentralization</id><content type="html" xml:base="http://localhost:4000/measuring-decentralization/"><![CDATA[<blockquote>
  <p>“블록체인 트릴레마를 구성하는 요소 중 하나인 탈중앙화(Decentralization)를 측정할 수 있는 여러 가지 방법론이 제시되고 있다. 이번 아티클에서는 탈중앙화를 측정할 수 있는 4가지 방법을 토대로 실험을 진행한 후, 각 방법들의 한계점에 대해 진단하고자 한다.”</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>탈중앙화의 개념</li>
  <li>탈중앙화의 측정
    <ul>
      <li>2.1. 준비: 데이터 수집</li>
      <li>2.2. 유형별 측정</li>
      <li>2.3. Recap</li>
    </ul>
  </li>
  <li>결론: “탈중앙화와 빈부격차는 다르다!”</li>
</ol>

<hr />

<h1 id="1-탈중앙화의-개념">1. 탈중앙화의 개념</h1>

<p><img src="/assets/2022-07-12-measuring-decentralization/blockchain-trilemma.webp" alt="Blockchain Trilemma" /></p>
<blockquote>
  <p>블록체인 트릴레마(Trilemma)</p>
</blockquote>

<p>블록체인 트릴레마(Trilemma)란, 확장성(Scalability), 보안성(Security), 탈중앙화(Decentralization) 세 가지 지표를 동시에 모두 향상시키기 어려운 블록체인의 기술적 성격을 의미한다. 즉, 블록체인 네트워크를 설계하는 과정에서 특정 두 가지 지표를 향상시키고자 할 경우, 나머지 하나는 반드시 약화될 수밖에 없다는 것이다.</p>

<p>아직까지 이러한 트릴레마를 극복한 뚜렷한 사례가 없는 가운데, 세 가지 지표 중 하나인 탈중앙화에 대한 여러 가지 측정 방법들이 제시되고 있다. 이번 시간에는 탈중앙화를 정량화할 수 있는 여러 가지 방법들에 대해 소개하고, 각 체인 별로 측정을 해보고자 한다.</p>

<p>탈중앙화는 조직이나 집단의 의사결정권이나 참여도가 얼마나 분산되었는지를 의미하는 용어이다. 특히, 블록체인 네트워크에서의 탈중앙화란 블록 생성과 합의에 대한 의사결정권이나 보상청구권이 얼마나 분산화되었는지를 의미한다. 구체적으로 의미를 파헤치자면, 작업증명(Proof of Work)과 지분증명(Proof of Stake)의 경우 탈중앙화는 각각 다음과 같은 의미를 지닐 것이다.</p>

<p><img src="/assets/2022-07-12-measuring-decentralization/consensus-mechanisms.webp" alt="Consensus Mechanisms" /></p>
<blockquote>
  <p>Consensus Mechanism</p>
</blockquote>

<ul>
  <li><strong>작업증명 기반 네트워크에서의 탈중앙화</strong>: 해시레이트(Hashrate) 혹은 연산 능력(Computing Power)이 얼마나 골고루 분산 되어 있는가</li>
  <li><strong>지분증명 기반 네트워크에서의 탈중앙화</strong>: 스테이킹 자산(Staked Assets)으로 표현되는 지분량이 얼마나 골고루 분산 되어 있는가</li>
</ul>

<h1 id="2-탈중앙화의-측정">2. 탈중앙화의 측정</h1>

<h2 id="21-준비-데이터-수집">2.1. 준비: 데이터 수집</h2>

<hr />

<p>다음 10개의 네트워크를 선정하고, 탈중앙화 정도를 측정하기 위한 데이터를 수집하였다.</p>
<ul>
  <li><a href="https://blockchair.com/ethereum/charts/hashrate-distribution">Ethereum (ETH)</a>: 해시레이트(Hashrate) 분포</li>
  <li><a href="https://bscscan.com/validators">Binance Smart Chain</a>: 의사결정권(Voting Power) 분포</li>
  <li><a href="https://explorer-xp.avax.network/validators">Avalanche (AVAX)</a>: 지분량(Staked Assets) 분포</li>
  <li><a href="https://solanabeach.io/validators">Solana (SOL)</a>: 지분량(Staked Assets) 분포</li>
  <li><a href="https://explorer.fantom.network/staking">Fantom (FTM)</a>: 지분량(Staked Assets) 분포</li>
  <li><a href="https://polygonscan.com/stat/miner?range=14&amp;blocktype=blocks">Polygon (MATIC)</a>: 블록 검증 횟수(Number of Blocks Validated) 분포</li>
  <li><a href="https://tronscan.org/#/sr/votes">Tron (TRX)</a>: 의사결정권(Voting Power) 분포</li>
  <li><a href="https://crypto.org/explorer/validators">Cronos (CRO)</a>: 지분량(Staked Assets) 분포</li>
  <li><a href="https://scope.klaytn.com/">Klaytn (KLAY)</a>: 블록 생성 횟수(Total Proposed Blocks) 분포</li>
  <li><a href="https://celo.org/validators/explore">Celo (CELO)</a>: 지분량(Staked Assets) 분포</li>
</ul>

<p>이상적으로는 해시레이트나 지분량 데이터를 수집하는 것이 가장 바람직하지만, 블록체인 익스플로러들의 제공 데이터 한계로 인해 가능한 한 “의사결정권이나 보상청구권”의 의미와 직접적으로 연관되는 데이터를 대체 수집하였다. 가령, 다음의 데이터들이 있다.</p>

<ul>
  <li><strong>의사결정권(Voting Power) 분포</strong>: 해시레이트나 지분량에 비례하여 Voting Power를 행사할 것이므로, 탈중앙화를 측정하기 위한 수단으로 대체 활용 가능</li>
  <li><strong>블록 검증 횟수(Number of Blocks Validated) 분포</strong>: 해시레이트나 지분량에 비례하여 검증 기회를 부여 받을 것이므로, 탈중앙화를 측정하기 위한 수단으로 대체 활용 가능</li>
  <li><strong>블록 생성 횟수(Total Proposed Blocks) 분포</strong>: 해시레이트나 지분량에 비례하여 블록 생성 기회를 부여 받을 것이므로, 탈중앙화를 측정하기 위한 수단으로 대체 활용 가능</li>
</ul>

<p>데이터를 수집한 후, Pie Chart로 각 분포를 시각화한 결과는 다음과 같다.
<img src="/assets/2022-07-12-measuring-decentralization/Utilized Seaborn Library in Python 3.webp" alt="Utilized Seaborn Library in Python 3" /></p>
<blockquote>
  <p>Utilized Seaborn Library in Python 3</p>
</blockquote>

<h2 id="22-유형별-측정">2.2. 유형별 측정</h2>

<hr />

<p><strong>(1) 허핀달-허쉬만 지수 (HHI, Herfindal-Hershman Index)</strong></p>

<p><img src="/assets/2022-07-12-measuring-decentralization/hhi.webp" alt="HHI 공식" /></p>
<blockquote>
  <p>HHI 공식</p>
</blockquote>

<p>HHI 공식허핀달-허쉬만 지수(이하 HHI)는 특정 시장의 집중도를 평가할 때 사용되는 지표로서, 시장 내 모든 사업자들의 각 시장 점유율(%)을 제곱하여 합한 값을 말한다. 시장의 독과점에 대한 공정거래법을 적용하는 척도로 사용되기도 하는데, HHI는 다음과 같은 특징을 지니고 있다.</p>

<table>
  <thead>
    <tr>
      <th><strong>HHI</strong></th>
      <th><strong>Value</strong></th>
      <th><strong>탈중앙화 정도</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Minimum</td>
      <td><code class="language-plaintext highlighter-rouge">0.0000</code></td>
      <td>완전 탈중앙화</td>
    </tr>
    <tr>
      <td>Maximum</td>
      <td><code class="language-plaintext highlighter-rouge">1.0000</code></td>
      <td>완전 중앙화</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>특정 상위 N개 주체의 점유율뿐만 아니라, 모든 주체들의 점유율을 반영할 수 있다.</li>
  <li><a href="https://www.ftc.go.kr/callPop.do?url=%2FjargonSearchView.do%3Fkey%3D451&amp;dicseq=428&amp;titl=%ED%97%88%ED%95%80%EB%8B%AC-%ED%97%88%EC%89%AC%EB%A7%8C+%EC%A7%80%EC%88%98%28Herfindal-Hershman+Index%29">HHI의 역수는 이론상 당해 시장 내에 똑같은 규모를 갖는 기업들이 존재한다고 가정할 때 얼마나 많은 기업이 존재할 것인가를 나타내며 그 수효가 많으면 많을수록 그 시장은 보다 경쟁적이라는 것을 시사한다.</a></li>
  <li><a href="https://www.ftc.go.kr/callPop.do?url=/jargonSearchView.do?key=451&amp;dicseq=428&amp;titl=%ED%97%88%ED%95%80%EB%8B%AC-%ED%97%88%EC%89%AC%EB%A7%8C%20%EC%A7%80%EC%88%98(Herfindal-Hershman%20Index)">미국은 합병 심사 시 시장집중 측정지표로 HHI를 다음과 같이 평가하고 있다.</a></li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>HHI</strong></th>
      <th><strong>Class</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0.0000 &lt; HHI &lt;= 0.1000</code></td>
      <td>비집중적인 시장</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0.1000 &lt; HHI &lt;= 0.1800</code></td>
      <td>어느 정도 집중적인 시장</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0.1800 &lt; HHI &lt;= 1.0000</code></td>
      <td>고도로 집중적인 시장</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># User-defined Function to get HHI in Python 3
</span><span class="k">def</span> <span class="nf">getHHI</span><span class="p">(</span><span class="n">series</span><span class="p">):</span>
	<span class="n">total</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span><span class="n">series</span><span class="p">)</span>
	<span class="n">series_perc</span> <span class="o">=</span> <span class="n">series</span> <span class="o">/</span> <span class="nf">float</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>
	<span class="n">HHI</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span><span class="n">series_perc</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>
	<span class="k">return</span> <span class="n">HHI</span>
</code></pre></div></div>

<p><img src="/assets/2022-07-12-measuring-decentralization/hhi-by-blockchain.webp" alt="(좌) 중앙화 ↑ (우) 탈중앙화 ↑" /></p>
<blockquote>
  <p>(좌) 중앙화 ↑ (우) 탈중앙화 ↑</p>
</blockquote>

<p><strong>(2)지니 계수 (Gini Coefficient)</strong></p>

<p><img src="/assets/2022-07-12-measuring-decentralization/gini.webp" alt="Gini Coefficient" /></p>
<blockquote>
  <p><a href="https://ko.wikipedia.org/wiki/%EC%A7%80%EB%8B%88_%EA%B3%84%EC%88%98">Source</a></p>
</blockquote>

<p>Source지니 계수(이하 Gini)는 경제적 불평등 및 빈부 격차의 정도를 계수화한 지표로, 한 국가 내애서의 소득 불평등 정도를 측정하기 위해 가장 널리 사용된다. 위 그림에서는 직각삼각형의 넓이 중 색칠된 영역의 넓이가 차지하는 비율로 산출된다. Gini는 다음과 같은 특징을 지닌다.</p>

<table>
  <thead>
    <tr>
      <th><strong>Gini</strong></th>
      <th><strong>Value</strong></th>
      <th><strong>탈중앙화 정도</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Minimum</td>
      <td><code class="language-plaintext highlighter-rouge">0.0000</code></td>
      <td>완전 탈중앙화</td>
    </tr>
    <tr>
      <td>Maximum</td>
      <td><code class="language-plaintext highlighter-rouge">1.0000</code></td>
      <td>완전 중앙화</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>각 주체의 점유율(%)을 오름차순으로 정렬한 후, 좌표평면(X축은 각 주체의 누적 수, Y축은 각 주체의 누적 점유율) 상에 표현한 것이 로렌츠 곡선(Lorenz Curve)이다.</li>
  <li>경제적으로 완전히 평등할 경우, 로렌츠 곡선이 45도 각도의 직선 형태가 될 것이고, 불평등할수록 하방 굴곡도가 높아질 것이다.</li>
  <li>Gini는 시장 전체의 분배 상태를 하나의 수치로 나타내므로, 특정 소수의 영향력에 대해서는 정보가 누락될 가능성이 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># User-defined Function to get Gini Coefficient in Python 3
</span><span class="k">def</span> <span class="nf">getGini</span><span class="p">(</span><span class="n">series</span><span class="p">):</span>  
	<span class="n">series_sorted</span> <span class="o">=</span> <span class="nf">sorted</span><span class="p">(</span><span class="n">series</span><span class="p">)</span>  
	<span class="n">height</span><span class="p">,</span> <span class="n">area</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>  
	<span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">series_sorted</span><span class="p">:</span>  
		<span class="n">height</span> <span class="o">+=</span> <span class="n">value</span>  
		<span class="n">area</span> <span class="o">+=</span> <span class="n">height</span> <span class="o">-</span> <span class="n">value</span> <span class="o">/</span> <span class="mf">2.</span>  
	<span class="n">fair_area</span> <span class="o">=</span> <span class="n">height</span> <span class="o">*</span> <span class="nf">len</span><span class="p">(</span><span class="n">series</span><span class="p">)</span> <span class="o">/</span> <span class="mf">2.</span>  
	<span class="n">Gini</span> <span class="o">=</span> <span class="p">(</span><span class="n">fair_area</span> <span class="o">-</span> <span class="n">area</span><span class="p">)</span> <span class="o">/</span> <span class="n">fair_area</span>  
	<span class="k">return</span> <span class="n">Gini</span>
</code></pre></div></div>

<p><img src="/assets/2022-07-12-measuring-decentralization/gini-by-blockchain.webp" alt="(좌) 중앙화 ↑ (우) 탈중앙화 ↑" /></p>
<blockquote>
  <p>(좌) 중앙화 ↑ (우) 탈중앙화 ↑</p>
</blockquote>

<p><strong>(3) 엔트로피 (Entropy)</strong></p>

<p><img src="/assets/2022-07-12-measuring-decentralization/entropy.webp" alt="Entropy" /></p>
<blockquote>
  <p>Entropy 공식</p>
</blockquote>

<p>엔트로피는 자연과학이나 정보이론에서 중요하게 다뤄지는 지표로, 확률변수의 불확실성이나 데이터의 혼잡도를 측정하기 위해 사용된다. 엔트로피는 다음과 같은 특징을 지닌다.</p>

<table>
  <thead>
    <tr>
      <th><strong>Entropy</strong></th>
      <th><strong>Value</strong></th>
      <th><strong>탈중앙화 정도</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Minimum</td>
      <td><code class="language-plaintext highlighter-rouge">0.0000</code></td>
      <td>완전 중앙화</td>
    </tr>
    <tr>
      <td>Maximum</td>
      <td><code class="language-plaintext highlighter-rouge">Infinite</code></td>
      <td>완전 탈중앙화</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>주어진 데이터 집합 내에서 서로 다른 종류의 항목들(Datapoints)이 많을 수록 엔트로피가 높고, 같은 종류의 항목들(Datapoints)이 많을 수록 엔트로피가 낮다.</li>
  <li>블록체인의 탈중앙화 지수로 활용할 경우, 엔트로피가 높을 수록 의사결정권이 잘 분산되어 있고, 엔트로피가 낮을 수록 의사결정권이 특정 소수에 집중되어 있다고 판단해볼 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># User-defined Function to get Entropy in Python 3
</span><span class="k">def</span> <span class="nf">getEntropy</span><span class="p">(</span><span class="n">series</span><span class="p">):</span>
	<span class="n">total</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span><span class="n">series</span><span class="p">)</span>
	<span class="n">series_perc</span> <span class="o">=</span> <span class="n">series</span> <span class="o">/</span> <span class="nf">float</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>
	<span class="n">series_perc</span> <span class="o">=</span> <span class="n">series_perc</span><span class="p">[</span><span class="n">series_perc</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">]</span>
	<span class="n">series_perc_list</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">series_perc</span><span class="p">)</span>
	<span class="n">Entropy</span> <span class="o">=</span> <span class="mi">0</span>
	<span class="k">for</span> <span class="n">each</span> <span class="ow">in</span> <span class="n">series_perc_list</span><span class="p">:</span>
		<span class="n">Entropy</span> <span class="o">+=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log2</span><span class="p">(</span><span class="n">each</span><span class="p">)</span> <span class="o">*</span> <span class="n">each</span>
	<span class="n">Entropy</span> <span class="o">=</span> <span class="o">-</span><span class="n">Entropy</span>
	<span class="k">return</span> <span class="n">Entropy</span>
</code></pre></div></div>

<p><img src="/assets/2022-07-12-measuring-decentralization/entropy-by-blockchain.webp" alt="(좌) 중앙화 ↑ (우) 탈중앙화 ↑" /></p>
<blockquote>
  <p>(좌) 중앙화 ↑ (우) 탈중앙화 ↑</p>
</blockquote>

<p><strong>(4) 검열저항성 DQ (Censorship Resistance, Decentralization Quotient)</strong></p>

<p><img src="/assets/2022-07-12-measuring-decentralization/entropy-by-blockchain.webp" alt="DQ 공식 (PoW 기반 네트워크" /></p>
<blockquote>
  <p>DQ 공식 (PoW 기반 네트워크)</p>
</blockquote>

<p><img src="/assets/2022-07-12-measuring-decentralization/entropy-by-blockchain.webp" alt="DQ 공식 (PoS 기반 네트워크" /></p>
<blockquote>
  <p>DQ 공식 (PoS 기반 네트워크)</p>
</blockquote>

<p>DQ는 검열저항성(Censorship Resistance)에 기반한 탈중앙화 지수로, 특정 소수 노드의 허위 블록 생성이나 프론트러닝(Front-running) 등 악의적 행위에 대한 저항성을 의미한다. DQ는 다음과 같은 특징을 지닌다.</p>

<table>
  <thead>
    <tr>
      <th><strong>DQ</strong></th>
      <th><strong>Value</strong></th>
      <th><strong>탈중앙화 정도</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Minimum</td>
      <td><code class="language-plaintext highlighter-rouge">0.0000</code></td>
      <td>완전 탈중앙화</td>
    </tr>
    <tr>
      <td>Maximum</td>
      <td><code class="language-plaintext highlighter-rouge">1.0000</code></td>
      <td>완전 중앙화</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>위의 산식을 자세히 살펴보면, Herfindal-Hershman Index(HHI)로부터 입력값을 받아 변형된 형태임을 알 수 있다. (따라서 HHI로 측정하는 경우와 동일한 비교 우위 결과가 나올 것이다.)</li>
  <li>작업증명(PoW) 기반 네트워크에서는 각 노드의 해시레이트 비율(%)로 계산된 HHI가 수식의 입력값이 된다.</li>
  <li>지분증명(PoS) 기반 네트워크에서는 각 노드의 스테이킹 자산 비율(%)로 계산된 HHI가 수식의 입력값이 된다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># User-defined Function to get Decentralization Quotient in Python 3
</span><span class="k">def</span> <span class="nf">getDQ</span><span class="p">(</span><span class="n">series</span><span class="p">):</span>
	<span class="n">DQ</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="mf">0.5</span> <span class="o">-</span> <span class="nf">getHHI</span><span class="p">(</span><span class="n">series</span><span class="p">))</span>
	<span class="k">return</span> <span class="n">DQ</span>
</code></pre></div></div>

<p><img src="/assets/2022-07-12-measuring-decentralization/entropy-by-blockchain.webp" alt="(좌) 중앙화 ↑ (우) 탈중앙화 ↑" /></p>
<blockquote>
  <p>(좌) 중앙화 ↑ (우) 탈중앙화 ↑</p>
</blockquote>

<p><strong>(5) Recap</strong></p>

<table>
  <thead>
    <tr>
      <th><strong>Network</strong></th>
      <th><strong>HHI 탈중앙화 순위</strong></th>
      <th><strong>Gini 탈중앙화 순위</strong></th>
      <th><strong>Entropy 탈중앙화 순위</strong></th>
      <th><strong>DQ 탈중앙화 순위</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Ethereum</td>
      <td><code class="language-plaintext highlighter-rouge">10</code></td>
      <td><code class="language-plaintext highlighter-rouge">8</code></td>
      <td><code class="language-plaintext highlighter-rouge">10</code></td>
      <td><code class="language-plaintext highlighter-rouge">10</code></td>
    </tr>
    <tr>
      <td>Binance Smart Chain</td>
      <td><code class="language-plaintext highlighter-rouge">6</code></td>
      <td><code class="language-plaintext highlighter-rouge">1</code></td>
      <td><code class="language-plaintext highlighter-rouge">8</code></td>
      <td><code class="language-plaintext highlighter-rouge">6</code></td>
    </tr>
    <tr>
      <td>Avalanche</td>
      <td><code class="language-plaintext highlighter-rouge">1</code></td>
      <td><code class="language-plaintext highlighter-rouge">9</code></td>
      <td><code class="language-plaintext highlighter-rouge">2</code></td>
      <td><code class="language-plaintext highlighter-rouge">1</code></td>
    </tr>
    <tr>
      <td>Solana</td>
      <td><code class="language-plaintext highlighter-rouge">2</code></td>
      <td><code class="language-plaintext highlighter-rouge">4</code></td>
      <td><code class="language-plaintext highlighter-rouge">1</code></td>
      <td><code class="language-plaintext highlighter-rouge">2</code></td>
    </tr>
    <tr>
      <td>Fantom</td>
      <td><code class="language-plaintext highlighter-rouge">9</code></td>
      <td><code class="language-plaintext highlighter-rouge">6</code></td>
      <td><code class="language-plaintext highlighter-rouge">6</code></td>
      <td><code class="language-plaintext highlighter-rouge">9</code></td>
    </tr>
    <tr>
      <td>Polygon</td>
      <td><code class="language-plaintext highlighter-rouge">8</code></td>
      <td><code class="language-plaintext highlighter-rouge">7</code></td>
      <td><code class="language-plaintext highlighter-rouge">7</code></td>
      <td><code class="language-plaintext highlighter-rouge">8</code></td>
    </tr>
    <tr>
      <td>Tron</td>
      <td><code class="language-plaintext highlighter-rouge">4</code></td>
      <td><code class="language-plaintext highlighter-rouge">10</code></td>
      <td><code class="language-plaintext highlighter-rouge">5</code></td>
      <td><code class="language-plaintext highlighter-rouge">4</code></td>
    </tr>
    <tr>
      <td>Cronos</td>
      <td><code class="language-plaintext highlighter-rouge">5</code></td>
      <td><code class="language-plaintext highlighter-rouge">5</code></td>
      <td><code class="language-plaintext highlighter-rouge">4</code></td>
      <td><code class="language-plaintext highlighter-rouge">5</code></td>
    </tr>
    <tr>
      <td>Klaytn</td>
      <td><code class="language-plaintext highlighter-rouge">7</code></td>
      <td><code class="language-plaintext highlighter-rouge">3</code></td>
      <td><code class="language-plaintext highlighter-rouge">9</code></td>
      <td><code class="language-plaintext highlighter-rouge">7</code></td>
    </tr>
    <tr>
      <td>Celo</td>
      <td><code class="language-plaintext highlighter-rouge">3</code></td>
      <td><code class="language-plaintext highlighter-rouge">2</code></td>
      <td><code class="language-plaintext highlighter-rouge">3</code></td>
      <td><code class="language-plaintext highlighter-rouge">3</code></td>
    </tr>
  </tbody>
</table>

<h1 id="3-결론">3. 결론</h1>

<p>탈중앙화 개념에 대해 정량적으로 접근하는 방법에는 상술한 네 가지 방법 외에도 수많은 아이디어들이 있다. 이더리움 창시자 비탈릭 부테린이 2017년 처음으로 탈중앙화 개념을 추상적으로 제안한 이후, 여러 가지 측면에서 탈중앙화 지수가 등장했다.</p>

<p><strong>그러나 본 아티클에서 다룬 4가지 측정 방법들은 다음 측면에서 중대한 문제점이 있다.</strong></p>
<ol>
  <li><strong>노드의 수(Total Absolute Number of Nodes in the Network)를 고려하지 않아, 네트워크 참여나 활성화 정도를 고려하지 않았다.</strong></li>
  <li><strong>노드 참여에 대한 자격 요건(Prerequisite)을 배제한 채 실험이 진행되었다.</strong></li>
</ol>

<p>노드의 수와 자격 요건 등을 고려하지 않은 채 실험을 진행한 결과, Klaytn과 Solana가 Ethereum보다 탈중앙성이 더욱 높은 결과가 도출되었다. 가령, Klaytn의 경우 재단과 파트너십 관계에 있는 약 30개의 노드들만 선정되었고 일반인이 운영하는 노드의 자유로운 Entry/Exit이 불가능한 Governance를 지니고 있고, Solana의 경우 노드에 참여하기 위한 Resource Requirements가 매우 높은 편이다. 결국, Klaytn과 Solana가 Ethereum보다 높은 탈중앙성을 지니고 있다고 말하는 것은 선뜻 상식에 부합되기 어려워 보인다. 따라서, <strong>탈중앙화 측정을 위해 소개한 4가지 방법들은 탈중앙화를 측정한다기보다는, 단순히 “현재 노드들 간의 빈부격차” 정도로만 해석하는 것이 바람직할 것으로 보인다.</strong></p>

<p><strong>노드들 간의 빈부격차 뿐만 아니라, 노드의 수와 노드 참여에 대한 자격 요건 등 더욱 많은 현황을 Input Data로 활용할 수 있는 종합 측정 방법이 필요할 것이다.</strong> 학계와 업계 내에서 탈중앙화 측정에 대한 연구가 지속적으로 진행 중인 만큼, 탈중앙화에 특화된 더욱 정교한 Valuation 방법이 나오길 기대해본다.</p>

<h2 id="references">References</h2>
<ul>
  <li><a href="https://www.researchgate.net/figure/The-Blockchain-Trilemma_fig2_352284073">Blockchain Trilemma Image</a></li>
  <li><a href="https://www.researchgate.net/figure/PoW-and-PoS-consensus-mechanisms-comparison_fig2_334061880">PoW and PoS consensus mechanisms comparison</a></li>
  <li><a href="https://blockchair.com/ethereum/charts/hashrate-distribution">Ethereum On-chain Data</a></li>
  <li><a href="https://bscscan.com/validators">Binance Smart Chain On-chain Data</a></li>
  <li><a href="https://explorer-xp.avax.network/validators">Avalanche On-chain Data</a></li>
  <li><a href="https://solanabeach.io/validators">Solana On-chain Data</a></li>
  <li><a href="https://explorer.fantom.network/staking">Fantom On-chain Data</a></li>
  <li><a href="https://polygonscan.com/stat/miner?range=14&amp;blocktype=blocks">Polygon On-chain Data</a></li>
  <li><a href="https://tronscan.org/#/sr/votes">Tron On-chain Data</a></li>
  <li><a href="https://crypto.org/explorer/validators">Cronos On-chain Data</a></li>
  <li><a href="https://scope.klaytn.com/">Klaytn On-chain Data</a></li>
  <li><a href="https://celo.org/validators/explore">Celo On-chain Data</a></li>
  <li><a href="https://www.ftc.go.kr/callPop.do?url=%2FjargonSearchView.do%3Fkey%3D451&amp;dicseq=428&amp;titl=%ED%97%88%ED%95%80%EB%8B%AC-%ED%97%88%EC%89%AC%EB%A7%8C+%EC%A7%80%EC%88%98%28Herfindal-Hershman+Index%29">공정거래위원회: 허핀달-허쉬만 지수</a></li>
  <li><a href="https://ko.wikipedia.org/wiki/%EC%A7%80%EB%8B%88_%EA%B3%84%EC%88%98">Wikipedia: 지니 계수</a></li>
  <li><a href="https://www.sciencedirect.com/science/article/pii/S2405959521000977">DQ: Two approaches to measure the degree of decentralization of blockchain</a></li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="korean" /><category term="blockchain" /><category term="statistics" /><summary type="html"><![CDATA[“블록체인 트릴레마를 구성하는 요소 중 하나인 탈중앙화(Decentralization)를 측정할 수 있는 여러 가지 방법론이 제시되고 있다. 이번 아티클에서는 탈중앙화를 측정할 수 있는 4가지 방법을 토대로 실험을 진행한 후, 각 방법들의 한계점에 대해 진단하고자 한다.”]]></summary></entry></feed>