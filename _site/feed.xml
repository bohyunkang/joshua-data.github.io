<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-08-12T19:27:20+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Joshua Kim</title><subtitle>Analytics Engineer | Data Analyst</subtitle><entry><title type="html">Data-driven VOC Analysis and Automated Dashboard Development: Reducing Cost and Maximizing Efficiency</title><link href="http://localhost:4000/voc-dashboard-en/" rel="alternate" type="text/html" title="Data-driven VOC Analysis and Automated Dashboard Development: Reducing Cost and Maximizing Efficiency" /><published>2024-07-20T00:00:00+09:00</published><updated>2024-07-20T00:00:00+09:00</updated><id>http://localhost:4000/voc-dashboard-en</id><content type="html" xml:base="http://localhost:4000/voc-dashboard-en/"><![CDATA[<blockquote>
  <p>“I learned that internal team members were facing difficulties in following up on Zendesk customer inquiries, so I developed a Redash VOC dashboard to address this issue. The system automatically collected and preprocessed Zendesk data, then used the OpenAI API to categorize and summarize customer inquiries by topic. Additionally, a Slack notification was set up to alert the team each Monday about the topics with the highest increase in inquiries, helping identify and respond to customer issues more efficiently. As a result, we were able to eliminate about $275 in opportunity costs each month and reduce the time spent by team members on VOC follow-ups.”</p>
</blockquote>

<hr />

<h1 id="table-of-contents">Table of Contents</h1>
<ol>
  <li>STAR Summary</li>
  <li>Situation</li>
  <li>Tasks</li>
  <li>Actions</li>
  <li>Results</li>
</ol>

<hr />

<h1 id="1-star-summary">1. STAR Summary</h1>

<h3 id="situation">Situation</h3>
<ul>
  <li>Internal team members were struggling to efficiently track and follow up on Zendesk customer inquiries. Reading through all the inquiries required <strong>an excessive amount of time and effort</strong>, and implementing an external VOC analysis service posed <strong>a cost burden</strong>.</li>
</ul>

<h3 id="tasks">Tasks</h3>
<ol>
  <li>I decided to <strong>categorize and summarize</strong> customer inquiries and create a Redash VOC <strong>dashboard</strong>.</li>
  <li>I also decided to build <strong>a Slack notification bot</strong> to alert the team about the most urgent customer inquiry topics.</li>
</ol>

<h3 id="actions">Actions</h3>
<ol>
  <li>
    <p><strong>Data Pipeline</strong></p>

    <p>1.1. Data Collection and Preprocessing <code class="language-plaintext highlighter-rouge">(Zendesk Tickets → Google Sheets → BigQuery)</code></p>

    <p>1.2. Topic Categorization <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>

    <p>1.3. Summarization <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>
  </li>
  <li>
    <p><strong>Dashboard and Notification Bot</strong></p>

    <p>2.1. Creating the Dashboard <code class="language-plaintext highlighter-rouge">(BigQuery → Redash)</code></p>

    <p>2.2. Building the Notification Bot <code class="language-plaintext highlighter-rouge">(BigQuery → Slack API)</code></p>
  </li>
</ol>

<h3 id="results">Results</h3>
<ol>
  <li><strong>Cost Savings</strong>
    <ul>
      <li>We solved the problem internally at a cost of $25 per month, avoiding the need for an external service that would have cost $300 per month.</li>
    </ul>
  </li>
  <li><strong>Time Savings</strong>
    <ul>
      <li>The time required for internal team members to follow up on VOC, identify issues, and respond was significantly reduced.</li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="2-situation">2. Situation</h1>

<blockquote>
  <p>Internal team members were struggling to efficiently track and follow up on Zendesk customer inquiries. Reading through all the inquiries required <strong>an excessive amount of time and effort</strong>, and implementing an external VOC analysis service posed <strong>a cost burden</strong>.</p>
</blockquote>

<h3 id="specific-situation">Specific Situation</h3>
<ul>
  <li>It was taking too much time to follow up on dozens to hundreds of customer inquiries each week.</li>
  <li>It was challenging to identify which topics were negatively impacting the customer experience.</li>
</ul>

<h3 id="feedback-from-internal-team-members">Feedback from Internal Team Members</h3>
<ul>
  <li><strong>C-level 1</strong>: “I’m trying to stay on top of customer sentiment by regularly reading the inquiries, but there are just too many, and it’s very time-consuming.”</li>
  <li><strong>C-level 2</strong>: “I’d like to introduce an external service for VOC analysis, but the cost is too high, so we’re hesitant.”</li>
  <li><strong>CX Manager</strong>: “I want to share more VOC insights with colleagues and improve the speed of issue resolution.”</li>
</ul>

<hr />

<h1 id="3-tasks">3. Tasks</h1>

<blockquote>
  <ol>
    <li>I decided to <strong>categorize and summarize</strong> customer inquiries and create a Redash VOC <strong>dashboard</strong>.</li>
    <li>I also decided to build <strong>a Slack notification bot</strong> to alert the team about the most urgent customer inquiry topics.</li>
  </ol>
</blockquote>

<p><img src="/assets/2024-07-20-voc-dashboard/1.png" alt="" /></p>

<hr />

<h1 id="4-actions">4. Actions</h1>

<blockquote>
  <ol>
    <li>
      <p><strong>Data Pipeline</strong></p>

      <p>1.1. Data Collection and Preprocessing <code class="language-plaintext highlighter-rouge">(Zendesk Tickets → Google Sheets → BigQuery)</code></p>

      <p>1.2. Topic Categorization <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>

      <p>1.3. Summarization <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>
    </li>
    <li>
      <p><strong>Dashboard and Notification Bot</strong></p>

      <p>2.1. Creating the Dashboard <code class="language-plaintext highlighter-rouge">(BigQuery → Redash)</code></p>

      <p>2.2. Building the Notification Bot <code class="language-plaintext highlighter-rouge">(BigQuery → Slack API)</code></p>
    </li>
  </ol>
</blockquote>

<h3 id="1-data-pipeline">1. <strong>Data Pipeline</strong></h3>

<p><img src="/assets/2024-07-20-voc-dashboard/2-en.png" alt="" /></p>

<h5 id="11-data-collection-and-preprocessing-zendesk-tickets--google-sheets--bigquery">1.1. Data Collection and Preprocessing <code class="language-plaintext highlighter-rouge">(Zendesk Tickets → Google Sheets → BigQuery)</code></h5>

<p><img src="/assets/2024-07-20-voc-dashboard/3-en.png" alt="" /></p>

<p>1) First, I used the <strong>Zendesk Connector</strong> available from Google Workspace Marketplace to automatically store completed Zendesk ticket data in a private Google Sheet.</p>

<p><img src="/assets/2024-07-20-voc-dashboard/4.png" alt="" /></p>

<p>2) I then loaded the Google Sheets data into Python.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Load Raw Data from Google Sheets (to `df`)
</span>   <span class="n">gc</span> <span class="o">=</span> <span class="n">gspread</span><span class="p">.</span><span class="nf">service_account</span><span class="p">(</span><span class="n">google_sheets_credentials_fpath</span><span class="p">)</span>
   <span class="n">spreadsheet</span> <span class="o">=</span> <span class="n">gc</span><span class="p">.</span><span class="nf">open_by_url</span><span class="p">(</span><span class="n">google_sheets_url</span><span class="p">)</span>
   <span class="n">sheet</span> <span class="o">=</span> <span class="n">spreadsheet</span><span class="p">.</span><span class="nf">worksheet</span><span class="p">(</span><span class="n">google_sheets_worksheet_name</span><span class="p">)</span>
   <span class="n">sheet_data</span> <span class="o">=</span> <span class="n">sheet</span><span class="p">.</span><span class="nf">get_all_records</span><span class="p">()</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">sheet_data</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) After that, I proceeded with data preprocessing.</p>

<details>
<summary>Filter Only Necessary Columns</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Rename Columns
</span>   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">rename</span><span class="p">(</span>
      <span class="n">columns</span><span class="o">=</span><span class="p">{</span>
         <span class="sh">'</span><span class="s">created_at</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
         <span class="sh">'</span><span class="s">raw_subject</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">,</span>
         <span class="sh">'</span><span class="s">tags.0</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">zendesk_topic</span><span class="sh">'</span><span class="p">,</span>
         <span class="sh">'</span><span class="s">updated_at</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">updated_datetime</span><span class="sh">'</span>
      <span class="p">}</span>
   <span class="p">)</span>
   <span class="c1"># Extract Only Necessary Columns
</span>   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span>
      <span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">zendesk_topic</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">description</span><span class="sh">'</span>
   <span class="p">]]</span>
</code></pre></div>    </div>
  </div>
</details>

<details>
<summary>Change Timezone (UTC → KST)</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Convert Existing Timestamps: UTC to KST
</span>   <span class="n">kst</span> <span class="o">=</span> <span class="n">pytz</span><span class="p">.</span><span class="nf">timezone</span><span class="p">(</span><span class="sh">'</span><span class="s">Asia/Seoul</span><span class="sh">'</span><span class="p">)</span>
   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">],</span> <span class="n">utc</span><span class="o">=</span><span class="bp">True</span><span class="p">).</span><span class="n">dt</span><span class="p">.</span><span class="nf">tz_convert</span><span class="p">(</span><span class="n">kst</span><span class="p">).</span><span class="n">dt</span><span class="p">.</span><span class="nf">tz_localize</span><span class="p">(</span><span class="bp">None</span><span class="p">)</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">astype</span><span class="p">(</span><span class="sh">'</span><span class="s">str</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># To load into BigQuery, all columns must be cast as strings.
</span></code></pre></div>    </div>
  </div>
</details>

<details>
<summary>Filter Only New Entries</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Remove Rows Already in Target Table (Prevent Duplicates)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT DISTINCT id FROM `</span><span class="si">{</span><span class="n">bigquery_tickets_table_id</span><span class="si">}</span><span class="s">`</span><span class="sh">'</span>
   <span class="k">try</span><span class="p">:</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">])</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span>
         <span class="o">~</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">].</span><span class="nf">isin</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">)</span>
      <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
   <span class="k">except</span><span class="p">:</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span>
</code></pre></div>    </div>
  </div>
</details>

<p>4) Finally, I loaded the data into the BigQuery table.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Load Data into BigQuery Table
</span>   <span class="n">table</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">get_table</span><span class="p">(</span><span class="n">bigquery_tickets_table_id</span><span class="p">)</span>
   <span class="n">client</span><span class="p">.</span><span class="nf">load_table_from_dataframe</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">table</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<h5 id="12-topic-categorization-openai-api">1.2. Topic Categorization <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></h5>

<p><img src="/assets/2024-07-20-voc-dashboard/5-en.png" alt="" /></p>

<p>1) To predefine the list of topics to be categorized, I discussed and established a classification system with a CX manager and a UX/UI designer.</p>

<ul>
  <li><strong>Topic</strong>: Broad subject categories</li>
  <li><strong>Keyword</strong>: Specific subtopics</li>
</ul>

<p><img src="/assets/2024-07-20-voc-dashboard/6.png" alt="" /></p>

<p>2) I loaded the data from the BigQuery table into Python.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Load BigQuery `tickets` Table (to `df`)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT * FROM </span><span class="si">{</span><span class="n">bigquery_tickets_table_id</span><span class="si">}</span><span class="sh">'</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) I then filtered out only new entries.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Remove Rows Already in Target Table (Prevent Duplicates)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT DISTINCT id FROM `</span><span class="si">{</span><span class="n">bigquery_tickets_topics_table_id</span><span class="si">}</span><span class="s">`</span><span class="sh">'</span>
   <span class="k">try</span><span class="p">:</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">])</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span>
         <span class="o">~</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">].</span><span class="nf">isin</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">)</span>
      <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
   <span class="k">except</span><span class="p">:</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span>
</code></pre></div>    </div>
  </div>
</details>

<p>4) I created the prompt to be sent to OpenAI.</p>

<details>
<summary>System Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   Your task is to classify a single key keyword from the customer inquiry details. You must respond by selecting only from the provided list of topics. Below is the list of topics you can choose from:
      {Keyword List}
   Do not create or select any other topics.
</code></pre></div>    </div>
  </div>
</details>

<details>
<summary>User Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   Below is the customer inquiry details.
   Extract a single key topic from this text.

   Customer Inquiry Details:
      {Actual Text}

   Extraction Format: Topic
   Restrictions:
   1. Respond with only the topic.
   2. Choose only from the provided list of topics. Do not create or select any other topics.
   3. Make sure to select one from the list below:
   {Keyword List}
   
   Extraction Result:
</code></pre></div>    </div>
  </div>
</details>

<p>5) I then obtained the main topic by calling the OpenAI API.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Define the system prompt for OpenAI
</span>   <span class="n">prompt_system</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'''</span><span class="s">
   Your task is to classify a single key keyword from the customer inquiry details. You must respond by selecting only from the provided list of topics. Below is the list of topics you can choose from:
   </span><span class="si">{</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">topics2_list</span><span class="p">)</span><span class="si">}</span><span class="s">
   Do not create or select any other topics.
   </span><span class="sh">'''</span>

   <span class="c1"># Start the OpenAI API Request for each row
</span>   <span class="n">topic2_results_list</span> <span class="o">=</span> <span class="p">[]</span>

   <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">df</span><span class="p">)):</span>

      <span class="c1"># Subject + Description
</span>      <span class="n">text</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">description</span><span class="sh">'</span><span class="p">]</span>
      <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">[:</span><span class="mi">2000</span><span class="p">]</span> <span class="c1"># Limit length to 2,000 characters (to save costs)
</span>
      <span class="c1"># Define the individual prompt for API Request
</span>      <span class="n">prompt_individual</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'''</span><span class="s">
      Below is the customer inquiry details.
      Extract a single key topic from this text.

      Customer Inquiry Details:
      </span><span class="si">{</span><span class="n">text</span><span class="si">}</span><span class="s">

      Extraction Format: Topic
      Restrictions:
      1. Respond with only the topic.
      2. Choose only from the provided list of topics. Do not create or select any other topics.
      3. Make sure to select one from the list below:
      </span><span class="si">{</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">topics2_list</span><span class="p">)</span><span class="si">}</span><span class="s"> 
      
      Extraction Result:
      </span><span class="sh">'''</span>

      <span class="c1"># Start the API Request
</span>      <span class="n">result</span> <span class="o">=</span> <span class="n">openai_client</span><span class="p">.</span><span class="n">chat</span><span class="p">.</span><span class="n">completions</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span>
            <span class="n">model</span> <span class="o">=</span> <span class="sh">'</span><span class="s">gpt-4</span><span class="sh">'</span><span class="p">,</span>
            <span class="n">max_tokens</span> <span class="o">=</span> <span class="mi">500</span><span class="p">,</span>
            <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
            <span class="n">temperature</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
            <span class="n">stop</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
            <span class="n">messages</span> <span class="o">=</span> <span class="p">[</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">system</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_system</span><span class="p">},</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">user</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_individual</span><span class="p">}</span>
            <span class="p">]</span>
      <span class="p">)</span>

      <span class="c1"># Record the topic results into Empty Lists
</span>      <span class="n">topic2_result</span> <span class="o">=</span> <span class="n">result</span><span class="p">.</span><span class="n">choices</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">message</span><span class="p">.</span><span class="n">content</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\'</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\"</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">[</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">]</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">strip</span><span class="p">()</span>
      <span class="n">topic2_results_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">topic2_result</span><span class="p">)</span>

   <span class="c1"># Record the 'Topic 1' results using 'Topic 2' results
</span>   <span class="n">topic1_results_list</span> <span class="o">=</span> <span class="p">[]</span>
   <span class="k">for</span> <span class="n">topic2</span> <span class="ow">in</span> <span class="n">topic2_results_list</span><span class="p">:</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">topics_list</span><span class="p">)):</span>
            <span class="k">if</span> <span class="n">topics_list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">topic2</span><span class="p">:</span>
               <span class="n">topic1_results_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">topics_list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
               <span class="k">break</span>
            <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="nf">len</span><span class="p">(</span><span class="n">topics_list</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
               <span class="n">topic1_results_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="sh">'</span><span class="s">Others</span><span class="sh">'</span><span class="p">)</span>
      
   <span class="c1"># Add 'Topic 1' and 'Topic 2' columns to the dataframe and select only the necessary columns
</span>   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_topic_1</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">topic1_results_list</span>
   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_topic_2</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">topic2_results_list</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span>
      <span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">openai_topic_1</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">openai_topic_2</span><span class="sh">'</span>
   <span class="p">]]</span>
</code></pre></div>    </div>
  </div>
</details>

<p>6) Finally, the topic categorization results were loaded into a BigQuery table.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Load Data into BigQuery Table
</span>   <span class="n">table</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">get_table</span><span class="p">(</span><span class="n">bigquery_tickets_topics_table_id</span><span class="p">)</span>
   <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">load_table_from_dataframe</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">table</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<h5 id="13-summarization-openai-api">1.3. Summarization <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></h5>

<p><img src="/assets/2024-07-20-voc-dashboard/7-en.png" alt="" /></p>

<p>1) I loaded the data from the BigQuery table into Python.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Load BigQuery `tickets` Table (to `df`)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT * FROM </span><span class="si">{</span><span class="n">bigquery_tickets_table_id</span><span class="si">}</span><span class="sh">'</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
</code></pre></div>    </div>
  </div>
</details>

<p>2) I then filtered out only new entries.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Remove Rows Already in Target Table (Prevent Duplicates)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT DISTINCT id FROM `</span><span class="si">{</span><span class="n">bigquery_tickets_summary_table_id</span><span class="si">}</span><span class="s">`</span><span class="sh">'</span>
   <span class="k">try</span><span class="p">:</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">])</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span>
         <span class="o">~</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">].</span><span class="nf">isin</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">)</span>
      <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
   <span class="k">except</span><span class="p">:</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) I created the prompt to be sent to OpenAI.</p>

<details>
<summary>System Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   our task is to summarize customer inquiry details into a single sentence in Korean.
   Keep in mind that the customer is from a blockchain hardware and app wallet service company.
   The summary must be provided in a single sentence in Korean, and sensitive personal information or links must be removed.
</code></pre></div>    </div>
  </div>
</details>

<details>
<summary>User Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Below is a customer inquiry.
      Summarize this text into a single sentence in Korean.

      Customer inquiry:
      {text}

      Format of extraction: One sentence in Korean
      Constraints:

      1. Remember that the customer is from a blockchain hardware and app wallet service company.
      2. Summarize in Korean only. (However, proper nouns that cannot be translated may remain in English.)
      3. Respond in only one sentence.
      4. Ensure that sensitive personal information is removed. (e.g., personal details, wallet addresses, contact information, passwords, private keys, mnemonic phrases, email addresses, IP addresses, URLs, social media accounts, etc.)

      Extraction result:
</code></pre></div>    </div>
  </div>
</details>

<p>4) I performed the OpenAI summarization task by iterating over each ticket.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Define the system prompt for OpenAI
</span>   <span class="n">prompt_system</span> <span class="o">=</span> <span class="sh">'''</span><span class="s">
   our task is to summarize customer inquiry details into a single sentence in Korean.
   Keep in mind that the customer is from a blockchain hardware and app wallet service company.
   The summary must be provided in a single sentence in Korean, and sensitive personal information or links must be removed.
   </span><span class="sh">'''</span>

   <span class="c1"># Start the OpenAI API Request for each row
</span>   <span class="n">summaries_list</span> <span class="o">=</span> <span class="p">[]</span>

   <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">df</span><span class="p">)):</span>

      <span class="c1"># Subject + Description
</span>      <span class="n">text</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">description</span><span class="sh">'</span><span class="p">]</span>
      <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">[:</span><span class="mi">2000</span><span class="p">]</span> <span class="c1"># Limit length to 2,000 characters (to save costs)
</span>
      <span class="c1"># Define the individual prompt for API Request
</span>      <span class="n">prompt_individual</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'''</span><span class="s">
      Below is a customer inquiry.
      Summarize this text into a single sentence in Korean.

      Customer inquiry:
      </span><span class="si">{</span><span class="n">text</span><span class="si">}</span><span class="s">

      Format of extraction: One sentence in Korean
      Constraints:

      1. Remember that the customer is from a blockchain hardware and app wallet service company.
      2. Summarize in Korean only. (However, proper nouns that cannot be translated may remain in English.)
      3. Respond in only one sentence.
      4. Ensure that sensitive personal information is removed. (e.g., personal details, wallet addresses, contact information, passwords, private keys, mnemonic phrases, email addresses, IP addresses, URLs, social media accounts, etc.)

      Extraction result:
      </span><span class="sh">'''</span>

      <span class="c1"># Start the API Request
</span>      <span class="n">result</span> <span class="o">=</span> <span class="n">openai_client</span><span class="p">.</span><span class="n">chat</span><span class="p">.</span><span class="n">completions</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span>
            <span class="n">model</span> <span class="o">=</span> <span class="sh">'</span><span class="s">gpt-4</span><span class="sh">'</span><span class="p">,</span>
            <span class="n">max_tokens</span> <span class="o">=</span> <span class="mi">200</span><span class="p">,</span>
            <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
            <span class="n">temperature</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
            <span class="n">stop</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
            <span class="n">messages</span> <span class="o">=</span> <span class="p">[</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">system</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_system</span><span class="p">},</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">user</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_individual</span><span class="p">}</span>
            <span class="p">]</span>
      <span class="p">)</span>

      <span class="c1"># Record the topic results into empty lists
</span>      <span class="n">summary_result</span> <span class="o">=</span> <span class="n">result</span><span class="p">.</span><span class="n">choices</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">message</span><span class="p">.</span><span class="n">content</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\'</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\"</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">[</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">]</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">strip</span><span class="p">()</span>
      <span class="n">summaries_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">summary_result</span><span class="p">)</span>

   <span class="c1"># Add the summary column to the dataframe and select only the required columns
</span>   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_summary</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">summaries_list</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span>
      <span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">openai_summary</span><span class="sh">'</span>
   <span class="p">]]</span>
</code></pre></div>    </div>
  </div>
</details>

<p>5) Finally, the summarized results were loaded into a BigQuery table.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># Load Data into BigQuery Table
</span>   <span class="n">table</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">get_table</span><span class="p">(</span><span class="n">bigquery_tickets_summary_table_id</span><span class="p">)</span>
   <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">load_table_from_dataframe</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">table</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<h3 id="2-dashboard-and-notification-bot">2. <strong>Dashboard and Notification Bot</strong></h3>

<h5 id="21-creating-the-dashboard-bigquery--redash">2.1. Creating the Dashboard <code class="language-plaintext highlighter-rouge">(BigQuery → Redash)</code></h5>

<p>1) I created a Redash dashboard with the following contents.</p>

<p><img src="/assets/2024-07-20-voc-dashboard/11.png" alt="" /></p>

<details>
<summary>Proportion by Topic</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/12.png" alt="" /></p>
  </div>
</details>

<details>
<summary>Trends by Topic</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/13.png" alt="" /></p>
  </div>
</details>

<details>
<summary>Trends by Keyword</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/14.png" alt="" /></p>
  </div>
</details>

<details>
<summary>Summary of Inquiries by Keyword</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/15.png" alt="" /></p>
  </div>
</details>

<details>
<summary>All Datasets</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/16.png" alt="" /></p>
  </div>
</details>

<h5 id="22-building-the-notification-bot-bigquery--slack-api">2.2. Building the Notification Bot <code class="language-plaintext highlighter-rouge">(BigQuery → Slack API)</code></h5>

<p>1) First, I wrote a BigQuery query.</p>

<details>
<summary>Extracting the detailed topics (Keywords) with the most significant increase in customer inquiries from the previous week (compared to the week before)</summary>
<div>
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_1w_ago_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">openai_topic_2</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt</span>
      <span class="k">FROM</span>
         <span class="nv">`bigquery_tickets_topics_table_id`</span>
      <span class="k">WHERE</span>
         <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="n">DATE_ADD</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="o">-</span><span class="mi">1</span> <span class="n">WEEK</span><span class="p">),</span> <span class="n">WEEK</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span>
         <span class="k">AND</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">WEEK</span><span class="p">)</span>
         <span class="k">AND</span> <span class="n">openai_topic_1</span> <span class="o">!=</span> <span class="s1">'Others'</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">),</span>
   <span class="n">CTE_2w_ago_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">openai_topic_2</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt</span>
      <span class="k">FROM</span>
         <span class="nv">`bigquery_tickets_topics_table_id`</span>
      <span class="k">WHERE</span>
         <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="n">DATE_ADD</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="o">-</span><span class="mi">2</span> <span class="n">WEEK</span><span class="p">),</span> <span class="n">WEEK</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span>
         <span class="k">AND</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="n">DATE_ADD</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="o">-</span><span class="mi">1</span> <span class="n">WEEK</span><span class="p">),</span> <span class="n">WEEK</span><span class="p">)</span>
         <span class="k">AND</span> <span class="n">openai_topic_1</span> <span class="o">!=</span> <span class="s1">'Others'</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">),</span>
   <span class="n">CTE_diff</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">COALESCE</span><span class="p">(</span><span class="n">MAIN</span><span class="p">.</span><span class="n">openai_topic_2</span><span class="p">,</span> <span class="n">COMP</span><span class="p">.</span><span class="n">openai_topic_2</span><span class="p">)</span> <span class="k">AS</span> <span class="n">openai_topic_2</span><span class="p">,</span>
         <span class="n">MAIN</span><span class="p">.</span><span class="n">tickets_cnt</span> <span class="k">AS</span> <span class="n">tickets_cnt_1w_ago</span><span class="p">,</span>
         <span class="n">COALESCE</span><span class="p">(</span><span class="n">COMP</span><span class="p">.</span><span class="n">tickets_cnt</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt_2w_ago</span><span class="p">,</span>
         <span class="n">COALESCE</span><span class="p">(</span><span class="n">MAIN</span><span class="p">.</span><span class="n">tickets_cnt</span> <span class="o">-</span> <span class="n">COMP</span><span class="p">.</span><span class="n">tickets_cnt</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt_diff</span>
      <span class="k">FROM</span>
         <span class="n">CTE_1w_ago_raw</span> <span class="n">MAIN</span>
      <span class="k">LEFT</span> <span class="k">JOIN</span>
         <span class="n">CTE_2w_ago_raw</span> <span class="n">COMP</span>
         <span class="k">ON</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">openai_topic_2</span> <span class="o">=</span> <span class="n">COMP</span><span class="p">.</span><span class="n">openai_topic_2</span>
   <span class="p">)</span>
   <span class="k">SELECT</span>
      <span class="n">openai_topic_2</span><span class="p">,</span>
      <span class="n">tickets_cnt_1w_ago</span><span class="p">,</span>
      <span class="n">tickets_cnt_2w_ago</span><span class="p">,</span>
      <span class="n">tickets_cnt_diff</span>
   <span class="k">FROM</span>
      <span class="n">CTE_diff</span>
   <span class="k">WHERE</span>
      <span class="n">tickets_cnt_diff</span> <span class="o">=</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">MAX</span><span class="p">(</span><span class="n">tickets_cnt_diff</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">CTE_diff</span><span class="p">)</span>
      <span class="k">AND</span> <span class="n">tickets_cnt_diff</span> <span class="o">&gt;</span> <span class="mi">0</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
</code></pre></div>    </div>
  </div>
</details>

<p>2) I created a Slack message object.</p>

<details>
<summary>View Code</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="n">df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>

   <span class="c1"># Slack Message Title
</span>   <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">:phone: *Weekly Zendesk Summary* </span><span class="se">\n\n</span><span class="sh">'</span>
   <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">*Here are the customer inquiry topics that increased the most in the past week.* </span><span class="se">\n</span><span class="sh">'</span>

   <span class="c1"># If data exists
</span>   <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
      <span class="n">topics</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_topic_2</span><span class="sh">'</span><span class="p">].</span><span class="nf">tolist</span><span class="p">()</span>
      <span class="n">tickets_cnt_1w_agos</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">tickets_cnt_1w_ago</span><span class="sh">'</span><span class="p">].</span><span class="nf">tolist</span><span class="p">()</span>
      <span class="n">tickets_cnt_diffs</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">tickets_cnt_diff</span><span class="sh">'</span><span class="p">].</span><span class="nf">tolist</span><span class="p">()</span>
      <span class="c1"># Create Slack message
</span>      <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">topic</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">topics</span><span class="p">):</span>
         <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">- *</span><span class="si">{</span><span class="n">topic</span><span class="si">}</span><span class="s">*: Total </span><span class="si">{</span><span class="n">tickets_cnt_1w_agos</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="si">}</span><span class="s"> cases (Compared to the previous week +</span><span class="si">{</span><span class="n">tickets_cnt_diffs</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="si">}</span><span class="s">) </span><span class="se">\n</span><span class="sh">'</span>

   <span class="c1"># If no data exists
</span>   <span class="k">else</span><span class="p">:</span>
      <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">- *There are no topics that increased.*:smile: </span><span class="se">\n\n</span><span class="sh">'</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) Every Monday at 9:00 AM, the following Slack notification was sent.</p>

<p><img src="/assets/2024-07-20-voc-dashboard/10-en.png" alt="" /></p>

<hr />

<h1 id="5-results">5. Results</h1>

<blockquote>
  <ol>
    <li><strong>Cost Savings</strong>
      <ul>
        <li>We solved the problem internally at a cost of $25 per month, avoiding the need for an external service that would have cost $300 per month.</li>
      </ul>
    </li>
    <li><strong>Time Savings</strong>
      <ul>
        <li>The time required for internal team members to follow up on VOC, identify issues, and respond was significantly reduced.</li>
      </ul>
    </li>
  </ol>
</blockquote>

<h3 id="1-cost-savings">1. <strong>Cost Savings</strong></h3>

<p>Conclusion)  By developing internally, we were able to eliminate approximately $275 in opportunity costs each month.</p>

<table>
  <tbody>
    <tr>
      <td> </td>
      <td><strong>External VOC Analysis Service</strong></td>
      <td><strong>Internal Development</strong></td>
    </tr>
    <tr>
      <td>Monthly Cost</td>
      <td><code class="language-plaintext highlighter-rouge">$300</code></td>
      <td><code class="language-plaintext highlighter-rouge">$25</code></td>
    </tr>
  </tbody>
</table>

<p>1) External VOC Analysis Service</p>
<ul>
  <li>The <a href="https://www.syncly.kr/">syncly</a> service we considered adopting required a minimum monthly cost of $299.</li>
</ul>

<p><img src="/assets/2024-07-20-voc-dashboard/8.png" alt="" /></p>

<p>2) Internal Development</p>
<ul>
  <li>However, internal development required the following costs:</li>
</ul>

<table>
  <tbody>
    <tr>
      <td><strong>Resource</strong></td>
      <td><strong>Monthly Cost</strong></td>
    </tr>
    <tr>
      <td>1. OpenAI API</td>
      <td><code class="language-plaintext highlighter-rouge">$25</code></td>
    </tr>
    <tr>
      <td>2. BigQuery Storage</td>
      <td>Minimal</td>
    </tr>
    <tr>
      <td>3. BigQuery Query Usage</td>
      <td>Negligible</td>
    </tr>
    <tr>
      <td>4. VM Instance Operation</td>
      <td>Minimal, as we used existing instances</td>
    </tr>
    <tr>
      <td><strong>TOTAL</strong></td>
      <td><code class="language-plaintext highlighter-rouge">$25</code> + e</td>
    </tr>
  </tbody>
</table>

<p><img src="/assets/2024-07-20-voc-dashboard/9.png" alt="ㅇㅇㅇ" /></p>
<blockquote>
  <p>Daily OpenAI API Costs</p>
</blockquote>

<h3 id="2-time-savings">2. <strong>Time Savings</strong></h3>

<p>1) Redash VOC Dashboard (Topic Categorization)</p>
<ul>
  <li>Improved <u>the ease of identifying</u> VOC issues for internal team members.</li>
</ul>

<p>2) Redash VOC Dashboard (Summarization)</p>
<ul>
  <li>Enhanced <u>the follow-up speed</u> on VOC and improved <u>accessibility</u> for internal team members.</li>
</ul>

<p>3) Slack Notification Bot</p>
<ul>
  <li>Improved issue <u>identification</u> and <u>response speed</u> by sharing the topics with the highest increase in inquiries with internal team members each week, contributing to <u>a shared understanding of the context</u>.</li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="English" /><category term="Python" /><category term="BigQuery" /><category term="Redash" /><category term="Data Visualization" /><category term="LLM" /><summary type="html"><![CDATA[“I learned that internal team members were facing difficulties in following up on Zendesk customer inquiries, so I developed a Redash VOC dashboard to address this issue. The system automatically collected and preprocessed Zendesk data, then used the OpenAI API to categorize and summarize customer inquiries by topic. Additionally, a Slack notification was set up to alert the team each Monday about the topics with the highest increase in inquiries, helping identify and respond to customer issues more efficiently. As a result, we were able to eliminate about $275 in opportunity costs each month and reduce the time spent by team members on VOC follow-ups.”]]></summary></entry><entry><title type="html">데이터 기반 VOC 분석 및 자동화 대시보드 구축: 비용 절감과 효율성 극대화</title><link href="http://localhost:4000/voc-dashboard-ko/" rel="alternate" type="text/html" title="데이터 기반 VOC 분석 및 자동화 대시보드 구축: 비용 절감과 효율성 극대화" /><published>2024-07-20T00:00:00+09:00</published><updated>2024-07-20T00:00:00+09:00</updated><id>http://localhost:4000/voc-dashboard-ko</id><content type="html" xml:base="http://localhost:4000/voc-dashboard-ko/"><![CDATA[<blockquote>
  <p>“사내 구성원 분들이 젠데스크 고객 문의 내역 팔로업에 어려움을 겪고 있다는 사실을 공유 받아, 이를 해결하기 위해 Redash VOC 대시보드를 구축했습니다. 젠데스크 데이터를 자동으로 수집하고 전처리한 후, OpenAI API를 활용해 고객 문의 내역을 주제별로 분류하고 요약했습니다. 추가적으로, 매주 월요일마다 가장 많이 증가한 문의 주제를 슬랙으로 알림을 보내어, 고객 이슈를 효율적으로 식별하고 대응할 수 있도록 기여했습니다. 결과적으로 매월 약 $275 기회 비용을 제거할 수 있었으며, 사내 구성원 분들의 VOC 팔로업 시간을 감소시키는 성과를 얻었습니다.”</p>
</blockquote>

<hr />

<h1 id="목차">목차</h1>
<ol>
  <li>STAR Summary</li>
  <li>Situation</li>
  <li>Tasks</li>
  <li>Actions</li>
  <li>Results</li>
</ol>

<hr />

<h1 id="1-star-summary">1. STAR Summary</h1>

<h3 id="situation">Situation</h3>
<ul>
  <li>사내 구성원 분들이 젠데스크 고객 문의 내역을 효율적으로 추적하고 팔로업하는 데 어려움을 겪고 있었습니다. 모든 내역을 읽는 것은 지나치게 <strong>많은 시간과 노력</strong>을 요구했으며, 외부 VOC 분석 서비스를 도입하기에는 <strong>비용의 부담</strong>이 있었습니다.</li>
</ul>

<h3 id="tasks">Tasks</h3>
<ol>
  <li>고객 문의 내역의 <strong>주제를 분류하고 요약</strong>하여, Redash VOC <strong>대시보드</strong>를 만들기로 결정했습니다.</li>
  <li>가장 긴급한 고객 문의 주제를 알려주는 <strong>슬랙 알림 봇</strong>을 구축하기로 결정했습니다.</li>
</ol>

<h3 id="actions">Actions</h3>
<ol>
  <li>
    <p><strong>데이터 파이프라인</strong></p>

    <p>1.1. 데이터 수집 및 전처리 <code class="language-plaintext highlighter-rouge">(Zendesk Tickets → Google Sheets → BigQuery)</code></p>

    <p>1.2. 주제 분류 <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>

    <p>1.3. 요약하기 <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>
  </li>
  <li>
    <p><strong>대시보드와 알림 봇</strong></p>

    <p>2.1. 대시보드 만들기 <code class="language-plaintext highlighter-rouge">(BigQuery → Redash)</code></p>

    <p>2.2. 알림 봇 구축하기 <code class="language-plaintext highlighter-rouge">(BigQuery → Slack API)</code></p>
  </li>
</ol>

<h3 id="results">Results</h3>
<ol>
  <li><strong>비용 절약</strong>
    <ul>
      <li>월 $300 비용의 외부 서비스를 도입하지 않고도, 내부 개발을 통해 월 $25 비용 만으로 문제를 해소했습니다.</li>
    </ul>
  </li>
  <li><strong>시간 절감</strong>
    <ul>
      <li>사내 구성원 분들의 VOC 팔로업, 이슈 식별과 대응 속도를 향상시켰습니다.</li>
    </ul>
  </li>
</ol>

<hr />

<h1 id="2-situation">2. Situation</h1>

<blockquote>
  <p>사내 구성원 분들이 젠데스크 고객 문의 내역을 효율적으로 추적하고 팔로업하는 데 어려움을 겪고 있었습니다. 모든 내역을 읽는 것은 지나치게 <strong>많은 시간과 노력</strong>을 요구했으며, 외부 VOC 분석 서비스를 도입하기에는 <strong>비용의 부담</strong>이 있었습니다.</p>
</blockquote>

<h3 id="구체적인-상황">구체적인 상황</h3>
<ul>
  <li>매주 수십-수백개의 고객 문의 내역을 일일이 팔로업하는 과정에서 너무 많은 시간이 소모되고 있었습니다.</li>
  <li>정확히 어떤 항목이 CX에 악영향을 끼치고 있는지 흐름을 파악하기 어려웠습니다.</li>
</ul>

<h3 id="사내-구성원-분들의-말말말">사내 구성원 분들의 말말말</h3>
<ul>
  <li><strong>임원 1</strong>: “주기적으로 문의 내역을 읽으며 고객의 감을 잡아가고 있는데, 양이 너무 많아 시간 소모가 커요.”</li>
  <li><strong>임원 2</strong>: “VOC 분석을 위한 외부 서비스를 도입하고 싶지만 가격이 너무 비싸서 고민하고 있어요.”</li>
  <li><strong>CX 담당자</strong>: “CX 및 VOC 현황을 좀 더 많은 동료들에게 공유하고, 이슈 대응 속도를 개선하고 싶어요.”</li>
</ul>

<hr />

<h1 id="3-tasks">3. Tasks</h1>

<blockquote>
  <ol>
    <li>고객 문의 내역의 <strong>주제를 분류하고 요약</strong>하여, Redash VOC <strong>대시보드</strong>를 만들기로 결정했습니다.</li>
    <li>가장 긴급한 고객 문의 주제를 알려주는 <strong>슬랙 알림 봇</strong>을 구축하기로 결정했습니다.</li>
  </ol>
</blockquote>

<p><img src="/assets/2024-07-20-voc-dashboard/1.png" alt="" /></p>

<hr />

<h1 id="4-actions">4. Actions</h1>

<blockquote>
  <ol>
    <li>
      <p><strong>데이터 파이프라인</strong></p>

      <p>1.1. 데이터 수집 및 전처리 <code class="language-plaintext highlighter-rouge">(Zendesk Tickets → Google Sheets → BigQuery)</code></p>

      <p>1.2. 주제 분류 <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>

      <p>1.3. 요약하기 <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></p>
    </li>
    <li>
      <p><strong>대시보드와 알림 봇</strong></p>

      <p>2.1. 대시보드 만들기 <code class="language-plaintext highlighter-rouge">(BigQuery → Redash)</code></p>

      <p>2.2. 알림 봇 구축하기 <code class="language-plaintext highlighter-rouge">(BigQuery → Slack API)</code></p>
    </li>
  </ol>
</blockquote>

<h3 id="1-데이터-파이프라인">1. <strong>데이터 파이프라인</strong></h3>

<p><img src="/assets/2024-07-20-voc-dashboard/2-ko.png" alt="" /></p>

<h5 id="11-데이터-수집-및-전처리-zendesk-tickets--google-sheets--bigquery">1.1. 데이터 수집 및 전처리 <code class="language-plaintext highlighter-rouge">(Zendesk Tickets → Google Sheets → BigQuery)</code></h5>

<p><img src="/assets/2024-07-20-voc-dashboard/3-ko.png" alt="" /></p>

<p>1) 먼저 Google Workspace Marketplace에서 제공하는 <strong>Zendesk Connector</strong>를 통해 답변이 완료된 젠데스크 티켓 데이터를 사내 비공개 구글 시트에 자동으로 저장될 수 있도록 설정했습니다.</p>

<p><img src="/assets/2024-07-20-voc-dashboard/4.png" alt="" /></p>

<p>2) Python에서 구글 시트 데이터를 로드했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 구글 시트 Raw Data 불러오기 (to `df`)
</span>   <span class="n">gc</span> <span class="o">=</span> <span class="n">gspread</span><span class="p">.</span><span class="nf">service_account</span><span class="p">(</span><span class="n">google_sheets_credentials_fpath</span><span class="p">)</span>
   <span class="n">spreadsheet</span> <span class="o">=</span> <span class="n">gc</span><span class="p">.</span><span class="nf">open_by_url</span><span class="p">(</span><span class="n">google_sheets_url</span><span class="p">)</span>
   <span class="n">sheet</span> <span class="o">=</span> <span class="n">spreadsheet</span><span class="p">.</span><span class="nf">worksheet</span><span class="p">(</span><span class="n">google_sheets_worksheet_name</span><span class="p">)</span>
   <span class="n">sheet_data</span> <span class="o">=</span> <span class="n">sheet</span><span class="p">.</span><span class="nf">get_all_records</span><span class="p">()</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">sheet_data</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) 그런 후, 데이터 전처리를 진행했습니다.</p>

<details>
<summary>필요한 칼럼만 필터링</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 칼럼 이름 재정의하기
</span>   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">rename</span><span class="p">(</span>
      <span class="n">columns</span><span class="o">=</span><span class="p">{</span>
         <span class="sh">'</span><span class="s">created_at</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
         <span class="sh">'</span><span class="s">raw_subject</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">,</span>
         <span class="sh">'</span><span class="s">tags.0</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">zendesk_topic</span><span class="sh">'</span><span class="p">,</span>
         <span class="sh">'</span><span class="s">updated_at</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">updated_datetime</span><span class="sh">'</span>
      <span class="p">}</span>
   <span class="p">)</span>
   <span class="c1"># 필요한 칼럼만 뽑아내기
</span>   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span>
      <span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">zendesk_topic</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">description</span><span class="sh">'</span>
   <span class="p">]]</span>
</code></pre></div>    </div>
  </div>
</details>

<details>
<summary>시간대 변경 (UTC → KST)</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 기존 타임스탬프: UTC to KST 변환해주기
</span>   <span class="n">kst</span> <span class="o">=</span> <span class="n">pytz</span><span class="p">.</span><span class="nf">timezone</span><span class="p">(</span><span class="sh">'</span><span class="s">Asia/Seoul</span><span class="sh">'</span><span class="p">)</span>
   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">],</span> <span class="n">utc</span><span class="o">=</span><span class="bp">True</span><span class="p">).</span><span class="n">dt</span><span class="p">.</span><span class="nf">tz_convert</span><span class="p">(</span><span class="n">kst</span><span class="p">).</span><span class="n">dt</span><span class="p">.</span><span class="nf">tz_localize</span><span class="p">(</span><span class="bp">None</span><span class="p">)</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">astype</span><span class="p">(</span><span class="sh">'</span><span class="s">str</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># BigQuery에 Load할 때, 기본적으로 모두 String 타입이 되어야 하므로, 어쩔 수 없이 모두 String으로 Casting한다.
</span></code></pre></div>    </div>
  </div>
</details>

<details>
<summary>신규 항목들만 필터링</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 이미 타겟 테이블에 존재하는 행을 제거해주기 (중복 방지)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT DISTINCT id FROM `</span><span class="si">{</span><span class="n">bigquery_tickets_table_id</span><span class="si">}</span><span class="s">`</span><span class="sh">'</span>
   <span class="k">try</span><span class="p">:</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">])</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span>
         <span class="o">~</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">].</span><span class="nf">isin</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">)</span>
      <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
   <span class="k">except</span><span class="p">:</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span>
</code></pre></div>    </div>
  </div>
</details>

<p>4) 마지막으로 BigQuery 테이블에 적재했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 빅쿼리 테이블에 적재하기
</span>   <span class="n">table</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">get_table</span><span class="p">(</span><span class="n">bigquery_tickets_table_id</span><span class="p">)</span>
   <span class="n">client</span><span class="p">.</span><span class="nf">load_table_from_dataframe</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">table</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<h5 id="12-주제-분류-openai-api">1.2. 주제 분류 <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></h5>

<p><img src="/assets/2024-07-20-voc-dashboard/5-ko.png" alt="" /></p>

<p>1) 분류할 주제 목록을 사전에 정의하기 위해, CX 담당자 및 UX/UI 디자이너 분과 함께 논의 후 분류 체계를 세웠습니다.</p>
<ul>
  <li><strong>Topic</strong>: 넓은 범주의 주제</li>
  <li><strong>Keyword</strong>: 구체적인 세부 주제</li>
</ul>

<p><img src="/assets/2024-07-20-voc-dashboard/6.png" alt="" /></p>

<p>2) Python에서 BigQuery 테이블의 데이터를 로드했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># BigQuery `tickets` 테이블 불러오기 (to `df`)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT * FROM </span><span class="si">{</span><span class="n">bigquery_tickets_table_id</span><span class="si">}</span><span class="sh">'</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) 그 중, 신규 항목들만 필터링했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 이미 타겟 테이블에 존재하는 행을 제거해주기 (중복 제거)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT DISTINCT id FROM `</span><span class="si">{</span><span class="n">bigquery_tickets_topics_table_id</span><span class="si">}</span><span class="s">`</span><span class="sh">'</span>
   <span class="k">try</span><span class="p">:</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">])</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span>
         <span class="o">~</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">].</span><span class="nf">isin</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">)</span>
      <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
   <span class="k">except</span><span class="p">:</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span>
</code></pre></div>    </div>
  </div>
</details>

<p>4) OpenAI에 요청할 프롬프트를 작성했습니다.</p>

<details>
<summary>System Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   당신의 작업은 고객 문의 내역에서 하나의 핵심 키워드를 분류하는 것입니다.
   오로지 주어진 토픽 목록에서만 선택하여 응답해야 합니다.
   아래는 당신이 선택할 수 있는 토픽 목록입니다:
      {키워드 리스트}
   다른 토픽을 생성하거나 선택하지 마세요.
</code></pre></div>    </div>
  </div>
</details>

<details>
<summary>User Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   아래는 고객 문의 내역입니다.
   이 텍스트에서 하나의 핵심 토픽을 추출하세요.

   고객 문의 내역:
         {실제 텍스트}

   추출 형식: 토픽
   제한 사항: 
   1. 오로지 토픽으로만 응답하세요.
   2. 주어진 토픽 목록에서만 선택하세요. 다른 토픽을 생성하거나 선택하지 마세요.
   3. 반드시 아래 목록에서 하나를 선택하세요:
   {키워드 리스트} 

   추출 결과: 
</code></pre></div>    </div>
  </div>
</details>

<p>5) 각 티켓을 순회하며 OpenAI 주제 분류 작업을 진행했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># OpenAI에 요청할 시스템 프롬프트 정의하기
</span>   <span class="n">prompt_system</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'''</span><span class="s">
   당신의 작업은 고객 문의 내역에서 하나의 핵심 키워드를 분류하는 것입니다.
   오로지 주어진 토픽 목록에서만 선택하여 응답해야 합니다.
   아래는 당신이 선택할 수 있는 토픽 목록입니다:
   </span><span class="si">{</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">topics2_list</span><span class="p">)</span><span class="si">}</span><span class="s">
   다른 토픽을 생성하거나 선택하지 마세요.
   </span><span class="sh">'''</span>

   <span class="c1"># 각 행을 돌아가면서 OpenAI API Request 시작하기
</span>   <span class="n">topic2_results_list</span> <span class="o">=</span> <span class="p">[]</span>

   <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">df</span><span class="p">)):</span>

      <span class="c1"># 주제 + 본문
</span>      <span class="n">text</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">description</span><span class="sh">'</span><span class="p">]</span>
      <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">[:</span><span class="mi">2000</span><span class="p">]</span> <span class="c1"># 2,000개 길이로 제한 (비용 절약)
</span>
      <span class="c1"># 개별적으로 요청할 프롬프트 정의
</span>      <span class="n">prompt_individual</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'''</span><span class="s">
      아래는 고객 문의 내역입니다.
      이 텍스트에서 하나의 핵심 토픽을 추출하세요.

      고객 문의 내역:
      </span><span class="si">{</span><span class="n">text</span><span class="si">}</span><span class="s">

      추출 형식: 토픽
      제한 사항: 
      1. 오로지 토픽으로만 응답하세요.
      2. 주어진 토픽 목록에서만 선택하세요. 다른 토픽을 생성하거나 선택하지 마세요.
      3. 반드시 아래 목록에서 하나를 선택하세요:
      </span><span class="si">{</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">topics2_list</span><span class="p">)</span><span class="si">}</span><span class="s"> 

      추출 결과: 
      </span><span class="sh">'''</span>

      <span class="c1"># API Request 시작
</span>      <span class="n">result</span> <span class="o">=</span> <span class="n">openai_client</span><span class="p">.</span><span class="n">chat</span><span class="p">.</span><span class="n">completions</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span>
            <span class="n">model</span> <span class="o">=</span> <span class="sh">'</span><span class="s">gpt-4</span><span class="sh">'</span><span class="p">,</span>
            <span class="n">max_tokens</span> <span class="o">=</span> <span class="mi">500</span><span class="p">,</span>
            <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
            <span class="n">temperature</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
            <span class="n">stop</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
            <span class="n">messages</span> <span class="o">=</span> <span class="p">[</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">system</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_system</span><span class="p">},</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">user</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_individual</span><span class="p">}</span>
            <span class="p">]</span>
      <span class="p">)</span>

      <span class="c1"># 토픽 결과를 Empty Lists에 기록하기
</span>      <span class="n">topic2_result</span> <span class="o">=</span> <span class="n">result</span><span class="p">.</span><span class="n">choices</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">message</span><span class="p">.</span><span class="n">content</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\'</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\"</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">[</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">]</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">strip</span><span class="p">()</span>
      <span class="n">topic2_results_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">topic2_result</span><span class="p">)</span>

   <span class="c1"># 토픽 2 결과를 통해 토픽 1 결과도 기록하기
</span>   <span class="n">topic1_results_list</span> <span class="o">=</span> <span class="p">[]</span>
   <span class="k">for</span> <span class="n">topic2</span> <span class="ow">in</span> <span class="n">topic2_results_list</span><span class="p">:</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">topics_list</span><span class="p">)):</span>
            <span class="k">if</span> <span class="n">topics_list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">topic2</span><span class="p">:</span>
               <span class="n">topic1_results_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">topics_list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
               <span class="k">break</span>
            <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="nf">len</span><span class="p">(</span><span class="n">topics_list</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
               <span class="n">topic1_results_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="sh">'</span><span class="s">Others</span><span class="sh">'</span><span class="p">)</span>
      
   <span class="c1"># df에 토픽 1, 토픽 2 칼럼을 추가하고, 필요한 칼럼만 뽑아내기
</span>   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_topic_1</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">topic1_results_list</span>
   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_topic_2</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">topic2_results_list</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span>
      <span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">openai_topic_1</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">openai_topic_2</span><span class="sh">'</span>
   <span class="p">]]</span>
</code></pre></div>    </div>
  </div>
</details>

<p>6) 마지막으로, 주제 분류 결과를 BigQuery 테이블에 적재했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 빅쿼리 테이블에 적재하기
</span>   <span class="n">table</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">get_table</span><span class="p">(</span><span class="n">bigquery_tickets_topics_table_id</span><span class="p">)</span>
   <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">load_table_from_dataframe</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">table</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<h5 id="13-요약하기-openai-api">1.3. 요약하기 <code class="language-plaintext highlighter-rouge">(OpenAI API)</code></h5>

<p><img src="/assets/2024-07-20-voc-dashboard/7-ko.png" alt="" /></p>

<p>1) Python에서 BigQuery 테이블의 데이터를 로드했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># BigQuery `tickets` 테이블 불러오기 (to `df`)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT * FROM </span><span class="si">{</span><span class="n">bigquery_tickets_table_id</span><span class="si">}</span><span class="sh">'</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
</code></pre></div>    </div>
  </div>
</details>

<p>2) 그 중, 신규 항목들만 필터링했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 이미 타겟 테이블에 존재하는 행을 제거해주기 (중복 제거)
</span>   <span class="n">query</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">SELECT DISTINCT id FROM `</span><span class="si">{</span><span class="n">bigquery_tickets_summary_table_id</span><span class="si">}</span><span class="s">`</span><span class="sh">'</span>
   <span class="k">try</span><span class="p">:</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>
      <span class="n">existing_ids</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">])</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span>
         <span class="o">~</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">].</span><span class="nf">isin</span><span class="p">(</span><span class="n">existing_ids</span><span class="p">)</span>
      <span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
   <span class="k">except</span><span class="p">:</span>
      <span class="n">df</span> <span class="o">=</span> <span class="n">df</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) OpenAI에 요청할 프롬프트를 작성했습니다.</p>

<details>
<summary>System Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   당신의 작업은 고객 문의 내역을 한국어 한 문장으로 요약하는 것입니다.
   블록체인 하드웨어 및 앱 지갑 서비스 기업의 고객임을 기억하세요.
   요약은 반드시 한국어 한 문장으로 제공되어야 하며, 민감한 개인정보나 링크는 반드시 제거되어야 합니다.
</code></pre></div>    </div>
  </div>
</details>

<details>
<summary>User Prompt</summary>
<div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   아래는 고객 문의 내역입니다.
   이 텍스트를 한국어 하나의 문장으로 요약하세요.

   고객 문의 내역:
   {실제 텍스트}

   추출 형식: 한국어 한 문장
   제한 사항:
   1. 블록체인 하드웨어 및 앱 지갑 서비스 기업의 고객임을 기억하세요.
   2. 반드시 한국어로 요약하세요. (단, 번역이 불가능한 고유 단어는 영어 가능)
   3. 오로지 한 문장으로만 응답하세요.
   4. 민감한 개인정보는 반드시 제거하세요.
   
   추출 결과:  
</code></pre></div>    </div>
  </div>
</details>

<p>4) 각 티켓을 순회하며 OpenAI 요약 작업을 진행했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># OpenAI에 요청할 시스템 프롬프트 정의하기
</span>   <span class="n">prompt_system</span> <span class="o">=</span> <span class="sh">'''</span><span class="s">
   당신의 작업은 고객 문의 내역을 한국어 한 문장으로 요약하는 것입니다.
   블록체인 하드웨어 및 앱 지갑 서비스 기업의 고객임을 기억하세요.
   요약은 반드시 한국어 한 문장으로 제공되어야 하며, 민감한 개인정보나 링크는 반드시 제거되어야 합니다.
   </span><span class="sh">'''</span>

   <span class="c1"># 각 행을 돌아가면서 OpenAI API Request 시작하기
</span>   <span class="n">summaries_list</span> <span class="o">=</span> <span class="p">[]</span>

   <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">df</span><span class="p">)):</span>

      <span class="c1"># 주제 + 본문
</span>      <span class="n">text</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">subject</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="sh">'</span><span class="s">description</span><span class="sh">'</span><span class="p">]</span>
      <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">[:</span><span class="mi">2000</span><span class="p">]</span> <span class="c1"># 2,000개 길이로 제한 (비용 절약)
</span>
      <span class="c1"># 개별적으로 요청할 프롬프트 정의
</span>      <span class="n">prompt_individual</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'''</span><span class="s">
      아래는 고객 문의 내역입니다.
      이 텍스트를 한국어 하나의 문장으로 요약하세요.

      고객 문의 내역:
      </span><span class="si">{</span><span class="n">text</span><span class="si">}</span><span class="s">

      추출 형식: 한국어 한 문장
      제한 사항:
      1. 블록체인 하드웨어 및 앱 지갑 서비스 기업의 고객임을 기억하세요.
      2. 반드시 한국어로 요약하세요. (단, 번역이 불가능한 고유 단어는 영어 가능)
      3. 오로지 한 문장으로만 응답하세요.
      4. 민감한 개인정보는 반드시 제거하세요. (예: 인적사항, 지갑주소, 연락처, 비밀번호, 개인키, 니모닉, 이메일 주소, IP 주소, URL, 소셜 미디어 계정 등)
      
      추출 결과: 
      </span><span class="sh">'''</span>

      <span class="c1"># API Request 시작
</span>      <span class="n">result</span> <span class="o">=</span> <span class="n">openai_client</span><span class="p">.</span><span class="n">chat</span><span class="p">.</span><span class="n">completions</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span>
            <span class="n">model</span> <span class="o">=</span> <span class="sh">'</span><span class="s">gpt-4</span><span class="sh">'</span><span class="p">,</span>
            <span class="n">max_tokens</span> <span class="o">=</span> <span class="mi">200</span><span class="p">,</span>
            <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
            <span class="n">temperature</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
            <span class="n">stop</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
            <span class="n">messages</span> <span class="o">=</span> <span class="p">[</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">system</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_system</span><span class="p">},</span>
               <span class="p">{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">user</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">prompt_individual</span><span class="p">}</span>
            <span class="p">]</span>
      <span class="p">)</span>

      <span class="c1"># 토픽 결과를 Empty Lists에 기록하기
</span>      <span class="n">summary_result</span> <span class="o">=</span> <span class="n">result</span><span class="p">.</span><span class="n">choices</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">message</span><span class="p">.</span><span class="n">content</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\'</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="se">\"</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">[</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">]</span><span class="sh">'</span><span class="p">,</span> <span class="sh">''</span><span class="p">).</span><span class="nf">strip</span><span class="p">()</span>
      <span class="n">summaries_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">summary_result</span><span class="p">)</span>

   <span class="c1"># df에 요약 칼럼을 추가하고, 필요한 칼럼만 뽑아내기
</span>   <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_summary</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">summaries_list</span>
   <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span>
      <span class="sh">'</span><span class="s">id</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">created_datetime</span><span class="sh">'</span><span class="p">,</span>
      <span class="sh">'</span><span class="s">openai_summary</span><span class="sh">'</span>
   <span class="p">]]</span>
</code></pre></div>    </div>
  </div>
</details>

<p>5) 마지막으로, 요약 결과를 BigQuery 테이블에 적재했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1"># 빅쿼리 테이블에 적재하기
</span>   <span class="n">table</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">get_table</span><span class="p">(</span><span class="n">bigquery_tickets_summary_table_id</span><span class="p">)</span>
   <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">load_table_from_dataframe</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">table</span><span class="p">)</span>
</code></pre></div>    </div>
  </div>
</details>

<h3 id="2-대시보드와-알림-봇">2. <strong>대시보드와 알림 봇</strong></h3>

<h5 id="21-대시보드-만들기-bigquery--redash">2.1. 대시보드 만들기 <code class="language-plaintext highlighter-rouge">(BigQuery → Redash)</code></h5>

<p>1) 다음 내용을 지닌 Redash 대시보드를 생성했습니다.</p>

<p><img src="/assets/2024-07-20-voc-dashboard/11.png" alt="" /></p>

<details>
<summary>Topic별 비율</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/12.png" alt="" /></p>
  </div>
</details>

<details>
<summary>Topic별 트렌드</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/13.png" alt="" /></p>
  </div>
</details>

<details>
<summary>Keyword별 트렌드</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/14.png" alt="" /></p>
  </div>
</details>

<details>
<summary>Keyword별 문의 요약</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/15.png" alt="" /></p>
  </div>
</details>

<details>
<summary>전체 데이터</summary>
<div>
    <p><img src="/assets/2024-07-20-voc-dashboard/16.png" alt="" /></p>
  </div>
</details>

<h5 id="22-알림-봇-구축하기-bigquery--slack-api">2.2. 알림 봇 구축하기 <code class="language-plaintext highlighter-rouge">(BigQuery → Slack API)</code></h5>

<p>1) 우선, BigQuery 쿼리문을 작성했습니다.</p>

<details>
<summary>전주에 고객 문의 수가 가장 많이 증가한 세부 주제(Keyword)를 추출 (전전주 대비)</summary>
<div>
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">WITH</span>
   <span class="n">CTE_1w_ago_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">openai_topic_2</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt</span>
      <span class="k">FROM</span>
         <span class="nv">`bigquery_tickets_topics_table_id`</span>
      <span class="k">WHERE</span>
         <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="n">DATE_ADD</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="o">-</span><span class="mi">1</span> <span class="n">WEEK</span><span class="p">),</span> <span class="n">WEEK</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span>
         <span class="k">AND</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">WEEK</span><span class="p">)</span>
         <span class="k">AND</span> <span class="n">openai_topic_1</span> <span class="o">!=</span> <span class="s1">'Others'</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">),</span>
   <span class="n">CTE_2w_ago_raw</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">openai_topic_2</span><span class="p">,</span>
         <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt</span>
      <span class="k">FROM</span>
         <span class="nv">`bigquery_tickets_topics_table_id`</span>
      <span class="k">WHERE</span>
         <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="n">DATE_ADD</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="o">-</span><span class="mi">2</span> <span class="n">WEEK</span><span class="p">),</span> <span class="n">WEEK</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span>
         <span class="k">AND</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">created_datetime</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="n">DATE_ADD</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="o">-</span><span class="mi">1</span> <span class="n">WEEK</span><span class="p">),</span> <span class="n">WEEK</span><span class="p">)</span>
         <span class="k">AND</span> <span class="n">openai_topic_1</span> <span class="o">!=</span> <span class="s1">'Others'</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
         <span class="mi">1</span>
   <span class="p">),</span>
   <span class="n">CTE_diff</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
         <span class="n">COALESCE</span><span class="p">(</span><span class="n">MAIN</span><span class="p">.</span><span class="n">openai_topic_2</span><span class="p">,</span> <span class="n">COMP</span><span class="p">.</span><span class="n">openai_topic_2</span><span class="p">)</span> <span class="k">AS</span> <span class="n">openai_topic_2</span><span class="p">,</span>
         <span class="n">MAIN</span><span class="p">.</span><span class="n">tickets_cnt</span> <span class="k">AS</span> <span class="n">tickets_cnt_1w_ago</span><span class="p">,</span>
         <span class="n">COALESCE</span><span class="p">(</span><span class="n">COMP</span><span class="p">.</span><span class="n">tickets_cnt</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt_2w_ago</span><span class="p">,</span>
         <span class="n">COALESCE</span><span class="p">(</span><span class="n">MAIN</span><span class="p">.</span><span class="n">tickets_cnt</span> <span class="o">-</span> <span class="n">COMP</span><span class="p">.</span><span class="n">tickets_cnt</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tickets_cnt_diff</span>
      <span class="k">FROM</span>
         <span class="n">CTE_1w_ago_raw</span> <span class="n">MAIN</span>
      <span class="k">LEFT</span> <span class="k">JOIN</span>
         <span class="n">CTE_2w_ago_raw</span> <span class="n">COMP</span>
         <span class="k">ON</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">openai_topic_2</span> <span class="o">=</span> <span class="n">COMP</span><span class="p">.</span><span class="n">openai_topic_2</span>
   <span class="p">)</span>
   <span class="k">SELECT</span>
      <span class="n">openai_topic_2</span><span class="p">,</span>
      <span class="n">tickets_cnt_1w_ago</span><span class="p">,</span>
      <span class="n">tickets_cnt_2w_ago</span><span class="p">,</span>
      <span class="n">tickets_cnt_diff</span>
   <span class="k">FROM</span>
      <span class="n">CTE_diff</span>
   <span class="k">WHERE</span>
      <span class="n">tickets_cnt_diff</span> <span class="o">=</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">MAX</span><span class="p">(</span><span class="n">tickets_cnt_diff</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">CTE_diff</span><span class="p">)</span>
      <span class="k">AND</span> <span class="n">tickets_cnt_diff</span> <span class="o">&gt;</span> <span class="mi">0</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
</code></pre></div>    </div>
  </div>
</details>

<p>2) 슬랙 메시지 객체를 작성했습니다.</p>

<details>
<summary>코드 확인하기</summary>
<div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="n">df</span> <span class="o">=</span> <span class="n">bigquery_client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">query</span><span class="p">).</span><span class="nf">to_dataframe</span><span class="p">()</span>

   <span class="c1"># Slack 메시지 제목 만들기
</span>   <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">:phone: *Weekly Zendesk 요약* </span><span class="se">\n\n</span><span class="sh">'</span>
   <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">*지난 1주 가장 많이 증가한 고객 문의 주제들입니다.* </span><span class="se">\n</span><span class="sh">'</span>

   <span class="c1"># 만약 데이터가 존재하는 경우
</span>   <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
      <span class="n">topics</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">openai_topic_2</span><span class="sh">'</span><span class="p">].</span><span class="nf">tolist</span><span class="p">()</span>
      <span class="n">tickets_cnt_1w_agos</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">tickets_cnt_1w_ago</span><span class="sh">'</span><span class="p">].</span><span class="nf">tolist</span><span class="p">()</span>
      <span class="n">tickets_cnt_diffs</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">tickets_cnt_diff</span><span class="sh">'</span><span class="p">].</span><span class="nf">tolist</span><span class="p">()</span>
      <span class="c1"># Slack 메시지 만들기
</span>      <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">topic</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">topics</span><span class="p">):</span>
         <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">- *</span><span class="si">{</span><span class="n">topic</span><span class="si">}</span><span class="s">*: 총 </span><span class="si">{</span><span class="n">tickets_cnt_1w_agos</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="si">}</span><span class="s">건 (전주 대비 +</span><span class="si">{</span><span class="n">tickets_cnt_diffs</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="si">}</span><span class="s">) </span><span class="se">\n</span><span class="sh">'</span>

   <span class="c1"># 만약 데이터가 존재하지 않는 경우
</span>   <span class="k">else</span><span class="p">:</span>
      <span class="n">message</span> <span class="o">+=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">- *증가한 주제가 하나도 없어요.*:smile: </span><span class="se">\n\n</span><span class="sh">'</span>
</code></pre></div>    </div>
  </div>
</details>

<p>3) 매주 월요일 9:00 AM KST에 다음과 같은 슬랙 알림이 발송되었습니다.</p>

<p><img src="/assets/2024-07-20-voc-dashboard/10-ko.png" alt="" /></p>

<hr />

<h1 id="5-results">5. Results</h1>

<blockquote>
  <ol>
    <li><strong>비용 절약</strong>
      <ul>
        <li>월 $300 비용의 외부 서비스를 도입하지 않고도, 내부 개발을 통해 월 $25 비용 만으로 문제를 해소했습니다.</li>
      </ul>
    </li>
    <li><strong>시간 절감</strong>
      <ul>
        <li>사내 구성원 분들의 VOC 팔로업, 이슈 식별과 대응 속도를 향상시켰습니다.</li>
      </ul>
    </li>
  </ol>
</blockquote>

<h3 id="1-비용-절약">1. <strong>비용 절약</strong></h3>

<p>결론) 내부 개발을 통해 매월 약 $275 기회 비용을 제거할 수 있었습니다.</p>

<table>
  <tbody>
    <tr>
      <td> </td>
      <td><strong>외부 VOC 분석 서비스</strong></td>
      <td><strong>내부 개발</strong></td>
    </tr>
    <tr>
      <td>월간 비용</td>
      <td><code class="language-plaintext highlighter-rouge">$300</code></td>
      <td><code class="language-plaintext highlighter-rouge">$25</code></td>
    </tr>
  </tbody>
</table>

<p>1) 외부 VOC 서비스</p>
<ul>
  <li>도입을 고려 중이었던 <a href="https://www.syncly.kr/">syncly</a>의 경우, 최소 월 $299의 비용이 요구되었습니다.</li>
</ul>

<p><img src="/assets/2024-07-20-voc-dashboard/8.png" alt="" /></p>

<p>2) 내부 개발</p>
<ul>
  <li>그러나 직접 내부 개발은 다음과 같은 비용이 요구되었습니다.</li>
</ul>

<table>
  <tbody>
    <tr>
      <td><strong>리소스</strong></td>
      <td><strong>월간 비용</strong></td>
    </tr>
    <tr>
      <td>1. OpenAI API</td>
      <td><code class="language-plaintext highlighter-rouge">$25</code></td>
    </tr>
    <tr>
      <td>2. BigQuery 스토리지</td>
      <td>거의 없음</td>
    </tr>
    <tr>
      <td>3. BigQuery 쿼리 사용</td>
      <td>미미함</td>
    </tr>
    <tr>
      <td>4. VM Instance 운영</td>
      <td>기존 인스턴스를 사용하므로 한계비용 적음</td>
    </tr>
    <tr>
      <td><strong>TOTAL</strong></td>
      <td><code class="language-plaintext highlighter-rouge">$25</code> + e</td>
    </tr>
  </tbody>
</table>

<p><img src="/assets/2024-07-20-voc-dashboard/9.png" alt="ㅇㅇㅇ" /></p>
<blockquote>
  <p>일별 OpenAI API 비용</p>
</blockquote>

<h3 id="2-시간-절감">2. <strong>시간 절감</strong></h3>

<p>1) Redash VOC 대시보드 (주제 분류)</p>
<ul>
  <li>사내 구성원 분들의 VOC 이슈 <u>식별 편의성</u>을 향상시켰습니다.</li>
</ul>

<p>2) Redash VOC 대시보드 (요약)</p>
<ul>
  <li>사내 구성원 분들의 VOC <u>팔로업 속도</u>를 향상시키고 VOC에 대한 <u>접근성</u>을 개선했습니다.</li>
</ul>

<p>3) 슬랙 알림 봇</p>
<ul>
  <li>매주 문의 수가 가장 많이 늘어난 주제를 사내 구성원 분들에게 공유함으로써, 이슈 <u>식별과 대응 속도</u>를 향상시키고 동일한 <u>맥락을 공유</u>하는 데 기여했습니다.</li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Korean" /><category term="Python" /><category term="BigQuery" /><category term="Redash" /><category term="Data Visualization" /><category term="LLM" /><summary type="html"><![CDATA[“사내 구성원 분들이 젠데스크 고객 문의 내역 팔로업에 어려움을 겪고 있다는 사실을 공유 받아, 이를 해결하기 위해 Redash VOC 대시보드를 구축했습니다. 젠데스크 데이터를 자동으로 수집하고 전처리한 후, OpenAI API를 활용해 고객 문의 내역을 주제별로 분류하고 요약했습니다. 추가적으로, 매주 월요일마다 가장 많이 증가한 문의 주제를 슬랙으로 알림을 보내어, 고객 이슈를 효율적으로 식별하고 대응할 수 있도록 기여했습니다. 결과적으로 매월 약 $275 기회 비용을 제거할 수 있었으며, 사내 구성원 분들의 VOC 팔로업 시간을 감소시키는 성과를 얻었습니다.”]]></summary></entry><entry><title type="html">데이터 분석가의 SQL 최적화 일기: 코호트 리텐션 Batch Query 만들기</title><link href="http://localhost:4000/retention-batch-query/" rel="alternate" type="text/html" title="데이터 분석가의 SQL 최적화 일기: 코호트 리텐션 Batch Query 만들기" /><published>2024-01-01T00:00:00+09:00</published><updated>2024-01-01T00:00:00+09:00</updated><id>http://localhost:4000/retention-batch-query</id><content type="html" xml:base="http://localhost:4000/retention-batch-query/"><![CDATA[<blockquote>
  <p>코호트 리텐션의 의미와 중요성에 대해 말씀드리고, Batch Query를 사용하여 회원가입 월 코호트 별로 Monthly Range Retention을 계산하는 방법을 제시해드릴게요.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>코호트 리텐션의 의미와 중요성
    <ul>
      <li>1.1. 리텐션</li>
      <li>1.2. 코호트</li>
      <li>1.3. 코호트 리텐션</li>
      <li>1.4. 코호트 리텐션의 중요성</li>
    </ul>
  </li>
  <li>쿼리 작업 목표</li>
  <li>일회성 쿼리문
    <ul>
      <li>3.1. 쿼리문 보기</li>
      <li>3.2. 문제점</li>
    </ul>
  </li>
  <li>해결 아이디어</li>
  <li>Batch Query를 통해 접근하기</li>
  <li>결론</li>
</ol>

<hr />

<h3 id="disclaimer">DISCLAIMER</h3>
<p>본 아티클은 필자의 전/현 재직 기업의 데이터 분석 현황과 관련이 없으며, 단지 평소에 문제 의식을 지녔던 점에 대한 해결 방법을 스스로 도출해본 내용입니다. 쿼리문 작성에 다른 외부 레퍼런스를 참고하지 않았으며, 분석 환경에 따라 본 내용이 적합하지 않을 수 있으므로 반드시 비판적 고찰을 해주시면 감사드리겠습니다.</p>

<h1 id="1-코호트-리텐션의-의미와-중요성">1. 코호트 리텐션의 의미와 중요성</h1>

<h3 id="11-리텐션">1.1. 리텐션</h3>

<p>먼저, 리텐션은 “시간이 흐름에 따라 얼마나 많은 사용자들이 우리 프로덕트에 재참여하는지”를 나타내는 지표입니다. 이미 많은 분들이 아시듯 리텐션은 PMF를 달성하기 위해 분석해야 할 중요한 지표입니다. 이 정의가 꽤나 간단해보이지만, 측정하는 과정에서 실상은 그렇지 않습니다. “재참여”를 “재”와 “참여”로 나누어 각각의 사전 정의가 이루어져야 하기 때문입니다.</p>

<p><strong>“참여” 개념 정의하기</strong></p>

<p>사용자가 우리 프로덕트에 “참여”한다는 것이 정확히 어떤 순간인지 정의해야 합니다. 예를 들어, 접속, 30초 이상 세션 유지, 특정 퍼널 단계 도달 등 여러 이벤트 중 하나가 “참여”로 간주될 수 있습니다. 저는 개인적으로 아래 3가지 측면 정의를 모두 사전에 준비하여 Target Metric에 따라 적시적소에 모니터링하는 것이 필요하다고 느꼈습니다.</p>

<p>(1) “접속”을 하는 것만으로 참여한 것으로 간주하자!</p>
<ul>
  <li>DAU, WAU, MAU, Stickiness 등의 지표와 직접적으로 연관된 정의 방법이며, 광고 노출 효과를 극대화하는 경우 유용합니다.</li>
</ul>

<p>(2) “구매”까지 해야 참여한 것으로 간주하자!</p>
<ul>
  <li>재구매율 등의 지표와 직접적으로 연관된 정의 방법이며, Recurring Revenue가 중요한 프로덕트에서 중요합니다.</li>
</ul>

<p>(3) “아하 모먼트”에 도달해야 참여한 것으로 간주하자!</p>
<ul>
  <li><a href="https://www.youtube.com/watch?v=0KgOCKJ1PG4">토스의 이승건 대표님에 따르면</a>, 아하 모먼트란 프로덕트의 핵심 가치의 경험하는 순간을 의미합니다.</li>
  <li>X, Y, Z의 조합으로 이루어진 여러 가지 “X 이벤트를 Y 기간 내에 Z번 수행한다” 중 리텐션이 극명하게 높은(가령, 95%) 항목을 사전에 발견하여, 빠르게 PMF를 달성해야 할 때 유용합니다.</li>
</ul>

<p><strong>“재” 개념 정의하기</strong></p>

<p>사용자가 복귀했다는 것을 어떻게 계산할 것인가에 대한 정의가 필요합니다. <a href="https://product.kyobobook.co.kr/detail/S000001766457">양승화님의 그로스해킹에 따르면</a>, Classic Retention, Range Retention, Rolling Retention 중 프로덕트의 특성에 따라 적절한 방법을 선택할 수 있습니다.</p>

<p>(1) Classic Retention: 사용자가 최초로 “참여”한 Day 0 이후, 각 Day N 별로 한 번 더 “참여”했는지 계산합니다.</p>

<p>(2) Range Retention: Day N이 아니라 Week N, Bi-week N, Month N 별로 한 번 더 “참여”했는지 계산합니다.</p>

<p>(3) Rolling Retention: Day N 이후에 한 번이라도 “참여”한 경우를 계산합니다. (이탈률의 반대 개념)</p>

<p><strong>이러한 정의와 측정 방법을 통해 효과적인 리텐션 지표 측정이 가능해질 것입니다.</strong></p>

<h3 id="12-코호트">1.2. 코호트</h3>

<p>코호트의 개념을 두 가지로 혼용하는 경향이 있습니다.</p>
<ol>
  <li><em>“코호트는 세그먼트다. 즉, 사용자가 지닌 여러 가지 Feature 조합을 통해 그룹화된 클러스터다.”</em></li>
  <li><em>“코호트는 세그먼트의 일부로서, 특정 이벤트의 최초 수행일시를 기준으로 그룹화된 클러스터다.” (최초 프로덕트 방문일, 회원가입일, 최초 결제일 등)</em></li>
</ol>

<p>개인적으로는 세그먼트와의 혼동을 줄이기 위해 2번의 개념을 선호하지만, 코호트를 융통성 있게 설정하기 위해 1번 개념에서 언급한 다른 Feature 조합도 선택적으로 추가할 수 있는 “열린 개념”으로 받아들이고 있습니다.</p>

<ul>
  <li>예시 1) 사용자를 최초 프로덕트 방문일 기준으로 그룹화한다. → 코호트 O</li>
  <li>예시 2) 사용자를 최초 접속 국가 기준으로 그룹화한다. → 코호트 X</li>
  <li>예시 3) 사용자를 최초 프로덕트 방문일 및 접속 국가 기준으로 그룹화한다. → 코호트 O</li>
</ul>

<p>이렇게 하면 특정 이벤트의 최초 수행일시를 중심으로 하면서도 다양한 특성을 고려할 수 있어서 코호트를 보다 유연하게 활용할 수 있을 것입니다.</p>

<h3 id="13-코호트-리텐션">1.3. 코호트 리텐션</h3>

<p>코호트 리텐션이란, 기존의 리텐션 개념을 코호트에 따라 시리즈를 달리하여 계산한 지표를 의미합니다. 예를 들면, 최초 프로덕트 방문일을 기준으로 사용자들의 리텐션이 상승 추세인지, 혹은 하락 추세인지를 알 수 있는 것이죠.</p>

<h3 id="14-코호트-리텐션의-중요성">1.4. 코호트 리텐션의 중요성</h3>

<p>아래의 리텐션 지표를 통해 PMF 달성 여부를 확인할 수 있지만, 문제를 파악하거나 액션 포인트를 도출하는 데는 그다지 도움이 되지 않습니다.</p>

<p><img src="/assets/2024-01-01-retention-batch-query/retention.webp" alt="" /></p>
<blockquote>
  <p><a href="https://mermaid.js.org/syntax/xyChart.html">mermaid</a>를 통해 필자가 직접 작성</p>
</blockquote>

<p>그러나 코호트 리텐션 값을 확인할 수 있다면, 프로덕트의 기능 업데이트나 캠페인 론칭 등에 따른 사후 효과를 확인하고, 리텐션 향상을 위해 우리가 어떤 액션에 좀 더 집중해야 하는지 확인하는 데 도움을 줄 수 있습니다.</p>

<p><img src="/assets/2024-01-01-retention-batch-query/cohort-retention.webp" alt="" /></p>
<blockquote>
  <p><a href="https://mermaid.js.org/syntax/xyChart.html">mermaid</a>를 통해 필자가 직접 작성</p>
</blockquote>

<h1 id="2-쿼리-작업-목표">2. 쿼리 작업 목표</h1>

<p>쿼리 작업 목표는 다음과 같습니다. 아래와 같은 테이블을 대시보드에 반영해보고자 합니다. 즉, 회원가입 연월(YYYY-MM) 코호트별 리텐션(Monthly Range)테이블을 배포하여 다양한 이해당사자 분들이 리텐션 지표의 시계열 추이를 확인하시는 데 도움을 드리려는 것입니다.</p>

<p><img src="/assets/2024-01-01-retention-batch-query/task-goal.webp" alt="" /></p>
<blockquote>
  <p>제가 직접 샘플로 만들어본 위 테이블에서는 시간이 흐를수록 리텐션이 향상되는 추이를 보여주고 있군요.</p>
</blockquote>

<p>그런데, 위와 같은 테이블을 만들기 위해서는 SQL의 최후 출력 상태가 다음과 같은 Unpivoted한 형태가 되어야 합니다. 물론 Pivoted한 형태로 직접 출력하는 방법도 있지만, 오늘의 토픽인 “Batch Query 만들기”를 위해서는 Unpivoted한 형태가 되어야 합니다. Table을 Update를 방지하고, 오로지 Insert 작업만 수행함으로써 연산 부하를 방지하기 위함인데요. 지금부터 차차 읽어가시면 이해가 되실 겁니다.</p>

<p><img src="/assets/2024-01-01-retention-batch-query/last-query-results.webp" alt="" /></p>
<blockquote>
  <p>필자가 직접 작성</p>
</blockquote>

<h1 id="3-일회성-쿼리문">3. 일회성 쿼리문</h1>

<h3 id="31-쿼리문-보기">3.1. 쿼리문 보기</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>

<span class="c1">-- 1. 사용자들의 "참여" (회원가입 및 로그인 이벤트) 소스 테이블을 불러온다.</span>
<span class="n">CTE_engagements</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_id</span><span class="p">,</span>
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="nb">datetime</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span>
    <span class="k">FROM</span>
        <span class="n">signups_logins</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
<span class="p">),</span>

<span class="c1">-- 2. 사용자들을 회원가입일 기준의 코호트로 Labeling해준다.</span>
<span class="n">CTE_cohorts</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_id</span><span class="p">,</span>
        <span class="k">MIN</span><span class="p">(</span><span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">cohort_date</span>
    <span class="k">FROM</span>
        <span class="n">CTE_engagements</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span>
<span class="p">),</span>

<span class="c1">-- 3. 사용자들의 "참여" 테이블과 "코호트 Labeling" 테이블을 조인하여 "Day N"도 함께 표시해준다.</span>
<span class="n">CTE_engagements_with_cohorts_daily</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">ENG</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>
        <span class="n">ENG</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
        <span class="n">COH</span><span class="p">.</span><span class="n">cohort_date</span><span class="p">,</span>
        <span class="n">DATE_DIFF</span><span class="p">(</span>
            <span class="n">ENG</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
            <span class="n">COH</span><span class="p">.</span><span class="n">cohort_date</span><span class="p">,</span>
            <span class="k">DAY</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">day_n</span>
    <span class="k">FROM</span>
        <span class="n">CTE_engagements</span> <span class="n">ENG</span>
    <span class="k">LEFT</span> <span class="k">JOIN</span>
        <span class="n">CTE_cohorts</span> <span class="n">COH</span>
        <span class="k">USING</span> <span class="p">(</span><span class="n">user_id</span><span class="p">)</span>
<span class="p">),</span>

<span class="c1">-- 4. "Day N"을 "Month N"으로 변환해준다.</span>
<span class="n">CTE_engagements_with_cohorts_monthly</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_id</span><span class="p">,</span>
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">yyyymm</span><span class="p">,</span>
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="n">cohort_date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">cohort_yyyymm</span><span class="p">,</span>
        <span class="n">DATE_DIFF</span><span class="p">(</span>
            <span class="nb">date</span><span class="p">,</span>
            <span class="n">cohort_date</span><span class="p">,</span>
            <span class="k">MONTH</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">month_n</span>
    <span class="k">FROM</span>
        <span class="n">CTE_engagements_with_cohorts_daily</span>
<span class="p">),</span>

<span class="c1">-- 5. 코호트 및 "Month N" 기준으로 사용자 수를 집계한다.</span>
<span class="n">CTE_month_n_cnt</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">cohort_yyyymm</span><span class="p">,</span>
        <span class="n">month_n</span><span class="p">,</span>
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>
    <span class="k">FROM</span>
        <span class="n">CTE_engagements_with_cohorts_monthly</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
<span class="p">),</span>

<span class="c1">-- 6. 최종 리텐션을 계산한다.</span>
<span class="n">CTE_monthly_retention</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">cohort_yyyymm</span><span class="p">,</span>
        <span class="n">month_n</span><span class="p">,</span>
        <span class="k">CAST</span><span class="p">(</span><span class="n">users_cnt</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span>
        <span class="o">/</span>
        <span class="k">CAST</span><span class="p">(</span><span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">users_cnt</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>
            <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">cohort_yyyymm</span>
            <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">month_n</span>
            <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="n">UNBOUNDED</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="n">UNBOUNDED</span> <span class="k">FOLLOWING</span>
            <span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">monthly_retention</span>
    <span class="k">FROM</span>
        <span class="n">CTE_month_n_cnt</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
<span class="p">)</span>
<span class="k">SELECT</span>
    <span class="o">*</span>
<span class="k">FROM</span>
    <span class="n">CTE_monthly_retention</span>
<span class="p">;</span>
</code></pre></div></div>

<h3 id="32-문제점">3.2. 문제점</h3>

<p>위 쿼리문의 출력 결과는 앞서 잠깐 보여드린 아래와 같은 형태의 테이블을 출력합니다. 그런데, 매번 전체 소스 테이블을 메모리에 올려 리텐션을 계산하려면 연산량이 과도하게 많이 들어 리소스 낭비로 이어지게 됩니다.</p>

<p><img src="/assets/2024-01-01-retention-batch-query/last-query-results.webp" alt="" /></p>
<blockquote>
  <p>필자가 직접 작성</p>
</blockquote>

<h1 id="4-해결-아이디어">4. 해결 아이디어</h1>

<p>마침, Cohort 칼럼과 Month 칼럼이 시계열 형식을 지니고 있으므로 미래의 데이터가 과거의 데이터에 영향을 끼칠 수 없습니다. 또한, 출력된 테이블은  <a href="https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/kimball-techniques/dimensional-modeling-techniques/periodic-snapshot-fact-table/">Periodic Snapshot Fact Table</a>의 유형에 해당합니다. 바로 이 점으로부터 우리는 Batch Query를 활용할 수 있는 여지를 발견할 수 있습니다. 즉, 아래와 같이 매월 1일 00:01 UTC마다 새롭게 획득한 리텐션 값들을 Insert할 수 있는 Batch Query를 작성할 수 있는 것입니다. 특히 이벤트 로그 데이터의 크기가 매우 큰 프로덕트를 운영하고 있다면, 굳이 매번 일회성 쿼리문을 실행할 필요가 없는 셈이죠.</p>

<p><img src="/assets/2024-01-01-retention-batch-query/idea.webp" alt="" /></p>
<blockquote>
  <p>즉, 매월 초마다 좌측 테이블의 빨간색 영역들을 순차적으로 신규 계산하여 테이블 Insert 스케줄링을 구현할 수 있는 것이죠. (필자가 직접 작성)</p>
</blockquote>

<h1 id="5-batch-query를-통해-접근하기">5. Batch Query를 통해 접근하기</h1>

<p><strong>STEP 1) 사용자들의 “참여” 소스 테이블을 불러온다. (단, 현재 시점 기준으로 7개월 전의 월초부터 1개월 전의 월말까지 항목만)</strong></p>

<p><img src="/assets/2024-01-01-retention-batch-query/step1.webp" alt="" /></p>
<blockquote>
  <p>필자가 직접 작성</p>
</blockquote>

<ul>
  <li>로그인했을 때 사용자가 “참여”했다고 가정 하에, 로그인 이벤트를 불러온다.</li>
  <li>코호트는 “회원가입” 기준으로 정의할 것이므로, 회원가입 이벤트도 함께 불러온다.</li>
  <li>Monthly Range Retention은 Month 0부터 Month 6까지만 계산한다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
  
<span class="c1">-- 1. 사용자들의 "참여" (회원가입 및 로그인 이벤트) 소스 테이블을 불러온다.  </span>
<span class="c1">-- (단, 현재 시점 기준으로 7개월 전의 월초부터 1개월 전의 월말까지 항목만)  </span>
<span class="n">CTE_engagements</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_id</span><span class="p">,</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="nb">datetime</span><span class="p">)</span> <span class="k">AS</span>  <span class="nb">date</span>  
    <span class="k">FROM</span>
        <span class="k">source</span><span class="p">.</span><span class="n">signups_logins</span>
    <span class="nv">"if is_incremental()"</span>
    <span class="k">WHERE</span>  
        <span class="c1">-- 현재 시점 기준으로 7개월 전의 월초부터 ~  </span>
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'7'</span> <span class="k">MONTH</span>  
        <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="nb">datetime</span><span class="p">)</span>  
        <span class="c1">-- ~ 현재 시점 기준으로 1개월 전의 월말까지  </span>
        <span class="k">AND</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="nb">datetime</span><span class="p">)</span>  
        <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'1'</span> <span class="k">DAY</span>  
    <span class="nv">"endif"</span>
    <span class="k">GROUP</span> <span class="k">BY</span>  
        <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>STEP 2) 사용자들을 회원가입일 기준의 코호트로 Labeling해준다.</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 2. 사용자들을 회원가입일 기준의 코호트로 Labeling해준다.  </span>
<span class="n">CTE_cohorts</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_id</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">cohort_date</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_engagements</span>  
    <span class="k">GROUP</span> <span class="k">BY</span>  
        <span class="mi">1</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>STEP 3) 사용자들의 “참여” 테이블과 “코호트 Labeling” 테이블을 조인하여 “Day N”도 함께 표시해준다.</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 3. 사용자들의 "참여" 테이블과 "코호트 Labeling" 테이블을 조인하여 "Day N"도 함께 표시해준다.  </span>
<span class="n">CTE_engagements_with_cohorts_daily</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">ENG</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>  
        <span class="n">ENG</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>  
        <span class="n">COH</span><span class="p">.</span><span class="n">cohort_date</span><span class="p">,</span>  
        <span class="n">DATE_DIFF</span><span class="p">(</span>  
            <span class="n">ENG</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>  
            <span class="n">COH</span><span class="p">.</span><span class="n">cohort_date</span><span class="p">,</span>  
            <span class="k">DAY</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">day_n</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_engagements</span> <span class="n">ENG</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span>  
        <span class="n">CTE_cohorts</span> <span class="n">COH</span>  
        <span class="k">USING</span> <span class="p">(</span><span class="n">user_id</span><span class="p">)</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>STEP 4) “Day N”을 “Month N”으로 변환해준다.</strong></p>
<ul>
  <li>Monthly Range Retention을 계산해야 하기 때문이다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 4. "Day N"을 "Month N"으로 변환해준다.  </span>
<span class="n">CTE_engagements_with_cohorts_monthly</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_id</span><span class="p">,</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">yyyymm</span><span class="p">,</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="n">cohort_date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">cohort_yyyymm</span><span class="p">,</span>  
        <span class="n">DATE_DIFF</span><span class="p">(</span>  
            <span class="nb">date</span><span class="p">,</span>  
            <span class="n">cohort_date</span><span class="p">,</span>  
            <span class="k">MONTH</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">month_n</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_engagements_with_cohorts_daily</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>STEP 5) 코호트 및 “Month N” 기준으로 사용자 수를 집계한다.</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 5. 코호트 및 "Month N" 기준으로 사용자 수를 집계한다.  </span>
<span class="n">CTE_month_n_cnt</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">cohort_yyyymm</span><span class="p">,</span>  
        <span class="n">month_n</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">users_cnt</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_engagements_with_cohorts_monthly</span>  
    <span class="k">GROUP</span> <span class="k">BY</span>  
        <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>STEP 6) 최종 리텐션을 계산한다.</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 6. 최종 리텐션을 계산한다.  </span>
<span class="n">CTE_monthly_retention</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">cohort_yyyymm</span><span class="p">,</span>  
        <span class="n">month_n</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="n">users_cnt</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span>  
        <span class="o">/</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">users_cnt</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>  
            <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">cohort_yyyymm</span>  
            <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">month_n</span>  
            <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="n">UNBOUNDED</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="n">UNBOUNDED</span> <span class="k">FOLLOWING</span>  
        <span class="p">)</span>  
        <span class="k">AS</span> <span class="n">monthly_retention</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_month_n_cnt</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>  
<span class="p">)</span>
</code></pre></div></div>

<p><strong>STEP 7) 중복되지 않은 신규 항목들만 Insert할 수 있도록 조건화한다.</strong></p>

<p><img src="/assets/2024-01-01-retention-batch-query/step7.webp" alt="" /></p>
<blockquote>
  <p>필자가 직접 작성</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 7. 중복되지 않은 신규 항목들만 Insert할 수 있도록 조건화한다.  </span>
<span class="n">CTE_monthly_retention_inserted</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="o">*</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_monthly_retention</span>  
    <span class="nv">"if is_incremental()"</span>
    <span class="k">WHERE</span>  
        <span class="c1">-- 현재 시점 기준으로 1개월 전의 코호트: Month 0 리텐션 값만 Insert한다.  </span>
        <span class="p">(</span><span class="n">cohort_yyyymm</span> <span class="o">=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'1'</span> <span class="k">MONTH</span> <span class="k">AND</span> <span class="n">month_n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>  
        <span class="c1">-- 현재 시점 기준으로 2개월 전의 코호트: Month 1 리텐션 값만 Insert한다.  </span>
        <span class="k">OR</span> <span class="p">(</span><span class="n">cohort_yyyymm</span> <span class="o">=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'2'</span> <span class="k">MONTH</span> <span class="k">AND</span> <span class="n">month_n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>  
        <span class="c1">-- 현재 시점 기준으로 3개월 전의 코호트: Month 2 리텐션 값만 Insert한다.  </span>
        <span class="k">OR</span> <span class="p">(</span><span class="n">cohort_yyyymm</span> <span class="o">=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'3'</span> <span class="k">MONTH</span> <span class="k">AND</span> <span class="n">month_n</span> <span class="o">=</span> <span class="mi">2</span><span class="p">)</span>  
        <span class="c1">-- 현재 시점 기준으로 4개월 전의 코호트: Month 3 리텐션 값만 Insert한다.  </span>
        <span class="k">OR</span> <span class="p">(</span><span class="n">cohort_yyyymm</span> <span class="o">=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'4'</span> <span class="k">MONTH</span> <span class="k">AND</span> <span class="n">month_n</span> <span class="o">=</span> <span class="mi">3</span><span class="p">)</span>  
        <span class="c1">-- 현재 시점 기준으로 5개월 전의 코호트: Month 4 리텐션 값만 Insert한다.  </span>
        <span class="k">OR</span> <span class="p">(</span><span class="n">cohort_yyyymm</span> <span class="o">=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'5'</span> <span class="k">MONTH</span> <span class="k">AND</span> <span class="n">month_n</span> <span class="o">=</span> <span class="mi">4</span><span class="p">)</span>  
        <span class="c1">-- 현재 시점 기준으로 6개월 전의 코호트: Month 5 리텐션 값만 Insert한다.  </span>
        <span class="k">OR</span> <span class="p">(</span><span class="n">cohort_yyyymm</span> <span class="o">=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'6'</span> <span class="k">MONTH</span> <span class="k">AND</span> <span class="n">month_n</span> <span class="o">=</span> <span class="mi">5</span><span class="p">)</span>  
        <span class="c1">-- 현재 시점 기준으로 7개월 전의 코호트: Month 6 리텐션 값만 Insert한다.  </span>
        <span class="k">OR</span> <span class="p">(</span><span class="n">cohort_yyyymm</span> <span class="o">=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">-</span> <span class="n">INTERVAL</span> <span class="s1">'7'</span> <span class="k">MONTH</span> <span class="k">AND</span> <span class="n">month_n</span> <span class="o">=</span> <span class="mi">6</span><span class="p">)</span>  
    <span class="nv">"endif"</span>
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>  
<span class="p">)</span>
</code></pre></div></div>

<p><strong>STEP 8) 출력한다.</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="o">*</span>  
<span class="k">FROM</span>  
    <span class="n">CTE_monthly_retention_inserted</span>  
<span class="p">;</span>
</code></pre></div></div>

<h1 id="6-결론">6. 결론</h1>

<p>Data Mart나 Batch Query에 대한 이론은 누구나 쉽게 온라인에서 공부할 수 있지만, 실제 Metrics 별로 모범이 될 만한 레퍼런스를 찾기가 어려운 것 같습니다. 특히, 리텐션의 경우 분명히 일회성 쿼리의 문제점을 해결해야 할 필요성이 클 것임에도 불구하고 저는 개인적으로 구글링을 통해서 적절한 레퍼런스를 전혀 찾지 못했습니다. 그래서 이참에 퍼블릭 레퍼런스를 제가 한 번 만들어보자는 결심이 들어 이렇게 글을 적어봤습니다.</p>

<p>그러나 저의 레퍼런스가 절대로 정답은 아닐 것입니다. Batch Query 모범 사례를 찾기 어렵다는 점은 그만큼 각 프로덕트의 도메인 특수성과 데이터의 형태가 극명하게 달라 절대불변의 정답이 없다는 의미일지도 모르겠습니다.</p>

<p>그러므로, 저의 사례는 가볍게 참고만 해주시고, 독자 분들께서 처한 다양한 특수성에 따라 가장 효율적인 리텐션 측정 환경을 구축하시길 바라겠습니다. 물론, 저의 논리적 오류나 개선 방향에 대한 피드백도 언제나 감사히 받겠습니다. 읽어주셔서 감사합니다.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Korean" /><category term="Data Analysis" /><category term="SQL" /><category term="Data Warehouse" /><summary type="html"><![CDATA[코호트 리텐션의 의미와 중요성에 대해 말씀드리고, Batch Query를 사용하여 회원가입 월 코호트 별로 Monthly Range Retention을 계산하는 방법을 제시해드릴게요.]]></summary></entry><entry><title type="html">데이터 분석가의 SQL 최적화 일기: SELF JOIN을 피하는 방법</title><link href="http://localhost:4000/how-to-avoid-self-joins/" rel="alternate" type="text/html" title="데이터 분석가의 SQL 최적화 일기: SELF JOIN을 피하는 방법" /><published>2023-11-30T00:00:00+09:00</published><updated>2023-11-30T00:00:00+09:00</updated><id>http://localhost:4000/how-to-avoid-self-joins</id><content type="html" xml:base="http://localhost:4000/how-to-avoid-self-joins/"><![CDATA[<blockquote>
  <p>대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, 이번에는 SELF JOIN 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>들어가는 글</li>
  <li>Python과 달리 거칠게 사고해야 하는 SQL</li>
  <li>SELF JOIN을 하면 연산량이 제곱으로 늘어난다.</li>
  <li>Subquery와 EXISTS 사용하기</li>
  <li>결론: 무조건적 우월성은 없다.</li>
</ol>

<hr />

<h3 id="disclaimer">DISCLAIMER</h3>

<p>본 자료는 작성자 본인의 견해일 뿐이며, 실제 데이터베이스의 환경에 따라 적합하지 않을 수 있습니다. 이미지 출처를 제외한 모든 쿼리문과 내용은 본인의 경험에 의해 작성되었습니다. 작성된 쿼리문은 샘플로 작성한 것이며, 본인의 과거 및 현재 재직 회사의 업무 현황과 무관합니다.</p>

<h1 id="1-들어가는-글">1. 들어가는 글</h1>

<p><img src="/assets/2023-11-30-how-to-avoid-self-joins/join-meme.webp" alt="" /></p>
<blockquote>
  <p><a href="https://miro.medium.com/v2/resize:fit:800/1*DTET9ngrx2Gzu6ZJk0G9BQ.jpeg">Source</a></p>
</blockquote>

<p>안녕하세요. 저는 친구들 얼굴을 보면 위와 같은 이상한 생각을 하는 데이터 분석가 Joshua라고 합니다.</p>

<p>저는 일반적인 B2C 기업에서 데이터 분석가로 근무하며, GA4, Amplitude, BigQuery, Redash 등을 활용하여 A/B 테스트, 지표 모니터링 등을 수행하며 회사의 등대 역할을 하며 지냈습니다. 다른 분들과 비슷한 역할을 수행했던 것이죠.</p>

<p>또한 GA4, Amplitude 등과 같은 B2B 데이터 분석 플랫폼 서비스를 만드는 경험도 살짝 했는데요. 그러다보니 저의 R&amp;R은 서비스 자체의 데이터 분석 업무 외에도, 고객들에게 데이터를 서빙하기 위한 데이터 마트 설계와 최적화 업무에 집중되기도 했습니다. 제 타이틀을 멋있게 가공하면 최근에 떠오르는 포지션인 Analytics Engineer, 반쪽 짜리 데이터 엔지니어, 아니면 대충 쿼리 머신 혹은 분지니어(?)인 것 같기도 합니다. 😅</p>

<p>대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, 이번에는 SELF JOIN 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.
(SQL 전문가 분들이 많이 계시는 만큼, 제 글을 비판적으로 고찰해주시면 감사하겠습니다! 😄)</p>

<p>쿼리로 고통 받으며 눈동자에 비가 내렸던 경험 이야기, 시작합니다! (울지마~ 울지마~ 울지마~)</p>

<p><img src="/assets/2023-11-30-how-to-avoid-self-joins/crying-cat-meme.avif" alt="" /></p>
<blockquote>
  <p><a href="https://www.google.com/url?sa=i&amp;url=https%3A%2F%2Fwww.dailydot.com%2Fnews%2Fcat-crying-memes-explainer%2F&amp;psig=AOvVaw1JpDJ5k_6Tx93h2YT8in_Y&amp;ust=1702536707113000&amp;source=images&amp;cd=vfe&amp;opi=89978449&amp;ved=0CBMQjRxqFwoTCMC01dLpi4MDFQAAAAAdAAAAABAD">Source</a></p>
</blockquote>

<h1 id="2-python과-달리-거칠게-사고해야-하는-sql">2. Python과 달리 거칠게 사고해야 하는 SQL</h1>

<p>SQL을 통해 OLAP(Online Analytical Processing)에 해당하는 데이터 웨어하우스를 구축하다보면, 종종  <strong>SELF JOIN</strong>이 필요합니다. 가령, 소스 테이블의 복사본인 Staging Table을 Pivoting 해야 하거나, 칼럼 A와 칼럼 B 간의 관계 규칙을 찾아 Data Cleaning을 해야 하는 경우에 특히 발생하는 것 같았어요.</p>

<p>가령, Python의 Pandas Dataframe 환경에서는 메소드를 통해 너무나도 쉽게 Pivoting을 하거나, 반복문과 조건문을 통해 칼럼 사이의 관계 규칙을 고작 몇 줄 코드 만으로 Data Cleaning을 할 수 있을 것입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pandas</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">.</span><span class="n">pivot</span>
<span class="n">pandas</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">value</span> <span class="k">if</span> <span class="n">condition</span> <span class="ow">is</span> <span class="n">true</span> <span class="k">if</span> <span class="n">x</span> <span class="n">condition</span> <span class="k">else</span> <span class="n">value</span> <span class="n">of</span> <span class="n">condition</span> <span class="ow">is</span> <span class="n">false</span><span class="p">)</span>
</code></pre></div></div>

<p>하지만 안타깝게도 SQL에서는 다소 거친 방법으로 쿼리문을 작성해야 하므로 좀 더 테이블 자체를 기반의 Logical Thinking을 하는 것이 중요합니다.</p>

<p>가령 다음 기본적인 사례와 같이, 국가 별로 MAU를 집계할 경우에 SQL은 훨씬 거칠게 표현합니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
   <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="nb">datetime</span><span class="p">)</span> <span class="k">AS</span> <span class="n">yyyymm</span><span class="p">,</span>  
   <span class="n">country</span><span class="p">,</span>  
   <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">mau</span>  
<span class="k">FROM</span>  
   <span class="n">source_events</span>  
<span class="k">GROUP</span> <span class="k">BY</span>  
   <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>  
<span class="k">ORDER</span> <span class="k">BY</span>  
   <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>  
<span class="p">;</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source_events</span><span class="p">[</span><span class="sh">'</span><span class="s">yyyymm</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">to_datetime</span><span class="p">(</span><span class="n">source_events</span><span class="p">[</span><span class="sh">'</span><span class="s">datetime</span><span class="sh">'</span><span class="p">]).</span><span class="n">dt</span><span class="p">.</span><span class="nf">to_period</span><span class="p">(</span><span class="sh">'</span><span class="s">M</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">result_df</span> <span class="o">=</span> <span class="n">source_events</span><span class="p">.</span><span class="nf">groupby</span><span class="p">([</span><span class="sh">'</span><span class="s">yyyymm</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">country</span><span class="sh">'</span><span class="p">]).</span><span class="nf">agg</span><span class="p">(</span><span class="n">mau</span><span class="o">=</span><span class="p">(</span><span class="sh">'</span><span class="s">user_id</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">nunique</span><span class="sh">'</span><span class="p">)).</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>  
<span class="n">result_df</span> <span class="o">=</span> <span class="n">result_df</span><span class="p">.</span><span class="nf">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">yyyymm</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">country</span><span class="sh">'</span><span class="p">]).</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>  
<span class="nf">print</span><span class="p">(</span><span class="n">result_df</span><span class="p">)</span>
</code></pre></div></div>

<p>즉, 파이썬의  <code class="language-plaintext highlighter-rouge">to_period</code>,  <code class="language-plaintext highlighter-rouge">groupby</code>,  <code class="language-plaintext highlighter-rouge">nunique</code>  등과 같은 내장 메소드의 연산 원리를 이해하여 이를  <code class="language-plaintext highlighter-rouge">DATE_TRUNC</code>,  <code class="language-plaintext highlighter-rouge">COUNT(DISTINCT …)</code>,  <code class="language-plaintext highlighter-rouge">GROUP BY</code>  등의 SQL 함수와 Statement로 표현해야 하는 것이죠.</p>

<h1 id="3-self-join을-하면-연산량이-제곱으로-늘어난다">3. SELF JOIN을 하면 연산량이 제곱으로 늘어난다.</h1>

<p>먼저 다음과 같은 쿼리문 사례를 살펴보도록 하죠.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="nb">datetime</span><span class="p">,</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span><span class="p">,</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">event_index</span><span class="p">,</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span><span class="p">,</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_key</span><span class="p">,</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_value</span>  
<span class="k">FROM</span>  
   <span class="n">source_events</span> <span class="n">MAIN</span>  
<span class="k">LEFT</span> <span class="k">JOIN</span>  
   <span class="n">source_events</span> <span class="n">SUB</span>  
   <span class="k">ON</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_id</span>  
      <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span>  
      <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_index</span>  
<span class="k">WHERE</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">0</span>  
   <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">1</span>  
   <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">2</span>  
   <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">3</span>
</code></pre></div></div>

<p>위 사례는 가령 이런 상황으로 이해하시면 될 것 같습니다. 사용자의 이벤트 로그 소스 테이블에서 각 이벤트의 파라미터 key-value가 unnested된 상태로 존재하거나, 혹은 특정 파라미터의 index를 기준으로 인접한 파라미터 정보들만 추출해야 하는 상황에서 위와 같은 쿼리문 작성이 필요할 것입니다.</p>

<p>SQL의 연산 과정은  <strong>FROM → XXX JOIN → WHERE → GROUP BY → SELECT → HAVING → ORDER BY</strong>  등의 순으로 진행되는데요. 위 쿼리문을 연산하는 과정에서 WHERE Statement에 진입하기 전에, 먼저 FROM과 LEFT JOIN을 통해 모든 Row를 메모리에 로드하게 됩니다.</p>

<p><img src="/assets/2023-11-30-how-to-avoid-self-joins/sql-processing.webp" alt="" /></p>
<blockquote>
  <p><a href="https://blog.kakaocdn.net/dn/ckOt66/btrjP1TVZsq/Ta9JdTTiEd9tddkKkFk2n1/img.png">Source</a></p>
</blockquote>

<p>가령,  <code class="language-plaintext highlighter-rouge">source_events</code>  테이블이 1,000,000개의 Row로 구성되어 있다면, 최대 1,000,000 * 1,000,000개의 Row가 메모리에 올라오게 되는 것이죠. 이는 쿼리 엔진의 메모리 및 트래픽 DevOps 환경이 중요한 경우 분명히 문제가 됩니다. 혹은 Usage Limit이 걸려 있을 경우에는 쿼리 실행이 몇 시간 동안 진행되다가 아침에 눈을 떠보면 트래픽 제한으로 인해 실행이 실패되었다는 매우 슬프고 참담한 상황에 마주하게 될 것입니다.</p>

<p><img src="/assets/2023-11-30-how-to-avoid-self-joins/crying-meme.webp" alt="" /></p>
<blockquote>
  <p><a href="https://res.heraldm.com/content/image/2021/07/16/20210716000671_0.jpg">Source</a></p>
</blockquote>

<p>그렇다면, 이런 상황에서 어떻게 쿼리를 최적화할 수 있을까요?</p>

<h1 id="4-subquery와-exists-사용하기">4. Subquery와 EXISTS 사용하기</h1>

<p>위에서 보셨던 쿼리문을 아래와 같이 수정해봤습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
   <span class="nb">datetime</span><span class="p">,</span>  
   <span class="n">user_id</span><span class="p">,</span>  
   <span class="n">session_id</span><span class="p">,</span>  
   <span class="n">event_index</span><span class="p">,</span>  
   <span class="n">event_param_index</span><span class="p">,</span>  
   <span class="n">event_param_key</span><span class="p">,</span>  
   <span class="n">event_param_value</span>  
<span class="k">FROM</span>  
   <span class="n">source_events</span> <span class="n">MAIN</span>  
<span class="k">WHERE</span>  
   <span class="k">EXISTS</span> <span class="p">(</span>  
      <span class="k">SELECT</span> <span class="mi">1</span>  
      <span class="k">FROM</span> <span class="n">source_events</span> <span class="n">SUB</span>  
      <span class="k">WHERE</span>  
         <span class="n">event_type</span> <span class="o">=</span> <span class="s1">'click_button'</span>  
         <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_id</span>  
         <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span>  
         <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_index</span>  
         <span class="k">AND</span> <span class="p">(</span>  
            <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">0</span>  
            <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">1</span>  
            <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">2</span>  
            <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">3</span>  
         <span class="p">)</span>  
   <span class="p">)</span>
</code></pre></div></div>

<p>자, 어떻게 달라졌는지 차근차근 살펴보도록 하죠.</p>

<h3 id="1-먼저-left-join이-사라지고-where-statement의-subquery가-추가되었습니다">1. 먼저, LEFT JOIN이 사라지고, WHERE Statement의 Subquery가 추가되었습니다.</h3>

<p>JOIN보다 Subquery가 반드시 모든 상황에서 성능이 우월하지는 않지만, 이 상황에서는 메모리 데이터의 사이즈는 상당 부분 해소되었습니다. 앞서 말씀 드린 것처럼, SQL은 WHERE Statement를 고려하기 전에 먼저 FROM과 LEFT JOIN을 먼저 실행하게 되는데, WHERE Statement의 Subquery로 옮김으로써 LEFT JOIN에서 실행되어야 하는 작업을 WHERE에서 동시에 연산하여 메모리에 올릴 수 있게 되었습니다.</p>

<p>가령,  <code class="language-plaintext highlighter-rouge">source_events</code>  테이블의 Row 수가 1,000,000개 이고, WHERE를 통해 Filter out된 Row 수가 10,000개라면, 메모리에 올라가게 되는 Row 수는 이전의 최대 1,000,000 * 1,000,000개에서 1,000,000 * 10,000개로 1% 수준으로 급감하였습니다.</p>

<h3 id="2-in보다-exists가-연산-속도가-더-빠릅니다">2. IN보다 EXISTS가 연산 속도가 더 빠릅니다.</h3>

<p>IN과 EXISTS 모두 “<strong>XXX한 경우가 존재하니?</strong>”를 질문하는 과정으로 추상화할 수 있을 것 같은데요.</p>

<p>만약 IN을 통해 Filter out하려고 하면 가령 아래와 같은 쿼리문을 작성해야 합니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WHERE</span>  
   <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">0</span> <span class="k">FROM</span> <span class="p">...)</span>  
   <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">FROM</span> <span class="p">...)</span>  
   <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">2</span> <span class="k">FROM</span> <span class="p">...)</span>  
   <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">3</span> <span class="k">FROM</span> <span class="p">...)</span>  
<span class="p">...</span>
</code></pre></div></div>

<p>위 과정은 한 가지 단점이 있습니다.  <code class="language-plaintext highlighter-rouge">SUB.event_param_index</code>  칼럼의 값들을 일일이 출력해야 하는데요. 즉, 다양한 값들로 구성된 칼럼을 메모리에 로드해야 한다는 것이죠.</p>

<p>그러나 EXISTS를 통해 Filter out하려고 하면 아래와 같은 쿼리문으로 수정될 수 있습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WHERE</span>  
   <span class="k">EXISTS</span> <span class="p">(</span>  
      <span class="k">SELECT</span> <span class="mi">1</span>  
      <span class="k">FROM</span> <span class="p">...</span>  
      <span class="k">WHERE</span>  
         <span class="p">...</span>  
         <span class="k">AND</span> <span class="p">(</span>  
         <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">0</span>  
         <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">1</span>  
         <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">2</span>  
         <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">3</span>  
   <span class="p">)</span>
</code></pre></div></div>

<p>이 과정은 위에서 말씀 드린 IN의 단점을 상당 부분 해소합니다.  <code class="language-plaintext highlighter-rouge">SUB.event_param_index</code>  칼럼의 값들을 일일이 출력했던 것과 달리, 이번에는 조건을 만족하기만 하면 단순히 일괄적으로  <code class="language-plaintext highlighter-rouge">1</code>로만 구성된 칼럼을 메모리에 로드하게 됩니다. Data Type 측면에서 훨씬 메모리의 부담을 경감시킬 수 있습니다. (혹은 <code class="language-plaintext highlighter-rouge">1</code>이 아니라,  <code class="language-plaintext highlighter-rouge">True</code>나  <code class="language-plaintext highlighter-rouge">False</code>와 같은 Boolean 타입으로 출력하면 더 확실하게 경감시킬 수 있을 것 같네요.)</p>

<h1 id="5-결론-무조건적-우월성은-없다">5. 결론: 무조건적 우월성은 없다.</h1>

<p>자 이제 다시 최적화된 쿼리문 전체를 보시죠.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
   <span class="nb">datetime</span><span class="p">,</span>  
   <span class="n">user_id</span><span class="p">,</span>  
   <span class="n">session_id</span><span class="p">,</span>  
   <span class="n">event_index</span><span class="p">,</span>  
   <span class="n">event_param_index</span><span class="p">,</span>  
   <span class="n">event_param_key</span><span class="p">,</span>  
   <span class="n">event_param_value</span>  
<span class="k">FROM</span>  
   <span class="n">source_events</span> <span class="n">MAIN</span>  
<span class="k">WHERE</span>  
   <span class="k">EXISTS</span> <span class="p">(</span>  
      <span class="k">SELECT</span> <span class="mi">1</span>  
      <span class="k">FROM</span> <span class="n">source_events</span> <span class="n">SUB</span>  
      <span class="k">WHERE</span>  
         <span class="n">event_type</span> <span class="o">=</span> <span class="s1">'click_button'</span>  
         <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_id</span>  
         <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span>  
         <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_index</span>  
         <span class="k">AND</span> <span class="p">(</span>  
            <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">0</span>  
            <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">1</span>  
            <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">2</span>  
            <span class="k">OR</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">event_param_index</span> <span class="o">+</span> <span class="mi">3</span>  
         <span class="p">)</span>  
   <span class="p">)</span>
</code></pre></div></div>

<p>프로그래밍에는 반드시 “<strong>방법 A가 방법 B보다 우월하다.</strong>”라는 것은 존재하지 않은 것처럼, 각자의 환경에 따라 취사선택하며 최적화를 하는 것이 중요할 것입니다.</p>

<p>WHERE Statement의 Subquery가 JOIN보다 반드시 우월한 것도 아니고, 경우에 따라 EXISTS가 IN보다 반드시 뛰어난 성능을 보이지 않을 수도 있습니다.</p>

<p>또한, 일반적으로 Subquery와 EXISTS 문법은 SQL 초급 사용자 분들께는 살짝 팔로업하기 어려울 수 있으므로, 가독성 측면에서 추후 유지보수의 장애로 작용할 수도 있을 것입니다.</p>

<p><img src="/assets/2023-11-30-how-to-avoid-self-joins/infinite-challenge.webp" alt="" /></p>
<blockquote>
  <p><a href="https://i.pinimg.com/736x/cd/c3/57/cdc35735e9efc721d26a0f3f780178a4.jpg">Source</a></p>
</blockquote>

<p>앞으로, 대용량의 데이터 소스를 다루시다가 SELF JOIN 때문에 트래픽 문제가 발생하신다면 위와 같은 사례로도 접근 가능하다는 점을 참고하시고, 각자 처한 환경에 따라 최적화하여 가성비 좋은 데이터 분석을 하시길 바랄게요. 부족한 글을 읽어주셔서 감사합니다!</p>

<p><img src="/assets/2023-11-30-how-to-avoid-self-joins/bye-guys.webp" alt="" /></p>
<blockquote>
  <p>퇴사하겠다는 의미가 아니라, 계속 쿼리 작성하러 가겠다는 의미</p>
</blockquote>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Korean" /><category term="Data Analysis" /><category term="SQL" /><summary type="html"><![CDATA[대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, 이번에는 SELF JOIN 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.]]></summary></entry><entry><title type="html">데이터 분석가의 SQL 최적화 일기: Static vs. Rolling Stickiness</title><link href="http://localhost:4000/static-vs-rolling-stickiness/" rel="alternate" type="text/html" title="데이터 분석가의 SQL 최적화 일기: Static vs. Rolling Stickiness" /><published>2023-11-19T00:00:00+09:00</published><updated>2023-11-19T00:00:00+09:00</updated><id>http://localhost:4000/static-vs-rolling-stickiness</id><content type="html" xml:base="http://localhost:4000/static-vs-rolling-stickiness/"><![CDATA[<blockquote>
  <p>대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, Stickiness 지표 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>들어가는 글</li>
  <li>Rolling MAU vs. 30일 이동평균선</li>
  <li>Static MAU</li>
  <li>Stickiness 지표</li>
  <li>Rolling Stickiness</li>
  <li>Static Stickiness</li>
  <li>Data Mart를 통해 Rolling MAU 도입하기</li>
  <li>결론: Query Cost vs Data Freshness</li>
</ol>

<hr />

<h3 id="disclaimer">DISCLAIMER</h3>
<blockquote>
  <p>본 자료는 작성자 본인의 견해일 뿐이며, 실제 데이터베이스의 환경에 따라 적합하지 않을 수 있습니다. 이미지 출처를 제외한 모든 쿼리문과 내용은 본인의 경험에 의해 작성되었습니다. 작성된 쿼리문은 샘플로 작성한 것이며, 본인의 과거 및 현재 재직 회사의 업무 현황과 무관합니다.</p>
</blockquote>

<h1 id="1-들어가는-글">1. 들어가는 글</h1>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/unfinished-work.webp" alt="" /></p>
<blockquote>
  <p><a href="https://datasciencedojo.com/blog/data-science-memes/">Source</a></p>
</blockquote>

<p>안녕하세요. 저는 위 아이 처럼 데이터 분석가로 근무하고 있는 Joshua라고 합니다.</p>

<p>저는 일반적인 B2C 기업에서 데이터 분석가로 근무하며, GA4, Amplitude, BigQuery, Redash 등을 활용하여 A/B 테스트, 지표 모니터링 등을 수행하며 회사의 등대 역할을 하며 지냈습니다. 다른 분들과 비슷한 역할을 수행했던 것이죠.</p>

<p>또한 GA4, Amplitude 등과 같은 B2B 데이터 분석 플랫폼 서비스를 만드는 경험도 살짝 했는데요. 그러다보니 저의 R&amp;R은 서비스 자체의 데이터 분석 업무 외에도, 고객들에게 데이터를 서빙하기 위한 데이터 마트 설계와 최적화 업무에 집중되기도 했습니다. 제 타이틀을 멋있게 가공하면 최근에 떠오르는 포지션인 Analytics Engineer, 반쪽 짜리 데이터 엔지니어, 아니면 대충 쿼리 머신 혹은 분지니어(?)인 것 같기도 합니다. 😅</p>

<p>아무튼 대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, Stickiness 지표 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.</p>

<p>(SQL 전문가 분들이 많이 계시는 만큼, 제 글을 비판적으로 고찰해주시면 감사하겠습니다! 😄)</p>

<h1 id="2-rolling-mau-vs-30일-이동평균선">2. Rolling MAU vs. 30일 이동평균선</h1>

<p>Rolling MAU란 마치 30일 이동평균선 인디케이터 등과 유사하게, 각 시점마다 최근 30일 동안의 MAU를 측정하는 지표입니다. 아래 GA4의 리포트는 WAU와 MAU를 모두 Rolling 방식으로 집계하고 있는 대표적인 사례라고 할 수 있을 것 같아서 가져와봤어요!</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/user-activity-over-time.webp" alt="" /></p>
<blockquote>
  <p><a href="https://measureschool.com/ga4-active-users/">Source</a></p>
</blockquote>

<p>하지만, 30일 이동평균선 인디케이터와 Rolling MAU의 연산 방식에는 중대한 차이점이 있습니다.</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/trading-view.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.tradingwithrayner.com/20-30-day-moving-average/">Source</a></p>
</blockquote>

<p>먼저 30일 이동평균선을 SQL스럽게 작성해본다면, 단순히  <code class="language-plaintext highlighter-rouge">AVG Window Functions</code>를 통해 즉각적으로 연산할 수 있습니다. Window Functions는 이미 출력된  <code class="language-plaintext highlighter-rouge">price</code>  칼럼 자체를 통해 연산하므로,  <code class="language-plaintext highlighter-rouge">daily_prices</code>  테이블을 중복으로 불러오지 않아 연산량이 기하급수적으로 증가하지 않습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_ma_30d</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="nb">date</span><span class="p">,</span>
      <span class="n">price</span><span class="p">,</span>
      <span class="k">AVG</span><span class="p">(</span><span class="n">price</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>
         <span class="k">ORDER</span> <span class="k">BY</span> <span class="nb">date</span>
         <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="mi">29</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="k">CURRENT</span> <span class="k">ROW</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">ma_30d</span>
   <span class="k">FROM</span>
      <span class="n">daily_prices</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_ma_30d</span>
<span class="p">;</span>
</code></pre></div></div>

<p>반면, Rolling MAU의 연산 방식은 중대한 문제점이 있습니다. 즉, Window Functions를 통해 연산하는 것이 어렵다는 점입니다. 아래 쿼리문을 살펴보면,  <code class="language-plaintext highlighter-rouge">SELECT Statement</code>  내 서브쿼리를 통해 Outer Table의 각  <code class="language-plaintext highlighter-rouge">date</code>마다 일일이 Inner Table의 가변적인 기간마다 모든  <code class="language-plaintext highlighter-rouge">user_id</code>  고유값 개수를  <code class="language-plaintext highlighter-rouge">COUNT</code>하게 됩니다. 즉,  <code class="language-plaintext highlighter-rouge">session_starts</code>  테이블 내의  <code class="language-plaintext highlighter-rouge">date</code>  고유값 개수가 365개라면, 각  <code class="language-plaintext highlighter-rouge">rolling_mau</code>  칼럼의 값을 계산하기 위해서는 동일한 테이블을 365번이나 메모리에 올려야 하는 것이죠.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_rolling_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="p">(</span>
         <span class="k">SELECT</span>
            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span>
         <span class="k">FROM</span>
            <span class="n">session_starts</span> <span class="n">SUB</span>
         <span class="k">WHERE</span>
            <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span>
            <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span> <span class="o">&lt;=</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span> <span class="n">MAIN</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_rolling_mau</span>
<span class="p">;</span>
</code></pre></div></div>

<p>결국, 30일 이동평균선과 달리 Rolling MAU의 경우 단순한 집계로 가능한 영역이 아니라,  <code class="language-plaintext highlighter-rouge">COUNT(DISTINCT user_id)</code>를 수행하기 위한 테이블 재탐색이 각 Row마다 중복 발생해야 하는 영역입니다. 따라서 이는 쿼리문의 성능과 비용 관리에 매우 부정적인 영향을 끼치게 됩니다.</p>

<h1 id="3-static-mau">3. Static MAU</h1>

<p>Static MAU는 제가 직접 마음대로 지어본 용어인데요. 😅 Rolling MAU에서 겪은 문제점에 대해 다음과 같은 방식으로 타협을 해봤습니다.</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/cat.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.reddit.com/r/ProgrammerHumor/comments/szxooa/the_difference_between_dynamic_vs_static_ip/?rdt=33714">Source</a></p>
</blockquote>

<p><strong>“어쩔 수 없네. 그럼, MAU는 Rolling 방식이 아닌 각 월 별로 Static하게 집계해보자!”</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_static_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="k">month</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">static_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_static_mau</span>
<span class="p">;</span>
</code></pre></div></div>

<p>Static MAU는 Rolling MAU에 비해 다음과 같은 장/단점이 존재할 것 같습니다.</p>
<ul>
  <li><strong>장점</strong>: 쿼리 비용이 크게 절감되고 연산 속도가 빨라집니다.</li>
  <li><strong>단점</strong>: 쿼리가 실행되는 시점 당월의 경우, 월말이 도래하기 전까지는 MAU가 과소평가되어 데이터 분석의 Freshness가 저하됩니다. 즉, 오늘이 1월 2일이라면 1월의 MAU는 1월 1일부터 1월 2일까지만 집계되겠죠.</li>
</ul>

<h1 id="4-stickiness-지표">4. Stickiness 지표</h1>

<p>한편, 흔히 <code class="language-plaintext highlighter-rouge">DAU➗MAU</code>로 표현되는 Stickiness(사용자 고착도)를 측정하는 경우에는 Static과 Rolling 방식 사이의 고민이 더욱 깊어지게 됩니다.</p>

<p>Stickiness 지표는 토스, Instagram, YouTube, TikTok, 블라인드 등 활성 사용자들이 습관적으로 앱에 방문함으로써 광고 노출 효과 등을 극대화해야 하는 서비스에서 매우 중요한 지표입니다. 나쁘게 말하면, 사용자의 중독도를 파악하기 위한 지표인 것이죠. 😂</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/facebook.webp" alt="" /></p>
<blockquote>
  <p><a href="https://velog.io/@datarian/retention4">Source</a></p>
</blockquote>

<h1 id="5-rolling-stickiness">5. Rolling Stickiness</h1>

<p>Stickiness도 마찬가지로, Rolling Stickiness와 Static Stickiness로 구분하여 연산할 수 있는데요. (Static Stickiness도 제가 마음대로 지어본 용어입니다.) 먼저 Rolling Stickiness 지표 산출을 위한 쿼리문은 다음과 같습니다.
(참고로, 분모가 0이 되는 케이스의 경우, 0으로 반환되도록  <code class="language-plaintext highlighter-rouge">COALSECE(TRY(…), 0)</code> 함수를 사용했습니다. 혼동이 없으시길 바랄게요! 🙃)</p>

<p>이 경우 Rolling MAU 연산 방식과 마찬가지로, Outer Table의 각  <code class="language-plaintext highlighter-rouge">date</code>마다 일일이 Inner Table의 모든  <code class="language-plaintext highlighter-rouge">user_id</code>  고유값 개수를  <code class="language-plaintext highlighter-rouge">COUNT</code>하게 됩니다. 즉, 메모리 사용량과 트래픽 수준이 급격하게 상승할 것입니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_rolling_stickiness</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="n">COALESCE</span><span class="p">(</span>
         <span class="n">TRY</span><span class="p">(</span>
            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span>
            <span class="o">/</span>
            <span class="p">(</span>
               <span class="k">SELECT</span>
                  <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span>
               <span class="k">FROM</span>
                  <span class="n">session_start</span> <span class="n">SUB</span>
               <span class="k">WHERE</span>
                  <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span>
                  <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span> <span class="o">&lt;=</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span>
            <span class="p">)</span>
         <span class="p">),</span>
         <span class="mi">0</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_stickiness</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span> <span class="n">MAIN</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_rolling_stickiness</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="6-static-stickiness">6. Static Stickiness</h1>

<p>그러나 Static Stickiness 방식으로 접근할 경우 쿼리문은 다음과 같습니다. DAU와 Static MAU를 Inline View로 먼저 계산한 후, 각 일자 별  <code class="language-plaintext highlighter-rouge">dau</code>를 고정된 월의  <code class="language-plaintext highlighter-rouge">mau</code>로 나누어주는 방식입니다. 이 경우, 쿼리 비용과 연산 속도를 크게 개선할 수 있게 됩니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_dau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="nb">date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">),</span>
<span class="n">CTE_static_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="k">month</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">static_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">),</span>
<span class="n">CTE_static_stickiness</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">dau</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="n">COALESCE</span><span class="p">(</span>
         <span class="n">TRY</span><span class="p">(</span><span class="n">dau</span><span class="p">.</span><span class="n">dau</span> <span class="o">/</span> <span class="n">static_mau</span><span class="p">.</span><span class="n">static_mau</span><span class="p">),</span>
         <span class="mi">0</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">static_stickiness</span>
   <span class="k">FROM</span>
      <span class="n">dau</span>
   <span class="k">LEFT</span> <span class="k">JOIN</span>
      <span class="n">static_mau</span>
      <span class="k">ON</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="n">dau</span><span class="p">.</span><span class="nb">date</span><span class="p">)</span> <span class="o">=</span> <span class="n">static_mau</span><span class="p">.</span><span class="k">month</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_static_stickiness</span>
<span class="p">;</span>
</code></pre></div></div>

<p>물론, Static Stickiness는 Rolling Stickiness에 비해 다음과 같은 장/단점이 존재합니다.</p>
<ul>
  <li><strong>장점</strong>: 쿼리 비용이 크게 절감되고 연산 속도가 빨라집니다.</li>
  <li><strong>단점</strong>: 당월의 경우, 월말이 도래하기 전까지는 MAU가 과소평가되어 Stickiness가 비정상적으로 높은 값으로 측정됩니다. 즉, 오늘이 1월 1일이라면,  <code class="language-plaintext highlighter-rouge">DAU=MAU</code>  이므로  <code class="language-plaintext highlighter-rouge">Stickiness=100%</code>인 말도 안되는 수치가 대시보드에 표시될 것입니다.😨</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">Stickiness=100%</code>  로 표현되면, 사내 구성원들에게 잘못된 의사결정의 근거를 전달하게 될 위험성이 존재합니다. 따라서, Static Stickiness 방식을 사내에 도입하게 될 경우, 매월 초 자정에만 Appending되도록 하는 스케줄링을 두어야 할 것입니다. 즉, 1월 1일부터 1월 31일까지의 Stickiness 지표는 2월 1일이 되어야만 대시보드에 표현되는 것이죠. 그렇다면, Stickiness 지표는 최대 30일 이상 지연되어 서비스의 신속한 Action Item을 실행하기가 어려워질 것입니다. Stickiness는 Data Freshness가 중요한 지표 중 하나인데도 불구하고 말이죠.</p>

<h1 id="7-data-mart를-통해-rolling-mau-도입하기">7. Data Mart를 통해 Rolling MAU 도입하기</h1>

<p>그러면 대안이 없을까요? 없으면 제가 이 글을 안 썼겠죠.🤭 Data Mart 내에 Incremental Strategy를 적용한 <code class="language-plaintext highlighter-rouge">rolling_mau</code>  테이블 스케줄링을 구축한다면 앞서 언급한 Rolling Stickiness의 치명적인 단점을 개선할 수 있습니다. 가령, 다음과 같이 매일 자정에 Appending되는  <code class="language-plaintext highlighter-rouge">fact_rolling_mau</code>  테이블을 생성한다고 가정해보겠습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">fact_rolling_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">WHERE</span>
      <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">30</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="nb">date</span>
      <span class="k">AND</span> <span class="nb">date</span> <span class="o">&lt;=</span> <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">fact_rolling_mau</span>
<span class="p">;</span>
</code></pre></div></div>

<p>즉 다음과 같이,  <code class="language-plaintext highlighter-rouge">fact_rolling_mau</code>  테이블은 중복 연산 문제를 벗어난 채 매일 새로운  <code class="language-plaintext highlighter-rouge">rolling_mau</code>  값을 업데이트하게 됩니다.</p>

<table>
  <thead>
    <tr>
      <th><strong>date</strong></th>
      <th><strong>rolling_mau</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2023-01-01</td>
      <td>100,000</td>
    </tr>
    <tr>
      <td>2023-01-01</td>
      <td>101,000</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
    </tr>
    <tr>
      <td>2023-01-01</td>
      <td>99,700</td>
    </tr>
    <tr>
      <td>2023-01-01</td>
      <td>110,000</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
    </tr>
  </tbody>
</table>

<p>이제 이미 생성된  <code class="language-plaintext highlighter-rouge">fact_rolling_mau</code>  테이블을 통해 Rolling Stickiness를 계산하는 쿼리문을 작성하면 다음과 같습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_dau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="nb">date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">),</span>
<span class="n">CTE_rolling_stickiness</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">dau</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="n">COALESCE</span><span class="p">(</span>
         <span class="n">TRY</span><span class="p">(</span><span class="n">dau</span><span class="p">.</span><span class="n">dau</span> <span class="o">/</span> <span class="n">fact_rolling_mau</span><span class="p">.</span><span class="n">rolling_mau</span><span class="p">),</span>
         <span class="mi">0</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_stickiness</span>
   <span class="k">FROM</span>
      <span class="n">CTE_dau</span>
   <span class="k">LEFT</span> <span class="k">JOIN</span>
      <span class="n">fact_rolling_mau</span>
      <span class="k">ON</span> <span class="n">dau</span><span class="p">.</span><span class="nb">date</span> <span class="o">=</span> <span class="n">rolling_mau</span><span class="p">.</span><span class="nb">date</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_rolling_stickiness</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="8-결론-query-cost-vs-data-freshness">8. 결론: Query Cost vs Data Freshness</h1>

<p>결국 Rolling MAU, Rolling Stickiness 지표에 대한 이야기를 다루다보니 자연스럽게 Data Mart의 필요성으로 귀결되는 것 같습니다. Data Mart는 단순히 쿼리 결과의 정확성이나 일관성만을 위해 필요한 것이 아니라, 이처럼 Query Cost vs Data Freshness 사이의 상충 관계를 극복하기 위해서도 필요하다고 할 수 있습니다. 특히, 서비스의 사용 규모에 따라 소스 테이블의 사이즈가 방대해질수록 Data Mart의 활용은 필수적일 것입니다. 부족한 글을 읽어주셔서 감사합니다!</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Korean" /><category term="Data Analysis" /><category term="SQL" /><category term="Data Warehouse" /><summary type="html"><![CDATA[대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, Stickiness 지표 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.]]></summary></entry><entry><title type="html">데이터 분석가의 파이썬 클라이언트 개발기 feat. pyinstaller</title><link href="http://localhost:4000/pyinstaller/" rel="alternate" type="text/html" title="데이터 분석가의 파이썬 클라이언트 개발기 feat. pyinstaller" /><published>2023-07-15T00:00:00+09:00</published><updated>2023-07-15T00:00:00+09:00</updated><id>http://localhost:4000/pyinstaller</id><content type="html" xml:base="http://localhost:4000/pyinstaller/"><![CDATA[<blockquote>
  <p>파이썬 파일을 실행하기 위해서는 파이썬의 High-level 언어를 Low-level로 변환해주는 <strong>Interpreter</strong>가 필요하고, 또 파이썬 파일 내에서 Load해야 하는 <strong>모듈</strong> 역시 함께 사전에 설치되어야 하는데요.  <code class="language-plaintext highlighter-rouge">pyinstaller</code>는 이러한 Interpreter와 모듈을 함께 동봉한 채로 파이썬 파일을 패키징하여 하나의 실행 파일로 만들어주는 역할을 하는 것이죠.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>데이터 분석가로 살아가며</li>
  <li>누워서 떡 먹듯 업무 자동화를 경험하실 수 있도록 하려면 어떻게 해야 할까요?</li>
  <li>파이썬 설치와 실행 방법을 모르더라도 <code class="language-plaintext highlighter-rouge">pyinstaller</code> 하나면 모든 것이 가능해요!</li>
  <li><code class="language-plaintext highlighter-rouge">.ipynb</code> 파일을 <code class="language-plaintext highlighter-rouge">.exe</code> 파일로 만드는 방법</li>
  <li>데이터 분석가가 갖추어야 하는 중요한 태도, “떠먹여 드리기”</li>
</ol>

<hr />

<h1 id="1-데이터-분석가로-살아가며">1. 데이터 분석가로 살아가며</h1>

<p><img src="/assets/2023-07-15-pyinstaller/milk.png" alt="" /></p>

<p>저는 블록체인 지갑 기업에서 데이터 분석가로 근무하고 있는 Joshua라고 합니다. 원래 이 업계에서 다른 포지션으로 근무하고 있었지만, 머신러닝과 빅데이터에 대한 천명(?)과 같은 깊은 흥미를 느끼게 되어 직장과 AI 대학원 생활을 2년 동안 병행해왔는데요. 정말 감사하게도 대학원을 잘 졸업하고, 지금 회사에서 데이터 분석가 포지션으로 근무하게 된지 1년이 넘어가고 있습니다.</p>

<p>훌륭하신, 그리고 인간적인 동료 분들과 함께 매일 치열하게 프로덕트에 대해 고민하고 있는데요. 특히, 한 분, 한 분과 이야기를 하거나 협업을 하다보면 제게 많은 자극을 알게 모르게 주시기도 하고, 스스로도 성장 욕구가 끊임 없이 일어나기도 한답니다. (입사 당시에도 그렇고, 1년이 지난 지금도 그 감정이 오롯이 유지되고 있어요.)</p>

<p><strong>머리로 기억하고 있는 선배 동료 분들의 어록 모음</strong></p>
<blockquote>
  <p>“조급한 마음으로 업무를 하게 되면 나중에 어떤 모습으로든 사고가 날 수 있다. 항상 차근차근 기초에 충실하는 게 중요해요.”
“3년 후, 5년 후의 미래를 종종 그려보며 커리어 방향을 점검해보는 게 되게 중요해요.”
“저는 나이가 들수록 말을 하거나 글을 쓰는 등 표현하는 게 부담스러워져요. 내가 알고 느끼는 것이 틀릴 수도 있으니까요.”</p>
</blockquote>

<p>이런 동료 분들과 함께, 그리고 성장 가능성이 무궁무진한 블록체인 도메인 속에서 매일 밤 이불을 덮으며 “<strong>나는 꼭 월드 클래스가 될 거야</strong>”라는 생각을 하며 지내고 있어요.</p>

<p>데이터 분석가의 메인 업무에 대한 이야기는 다음 아티클에서 또 전달해드리도록 하고, 오늘은 조금 희귀한(?) 스토리를 전달해드리고자 합니다.</p>

<p>가끔 몇몇 동료 분들이 제게 이런 말씀을 하실 때가 많아요.</p>
<blockquote>
  <p>“Joshua님은 데이터 분석가인데 왜 개발을 하고 계세요?”</p>
</blockquote>

<p>그럴 때마다 저는 이렇게 답변 드리곤 합니다.</p>
<blockquote>
  <p>“저.. 저는 단지 데이터 추출과 가공 때문에 코드를 짜고 있는 건데요? 개발 잘 몰라요^^;;;;;”</p>
</blockquote>

<p>물론 시간이 흐르며, 프론트엔드와 백엔드 개발도 데이터 크롤링과 가공의 프로세스도 지니고 있어서 상당히 유사한 작업이 많다는 사실을 이해하게 되어 지금은 살짝 인정을 하고 있어요. (그럼에도 불구하고 데이터 분석은 결이 좀 다르다구요!😆)</p>

<p>아무튼, 이번 아티클에서 제가 전달해드리려는 내용은 “<strong>데이터 분석가로서 반드시 알 필요는 없는, 그렇지만 알아두면 재미있고 쓸모 있는 클라이언트 개발 후기</strong>”입니다!</p>

<p>곰곰이 생각해보면, 현 회사에서 데이터 분석가로서 Day-to-day Responsibilities가 크게  <strong>메인 업무</strong>와  <strong>서브 업무</strong>  두 가지로 카테고리화되는 것 같아요.</p>

<p><strong>| 메인 업무</strong></p>
<ul>
  <li>핵심 지표 모니터링을 위한 대시보드 생성 및 관리</li>
  <li>Ad-hoc 데이터 분석</li>
  <li>A/B 테스트 결과 데이터 분석</li>
  <li>이벤트 로그 스키마 정의</li>
</ul>

<p><strong>| 서브 업무</strong></p>
<ul>
  <li>API 크롤링을 통한 시장 데이터 수집 후 분석</li>
  <li>블록체인 온체인 데이터 수집 후 분석</li>
  <li>블록체인 메인넷 리서치</li>
  <li>기타 등등</li>
</ul>

<p>특히  <strong>서브 업무</strong>는 데이터 분석가로서 Must-have 업무가 아닐 수 있지만, 저는 개인적으로 서브 업무를 함으로써 회사의 사업 전략과 프로덕트에 대한 Domain Knowledge를 키워갈 수 있는 매우 값진 경험이라고 생각하는데요.</p>

<p>최근에는 사내 재무팀 분들을 위해 내부용 파이썬 업무 자동화 클라이언트를 개발하여 배포하는 과정을 겪으며, 재무팀 동료 분들이 어떤 고민을 하시는지, 그리고 어떤 목표와 역할을 위해 최선을 다하고 계시는지 진득하게 이해할 수 있었어요.</p>

<h1 id="2-누워서-떡-먹듯-업무-자동화를-경험하실-수-있도록-하려면-어떻게-해야-할까요">2. 누워서 떡 먹듯 업무 자동화를 경험하실 수 있도록 하려면 어떻게 해야 할까요?</h1>

<p><img src="/assets/2023-07-15-pyinstaller/i-dont-know-why.png" alt="" /></p>

<p>회사 내부용 목적에 대해 공개할 수는 없지만, 재무팀 업무시 매뉴얼하게 데이터를 확인하는 것이 거의 불가능한 업무 포인트가 있었는데요. 그 부분을 API를 통해 크롤링할 수 있도록 파이썬 모듈을 만들 수 있겠다는 생각이 들었어요.</p>

<p>파이썬 크롤러 자체를 만드는 것은 어려운 일이 아니었지만, 파이썬 실행 환경에 대해 생각해보니 고민이 생겼어요.</p>
<blockquote>
  <p>“데이터 분석가와 백엔드 개발자에게는 파이썬 클라이언트를 설치하고, 노트북 상에서 코드를 실행하거나 명령 프롬프트 상에서 파이썬을 실행하는 게 너무나도 익숙한 일인데, 이게 과연 재무팀 분들께도 익숙한 일일까?”</p>
</blockquote>

<p>물론, 업무 자동화로 인한 시간 절감 효과가 파이썬 실행 환경 적응 시간보다 훨씬 크다면 큰 문제가 되지는 않겠지만, 그럼에도 불구하고  <code class="language-plaintext highlighter-rouge">CX(Colleague Experience?)</code>를 고려한 업무 자동화 환경을 제공해드리고 싶었거든요.</p>

<h1 id="3-파이썬-설치와-실행-방법을-모르더라도-pyinstaller-하나면-모든-것이-가능해요">3. 파이썬 설치와 실행 방법을 모르더라도 <code class="language-plaintext highlighter-rouge">pyinstaller</code> 하나면 모든 것이 가능해요!</h1>

<p>개발자 친구에게 이 고민을 털어놓기도 하고, 개인적으로 구글링을 하면서 알게 된 것은 바로  <strong>Python Executable File</strong>이라는 개념이었어요. 즉, 파이썬 환경을 구축하지 않고, 혹은 명령 프롬프트 같은 화성 같은 환경을 경험하지 않고도, <code class="language-plaintext highlighter-rouge">.exe</code> 확장자의 파일 자체를 클릭하는 것만으로 업무 자동화가 진행되는 실행 파일을 만드는 방법인 것이죠.</p>

<p><img src="/assets/2023-07-15-pyinstaller/infinite-challenge.jpeg" alt="" /></p>

<p>정말 감사하게도, 파이썬에는  <code class="language-plaintext highlighter-rouge">pyinstaller</code>라는 모듈이 있어요.</p>

<p><a href="https://pyinstaller.org/en/stable/">PyInstaller Manual</a>에 따르면,  <code class="language-plaintext highlighter-rouge">pyinstaller</code>는 Python 애플리케이션 및 실행에 필요한 모든 환경을 하나의 패키지로 묶어줌으로써, 사용자가 Python Interpreter나 모듈을 설치하지 않고 패키지 자체를 실행할 수 있도록 해주는 유틸리티입니다.</p>

<p>파이썬 파일을 실행하기 위해서는 파이썬의 High-level 언어를 Low-level로 변환해주는 <strong>Interpreter</strong>가 필요하고, 또 파이썬 파일 내에서 Load해야 하는 <strong>모듈</strong> 역시 함께 사전에 설치되어야 하는데요.  <code class="language-plaintext highlighter-rouge">pyinstaller</code>는 이러한 Interpreter와 모듈을 함께 동봉한 채로 파이썬 파일을 패키징하여 하나의 실행 파일로 만들어주는 역할을 하는 것이죠.</p>

<p><img src="https://miro.medium.com/v2/resize:fit:1400/0*uKgfsMJQvUG5okP2.jpg" alt="" /></p>

<h1 id="4-ipynb-파일을-exe-파일로-만드는-방법">4. <code class="language-plaintext highlighter-rouge">.ipynb</code> 파일을 <code class="language-plaintext highlighter-rouge">.exe</code> 파일로 만드는 방법</h1>

<p>우선 업무 자동화에 필요한 파이썬 코드를 Jupyter Notebook으로 완성을 합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step01.webp" alt="" /></p>

<p>사용자가 입력한 정수의 제곱값을 리턴해주는 귀여운 코드를 적어봤어요.</p>

<p><code class="language-plaintext highlighter-rouge">.ipynb</code>을 <code class="language-plaintext highlighter-rouge">.py</code> 형식의 파일로 변환하여 다운로드합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step02.webp" alt="" /></p>

<p>원하는 경로에 .py 파일을 이동해줍니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step03.webp" alt="" /></p>

<p>이제  <code class="language-plaintext highlighter-rouge">pyinstaller</code>  모듈을 설치하기 위해 명령 프롬프트를 실행합니다. (Anaconda Powershell Prompt나 Anaconda Prompt가 아닌, Windows 자체의 Command Prompt를 의미해요.)</p>

<p><img src="/assets/2023-07-15-pyinstaller/step04.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">pyinstaller</code>  모듈 설치를 위해  <code class="language-plaintext highlighter-rouge">pip install pyinstaller</code>  명령어를 입력해줍니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step05.webp" alt="" /></p>

<p>이제 명령 환경을 <code class="language-plaintext highlighter-rouge">.py</code> 파일이 보관되어 있는 디렉토리로 변경해줍니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step06.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">pyinstaller --onefile joshua_pyinstaller_practice.py</code>  명령어를 통해 패키징을 시작합니다. (onefile은 하나의 파일로 패키징해줘야 함을 의미해요!)</p>

<p><img src="/assets/2023-07-15-pyinstaller/step07.webp" alt="" /></p>

<p>그런데 가끔(아니 매우 자주), 안타깝게도 프롬프트가  <code class="language-plaintext highlighter-rouge">pyinstaller</code>라는 명령어를 제대로 이해하지 못하는 경우가 발생해요. 이 경우, 대부분 시스템 환경 변수를 프롬프트가 모르기 때문에 발생합니다.</p>

<p>Windows Task Bar의 검색창에서 <code class="language-plaintext highlighter-rouge">Environment Variables</code>를 검색하여 시스템 환경 변수 관리 페이지를 실행합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step08.webp" alt="" /></p>

<p>Advanced 탭 내의 Environment Variables 버튼을 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step09.webp" alt="" /></p>

<p>User variables의 New를 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step10.webp" alt="" /></p>

<p>잠시 홀드하고, 파이썬이 설치되어 있는 경로를 확인해야 해요. 즉, 파이썬의 Scripts 폴더를 찾아야 하는데요. 보통  <code class="language-plaintext highlighter-rouge">Users\AppData\Local\Programs\Python\Python311</code>  경로에 Scripts 폴더가 있어요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step11.webp" alt="" /></p>

<p>경로를 PATH 이름으로 환경 변수 리스트에 추가해주세요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step12.webp" alt="" /></p>

<p><img src="/assets/2023-07-15-pyinstaller/step13.webp" alt="" /></p>

<p>이런 환경 설정이 너무 어렵다면, 사실  <a href="https://www.python.org/downloads/">Python3 Setup 파일</a>을 다시 다운로드하여 Modify하는 방법이 있어요. 그럼 자동으로 환경 변수 세팅을 완료해주거든요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step14.webp" alt="" /></p>

<p>Modify를 클릭하세요.</p>

<p>pip 체크 여부를 반드시 확인한 후 Next 버튼을 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step15.webp" alt="" /></p>

<p>pip을 꼭 체크해주세요.</p>

<p>Add Python to environment variables를 꼭 체크 후 Install을 진행해주세요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step16.webp" alt="" /></p>

<p>그런 후, Add Python to environment variables를 반드시 체크해주세요.</p>

<p>자 이제 다시,  <code class="language-plaintext highlighter-rouge">pyinstaller</code>  패키징을 시작합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step17.webp" alt="" /></p>

<p>드디어 성공했군요! 👏</p>

<p><img src="/assets/2023-07-15-pyinstaller/step18.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">.py</code> 파일이 보관되어 있는 경로를 찾아가보면, 새로운 폴더와 파일들이 생성된 것을 확인할 수 있습니다. 이 중, 우리가 배포해야 할 실행 파일은 <code class="language-plaintext highlighter-rouge">dist</code> 폴더에 있으니, <code class="language-plaintext highlighter-rouge">dist</code> 폴더를 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step19.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">.exe</code> 파일이 생성이 된 것을 확인할 수 있습니다. 한 번 실행해볼까요?</p>

<p><img src="/assets/2023-07-15-pyinstaller/step20.webp" alt="" /></p>

<p>잘 실행되네요!😃</p>

<p><img src="/assets/2023-07-15-pyinstaller/step21.webp" alt="" /></p>

<p><img src="/assets/2023-07-15-pyinstaller/congratulations.jpeg" alt="" /></p>

<p>이제 마치 클라이언트 형태로 <code class="language-plaintext highlighter-rouge">.exe</code> 파일만 배포하면, 파이썬 환경 설치에 대한 부담 없이도 누구나 편리하게 원클릭 업무 자동화를 누릴 수 있답니다!</p>

<h1 id="5--데이터-분석가가-갖추어야-하는-중요한-태도-떠먹여-드리기">5.  데이터 분석가가 갖추어야 하는 중요한 태도, “떠먹여 드리기”</h1>

<p><img src="/assets/2023-07-15-pyinstaller/feeding.png" alt="" /></p>

<p>제가 회사에서 동료 분들께 반 농담, 반 진담으로 말씀 드리는 슬로건이 있는데요. 바로 “<code class="language-plaintext highlighter-rouge">떠먹여 드릴게요</code>”라는 표현입니다.</p>

<p>데이터는 늘 어렵고, 핵심을 꿰뚫이는 더욱 어려운 것 같아요. 데이터 분석가에게도 늘 어려운 일인데, 다른 동료 분들께는 얼마나 더 어려울까요.</p>

<p><strong>데이터 드리븐 문화</strong>를 위해 함께 데이터를 F/UP해야 하는 동료 분들의 부담을 조금이라도 줄여드리는 Soft한 역량이 데이터 분석가에게 요구되기 때문에, 떠먹여 드리기 위한 노력을 지속적으로 실천하는 것이 정말 중요하다고 생각하는데요. 가만히 누워서 입만 벌리고 계셔도 떠먹여 드릴 수 있는, 그런 데이터 분석가가 되는 것이 제게는 Midterm 목표가 된 것 같습니다.</p>

<p>이런 의미에서 이번 파이썬 클라이언트 개발기는 단순한 개발기 이상으로, 데이터를 업무에 빠르게 반영하여 Pain Point를 손쉽게 해결해드리고자 노력해본 저의 “<code class="language-plaintext highlighter-rouge">떠먹여 드릴게요</code>” 프로젝트 중 하나였습니다.</p>

<p>떠먹여 드리기도 하고, 저 또한 귀중한 서브 지식들을 함양할 수 있었던 것 같아서 참 뿌듯하기도 했어요. 앞으로 또 어떤  <strong>서브 업무</strong>들이 저를 기다리고 있을까요? 먼 산을 보며 글을 마칩니다. 읽어주셔서 감사합니다.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="Korean" /><category term="Python" /><summary type="html"><![CDATA[파이썬 파일을 실행하기 위해서는 파이썬의 High-level 언어를 Low-level로 변환해주는 Interpreter가 필요하고, 또 파이썬 파일 내에서 Load해야 하는 모듈 역시 함께 사전에 설치되어야 하는데요. pyinstaller는 이러한 Interpreter와 모듈을 함께 동봉한 채로 파이썬 파일을 패키징하여 하나의 실행 파일로 만들어주는 역할을 하는 것이죠.]]></summary></entry><entry><title type="html">The Last Click Attribution Model Using BigQuery</title><link href="http://localhost:4000/last-click-attribution/" rel="alternate" type="text/html" title="The Last Click Attribution Model Using BigQuery" /><published>2023-07-09T00:00:00+09:00</published><updated>2023-07-09T00:00:00+09:00</updated><id>http://localhost:4000/last-click-attribution</id><content type="html" xml:base="http://localhost:4000/last-click-attribution/"><![CDATA[<blockquote>
  <p>In this article, you will explore how to easily aggregate the Last Click Attribution Model using BigQuery.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Introduction</li>
  <li>Enable the export of Google Analytics 4 data to BigQuery.</li>
  <li>Flatten Table</li>
  <li>Standardize the session UTM values for all events within each session.</li>
  <li>Replace NULL session UTM values with the value “<code class="language-plaintext highlighter-rouge">(direct)</code>”.</li>
  <li>Extract only the necessary columns for calculating attribution.</li>
  <li>Assign journey numbers to each user’s purchase event.</li>
  <li>Assign Priorities to indicate the order of events for applying the Last Click Attribution Model.</li>
  <li>The <code class="language-plaintext highlighter-rouge">session_campaign</code> with the highest priority will be attributed to 100% of the revenue.</li>
  <li>Now, let’s perform the Last Click Attribution aggregation for each channel.</li>
  <li>Let’s create a dashboard using Redash.</li>
</ol>

<hr />

<h1 id="1--introduction">1.  Introduction</h1>

<p>When you go to the Attribution Settings of Google Analytics 4, you can easily choose the Attribution Model that you love.</p>

<p><img src="/assets/2023-07-09-last-click-attribution/attribution-settings.webp" alt="" /></p>
<blockquote>
  <p>Google Analytics 4 &gt; Settings &gt; Attribution Settings</p>
</blockquote>

<p><strong>Data Driven</strong></p>
<ul>
  <li>It does not explicitly specify what kind of model is being used, and I think it’s a little risky when it comes to making a marketing decision.</li>
</ul>

<p><strong>Last Click</strong></p>
<ul>
  <li>The channel that immediately precedes the purchase is considered to have a 100% contribution.</li>
</ul>

<p><strong>First Click</strong></p>
<ul>
  <li>The channel that initially brings in the user is considered to have a 100% contribution.</li>
</ul>

<p><strong>Linear</strong></p>
<ul>
  <li>All channels, from the user’s initial acquisition channel to the channel immediately preceding the purchase, are considered to have an equal contribution of 1/N, where N represents the total number of channels.</li>
</ul>

<p><img src="/assets/2023-07-09-last-click-attribution/user-acquisition.webp" alt="" /></p>
<blockquote>
  <p>Google Analytics 4 &gt; Acquisition &gt; User Acquisition</p>
</blockquote>

<p>However, due to the post hoc nature of Attribution Settings in Google Analytics 4, there is a limitation where if the marketing strategy changes, you would need to aggregate the data again from the beginning.</p>

<p>Therefore, considering alternatives outside of Google Analytics 4, I have started contemplating using BigQuery to apply Attribution Models more flexibly and regularly monitor them.</p>

<p>In this article, you will explore how to easily aggregate the Last Click Attribution Model using BigQuery.</p>

<h1 id="2-enable-the-export-of-google-analytics-4-data-to-bigquery">2. Enable the export of Google Analytics 4 data to BigQuery.</h1>

<p><img src="/assets/2023-07-09-last-click-attribution/bigquery-links.webp" alt="" /></p>
<blockquote>
  <p>Google Analytics 4 &gt; Settings &gt; BigQuery Links</p>
</blockquote>

<p>For detailed info and how to, refer to  <a href="https://support.google.com/analytics/answer/9358801?hl=en">here</a>.</p>

<h1 id="3-flatten-table">3. Flatten Table</h1>

<p>Unlike Bigtable, a column-wide store NoSQL database, BigQuery is a data warehouse. However, BigQuery still offers a lot of nested columns to handle future additions or deletions of schema, events, parameters, and more. For analytical purposes, it’s necessary to flatten tables composed of these columns to simplify queries.</p>

<p><img src="/assets/2023-07-09-last-click-attribution/flatten-table.webp" alt="" /></p>
<blockquote>
  <p>BigQuery table has nested columns that look like this.</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_flattened</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>    
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Datetime]  </span>
        <span class="c1">-- ==========================================================  </span>
        <span class="n">event_date</span><span class="p">,</span> <span class="c1">-- Event Date  </span>
        <span class="n">event_timestamp</span><span class="p">,</span> <span class="c1">-- Event Timestamp  </span>
        <span class="n">user_first_touch_timestamp</span><span class="p">,</span> <span class="c1">-- User's First Visit Timestamp  </span>

        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [User &amp; Session ID]  </span>
        <span class="c1">-- ==========================================================    </span>
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="c1">-- User ID  </span>
        <span class="n">ga_session_id</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">ga_session_id</span><span class="p">,</span> <span class="c1">-- Session ID  </span>
        <span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">ga_session_number</span><span class="p">,</span> <span class="c1">-- User's Session Index (starting from 1)  </span>

        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Event Name]  </span>
        <span class="c1">-- ==========================================================    </span>
        <span class="n">event_name</span><span class="p">,</span>  

        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Geography &amp; Device]  </span>
        <span class="c1">-- ==========================================================    </span>
        <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span> <span class="c1">-- Country  </span>
        <span class="n">device</span><span class="p">.</span><span class="n">category</span> <span class="k">AS</span> <span class="n">device_category</span><span class="p">,</span> <span class="c1">-- Device Category  </span>
        <span class="n">device</span><span class="p">.</span><span class="n">operating_system</span> <span class="k">AS</span> <span class="n">device_os</span><span class="p">,</span> <span class="c1">-- Device OS  </span>
  
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Acquisition]  </span>
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- Landing Info  </span>
        <span class="n">entrances</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">entrances</span><span class="p">,</span> <span class="c1">-- If it's the first landing page of this session (page_view Event only)  </span>
        <span class="k">REPLACE</span><span class="p">(</span><span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="k">LOWER</span><span class="p">(</span><span class="n">page_referrer</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">),</span> <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span><span class="p">),</span> <span class="s1">'https://'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span><span class="p">,</span>  
        <span class="c1">-- Session UTM  </span>
        <span class="n">campaign</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">session_campaign</span><span class="p">,</span> <span class="c1">-- UTM Campaign (Session-based)  </span>
        <span class="n">medium</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">session_medium</span><span class="p">,</span> <span class="c1">-- UTM Medium (Session-based)  </span>
        <span class="k">source</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">session_source</span><span class="p">,</span> <span class="c1">-- UTM Source (Session-based)  </span>
        <span class="n">term</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">session_term</span><span class="p">,</span> <span class="c1">-- UTM Term (Session-based)  </span>
        <span class="c1">-- First UTM  </span>
        <span class="n">traffic_source</span><span class="p">.</span><span class="n">name</span> <span class="k">AS</span> <span class="n">first_campaign</span><span class="p">,</span> <span class="c1">-- UTM Campaign (First-based)  </span>
        <span class="n">traffic_source</span><span class="p">.</span><span class="n">medium</span> <span class="k">AS</span> <span class="n">first_medium</span><span class="p">,</span> <span class="c1">-- UTM Medium (First-based)  </span>
        <span class="n">traffic_source</span><span class="p">.</span><span class="k">source</span> <span class="k">AS</span> <span class="n">first_source</span><span class="p">,</span> <span class="c1">-- UTM Source (First-based)  </span>
        <span class="c1">-- Manual UTM  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">manual_campaign_id</span> <span class="k">AS</span> <span class="n">manual_campaign_id</span><span class="p">,</span> <span class="c1">-- UTM Campaign ID (Manual-based)  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">manual_campaign_name</span> <span class="k">AS</span> <span class="n">manual_campaign</span><span class="p">,</span> <span class="c1">-- UTM Campaign (Manual-based)  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">manual_medium</span> <span class="k">AS</span> <span class="n">manual_medium</span><span class="p">,</span> <span class="c1">-- UTM Medium (Manual-based)  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">manual_source</span> <span class="k">AS</span> <span class="n">manual_source</span><span class="p">,</span> <span class="c1">-- UTM Source (Manual-based)  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">manual_term</span> <span class="k">AS</span> <span class="n">manual_term</span><span class="p">,</span> <span class="c1">-- UTM Term (Manual-based)  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">manual_content</span> <span class="k">AS</span> <span class="n">manual_content</span><span class="p">,</span> <span class="c1">-- UTM Content (Manual-based)  </span>
        <span class="c1">-- Ads Identifiers  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">gclid</span> <span class="k">AS</span> <span class="n">manual_gclid</span><span class="p">,</span> <span class="c1">-- Google Click Identifier  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">dclid</span> <span class="k">AS</span> <span class="n">manual_dclid</span><span class="p">,</span> <span class="c1">-- Google Marketing Platform Identifier  </span>
        <span class="n">collected_traffic_source</span><span class="p">.</span><span class="n">srsltid</span> <span class="k">AS</span> <span class="n">manual_srsltid</span><span class="p">,</span> <span class="c1">-- Google Merchant Center Identifier  </span>
  
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Page]  </span>
        <span class="c1">-- ==========================================================  </span>
        <span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="k">LOWER</span><span class="p">(</span><span class="n">device</span><span class="p">.</span><span class="n">web_info</span><span class="p">.</span><span class="n">hostname</span><span class="p">),</span> <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> <span class="k">AS</span> <span class="n">hostname</span><span class="p">,</span> <span class="c1">-- Domain or Subdomain  </span>
        <span class="k">REPLACE</span><span class="p">(</span><span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="k">LOWER</span><span class="p">(</span><span class="n">page_location</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">),</span> <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span><span class="p">),</span> <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span><span class="p">),</span> <span class="s1">'https://'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span> <span class="c1">-- Current Page URL  </span>
  
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Engagement]  </span>
        <span class="c1">-- ==========================================================  </span>
        <span class="n">session_engaged</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">session_engaged</span><span class="p">,</span> <span class="c1">-- If the session is engaged (session_start Event only)  </span>
        <span class="n">engagement_time_msec</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">engagement_time_msec</span><span class="p">,</span> <span class="c1">-- session engagement time (msec)  </span>
  
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Click Event]  </span>
        <span class="c1">-- ==========================================================  </span>
        <span class="n">outbound</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">outbound</span><span class="p">,</span> <span class="c1">-- If the click Event is outbound from the current domain  </span>
        <span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="k">LOWER</span><span class="p">(</span><span class="n">link_domain</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">),</span> <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> <span class="k">AS</span> <span class="n">link_domain</span><span class="p">,</span> <span class="c1">-- Domain from the click Event  </span>
        <span class="k">REPLACE</span><span class="p">(</span><span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="k">LOWER</span><span class="p">(</span><span class="n">link_url</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">),</span> <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span><span class="p">),</span> <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span><span class="p">),</span> <span class="s1">'https://'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> <span class="k">AS</span> <span class="n">link_url</span><span class="p">,</span> <span class="c1">-- Page URL from the click Event  </span>
  
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Scroll Event]  </span>
        <span class="c1">-- ==========================================================  </span>
        <span class="n">percent_scrolled</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">percent_scrolled</span><span class="p">,</span> <span class="c1">-- Scroll Percentage (default = 90 only)  </span>
  
        <span class="c1">-- ==========================================================  </span>
        <span class="c1">-- [Ecommerce Event]  </span>
        <span class="c1">-- ==========================================================    </span>
        <span class="c1">-- View Item ~  </span>
        <span class="n">ecomm_pagetype</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">ecomm_pagetype</span><span class="p">,</span> <span class="c1">-- Type of the Page (product, cart) (view_item, add_to_cart, begin_checkout Event)   </span>
        <span class="n">ecomm_prodid</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">ecomm_prodid</span><span class="p">,</span> <span class="c1">-- Product ID (view_item, begin_checkout, add_to_cart Event)  </span>
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">total_item_quantity</span> <span class="k">AS</span> <span class="n">ecommerce_total_item_quantity</span><span class="p">,</span> <span class="c1">-- Amount of Total Items purchased (view_item, add_to_cart, begin_checkout, purchase Event)   </span>
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">unique_items</span> <span class="k">AS</span> <span class="n">ecommerce_unique_items</span><span class="p">,</span> <span class="c1">-- Amount of Unique Items purchased (view_item, add_to_cart, begin_checkout, purchase Event)  </span>
        <span class="c1">-- Add to Cart ~  </span>
        <span class="n">ecomm_totalvalue</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">ecomm_totalvalue</span><span class="p">,</span> <span class="c1">-- Total Value of Items (add_to_cart, begin_checkout Event)  </span>
        <span class="n">currency</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">currency</span><span class="p">,</span> <span class="c1">-- Currency (add_to_cart, begin_checkout, add_payment_info, purchase Event)    </span>
        <span class="c1">-- Add Payment Info ~    </span>
        <span class="n">total</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">total</span><span class="p">,</span> <span class="c1">-- Total Value (add_payment_info Event only)  </span>
        <span class="c1">-- Purchase ~  </span>
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">transaction_id</span> <span class="k">AS</span> <span class="n">ecommerce_transaction_id</span><span class="p">,</span> <span class="c1">-- Transaction ID (purchase Event only)  </span>
        <span class="n">event_value_in_usd</span><span class="p">,</span> <span class="c1">-- Total value of purchase (purchase Event only)  </span>
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">shipping_value_in_usd</span> <span class="k">AS</span> <span class="n">ecommerce_shipping_value_in_usd</span><span class="p">,</span> <span class="c1">-- shipping fee (purchase Event only)  </span>
        <span class="c1">-- Lifetime Value  </span>
        <span class="n">user_ltv</span><span class="p">.</span><span class="n">revenue</span> <span class="k">AS</span> <span class="n">user_ltv_revenue</span><span class="p">,</span> <span class="c1">-- User's Lifetime Value  </span>
        <span class="n">user_ltv</span><span class="p">.</span><span class="n">currency</span> <span class="k">AS</span> <span class="n">user_ltv_currency</span><span class="p">,</span> <span class="c1">-- User's Lifetime Value Currency  </span>
  
    <span class="k">FROM</span> <span class="nv">`iotrust-data.analytics_123456789.events_*`</span> <span class="n">MAIN</span>  
  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span> <span class="k">ON</span> <span class="n">ga_session_id</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_id'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span> <span class="k">ON</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">session_engaged</span> <span class="k">ON</span> <span class="n">session_engaged</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'session_engaged'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">engagement_time_msec</span> <span class="k">ON</span> <span class="n">engagement_time_msec</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'engagement_time_msec'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">percent_scrolled</span> <span class="k">ON</span> <span class="n">percent_scrolled</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'percent_scrolled'</span>  
  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span> <span class="k">ON</span> <span class="n">page_location</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span>  
  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">entrances</span> <span class="k">ON</span> <span class="n">entrances</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'entrances'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span> <span class="k">ON</span> <span class="n">page_referrer</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'page_referrer'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">campaign</span> <span class="k">ON</span> <span class="n">campaign</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'campaign'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">medium</span> <span class="k">ON</span> <span class="n">medium</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'medium'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="k">source</span> <span class="k">ON</span> <span class="k">source</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'source'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">term</span> <span class="k">ON</span> <span class="n">term</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'term'</span>  
      
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">outbound</span> <span class="k">ON</span> <span class="n">outbound</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'outbound'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">link_domain</span> <span class="k">ON</span> <span class="n">link_domain</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'link_domain'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">link_url</span> <span class="k">ON</span> <span class="n">link_url</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'link_url'</span>  
      
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">transaction_id</span> <span class="k">ON</span> <span class="n">transaction_id</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'transaction_id'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ecomm_prodid</span> <span class="k">ON</span> <span class="n">ecomm_prodid</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ecomm_prodid'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ecomm_pagetype</span> <span class="k">ON</span> <span class="n">ecomm_pagetype</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ecomm_pagetype'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">currency</span> <span class="k">ON</span> <span class="n">currency</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'currency'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ecomm_totalvalue</span> <span class="k">ON</span> <span class="n">ecomm_totalvalue</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ecomm_totalvalue'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">total</span> <span class="k">ON</span> <span class="n">total</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'total'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value</span> <span class="k">ON</span> <span class="n">value</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'value'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">shipping</span> <span class="k">ON</span> <span class="n">shipping</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'shipping'</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">tax</span> <span class="k">ON</span> <span class="n">tax</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'tax'</span>  
  
    <span class="k">WHERE</span>  
        <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> 
            <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'yyyy-mm-dd'</span><span class="p">)</span>
            <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'yyyy-mm-dd'</span><span class="p">)</span>  
        <span class="k">AND</span> <span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
        <span class="k">AND</span> <span class="n">ga_session_id</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
        <span class="k">AND</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="4-standardize-the-session-utm-values-for-all-events-within-each-session">4. Standardize the session UTM values for all events within each session.</h1>

<p>For some reason that is not entirely clear, due to the inaccuracies in GA4, there are cases where the UTM values that contributed to the acquisition of specific sessions are occasionally lost.</p>

<table>
  <thead>
    <tr>
      <th><strong>User ID</strong></th>
      <th><strong>Session ID</strong></th>
      <th><strong>Event Name</strong></th>
      <th><strong>Session Campaign</strong></th>
      <th><strong>Session Medium</strong></th>
      <th><strong>Session Source</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Joshua</td>
      <td>12345</td>
      <td><code class="language-plaintext highlighter-rouge">session_start</code></td>
      <td>(n/a)</td>
      <td>(n/a)</td>
      <td>(n/a)</td>
    </tr>
    <tr>
      <td>Joshua</td>
      <td>12345</td>
      <td><code class="language-plaintext highlighter-rouge">page_view</code></td>
      <td>summer-event</td>
      <td>owned-media</td>
      <td>facebook</td>
    </tr>
    <tr>
      <td>Joshua</td>
      <td>12345</td>
      <td><code class="language-plaintext highlighter-rouge">user_engagement</code></td>
      <td>summer-event</td>
      <td>owned-media</td>
      <td>facebook</td>
    </tr>
    <tr>
      <td>Joshua</td>
      <td>12345</td>
      <td><code class="language-plaintext highlighter-rouge">scroll</code></td>
      <td>(n/a)</td>
      <td>(n/a)</td>
      <td>(n/a)</td>
    </tr>
    <tr>
      <td>Joshua</td>
      <td>12345</td>
      <td><code class="language-plaintext highlighter-rouge">begin_checkout</code></td>
      <td>summer-event</td>
      <td>owned-media</td>
      <td>facebook</td>
    </tr>
    <tr>
      <td>Joshua</td>
      <td>12345</td>
      <td><code class="language-plaintext highlighter-rouge">add_payment_info</code></td>
      <td>summer-event</td>
      <td>owned-media</td>
      <td>facebook</td>
    </tr>
  </tbody>
</table>

<p>I have encountered several weird cases like this.</p>

<p>Therefore, in such cases, if there are session UTM values within the same session, the UTM values from the first event that occurred should be propagated to all the other events within the same session, ensuring they have the same values.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_session_campaign_sequence</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">ga_session_id</span><span class="p">,</span>
        <span class="n">session_campaign</span><span class="p">,</span>
        <span class="n">session_medium</span><span class="p">,</span>
        <span class="n">session_source</span><span class="p">,</span>
        <span class="n">session_term</span><span class="p">,</span>
        <span class="k">CASE</span>
            <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span>
                <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span>
                    <span class="k">PARTITION</span> <span class="k">BY</span>
                        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">ga_session_id</span><span class="p">,</span>
                        <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span>
                    <span class="k">ORDER</span> <span class="k">BY</span>
                        <span class="n">event_timestamp</span>
                <span class="p">)</span>
            <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span>
                <span class="mi">1</span>
        <span class="k">END</span> <span class="k">AS</span> <span class="n">row_num</span>
    <span class="k">FROM</span>
        <span class="n">CTE_flattened</span>
<span class="p">),</span>

<span class="n">CTE_utm_spread</span> <span class="k">AS</span> <span class="p">(</span> <span class="c1">-- spread session utm parameters throughout each user &amp; session  </span>
    <span class="k">SELECT</span>  
        <span class="n">MAIN</span><span class="p">.</span><span class="o">*</span> <span class="k">EXCEPT</span> <span class="p">(</span><span class="n">session_campaign</span><span class="p">,</span> <span class="n">session_medium</span><span class="p">,</span> <span class="n">session_source</span><span class="p">,</span> <span class="n">session_term</span><span class="p">),</span>  
        <span class="n">SUB</span><span class="p">.</span><span class="n">real_session_campaign</span> <span class="k">AS</span> <span class="n">session_campaign</span><span class="p">,</span>  
        <span class="n">SUB</span><span class="p">.</span><span class="n">real_session_medium</span> <span class="k">AS</span> <span class="n">session_medium</span><span class="p">,</span>  
        <span class="n">SUB</span><span class="p">.</span><span class="n">real_session_source</span> <span class="k">AS</span> <span class="n">session_source</span><span class="p">,</span>  
        <span class="n">SUB</span><span class="p">.</span><span class="n">real_session_term</span> <span class="k">AS</span> <span class="n">session_term</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_flattened</span> <span class="n">MAIN</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="p">(</span>  
        <span class="k">SELECT</span>  
            <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">ga_session_id</span><span class="p">,</span>  
            <span class="k">MAX</span><span class="p">(</span><span class="n">session_campaign</span><span class="p">)</span> <span class="k">AS</span> <span class="n">real_session_campaign</span><span class="p">,</span>  
            <span class="k">MAX</span><span class="p">(</span><span class="n">session_medium</span><span class="p">)</span> <span class="k">AS</span> <span class="n">real_session_medium</span><span class="p">,</span>  
            <span class="k">MAX</span><span class="p">(</span><span class="n">session_source</span><span class="p">)</span> <span class="k">AS</span> <span class="n">real_session_source</span><span class="p">,</span>  
            <span class="k">MAX</span><span class="p">(</span><span class="n">session_term</span><span class="p">)</span> <span class="k">AS</span> <span class="n">real_session_term</span>  
        <span class="k">FROM</span>
            <span class="n">CTE_session_campaign_sequence</span>
        <span class="k">WHERE</span>
            <span class="n">row_num</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">GROUP</span> <span class="k">BY</span>
            <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">ga_session_id</span>
    <span class="p">)</span> <span class="n">SUB</span>
    <span class="k">ON</span> 
        <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> 
        <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">ga_session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">ga_session_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">ga_session_id</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">event_timestamp</span>
<span class="p">),</span>
</code></pre></div></div>

<h1 id="5--replace-null-session-utm-values-with-the-value-direct">5.  Replace NULL session UTM values with the value “<code class="language-plaintext highlighter-rouge">(direct)</code>”.</h1>

<p>Personally, I tend to consider the “<code class="language-plaintext highlighter-rouge">(direct)</code>” values more as “unknown” rather than the direct traffic. Nevertheless, to ensure that calculations are not affected by NULL values during the aggregation process, here I proceeded with replacing all NULL values with “<code class="language-plaintext highlighter-rouge">(direct)</code>”.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_fill_na</span> <span class="k">AS</span> <span class="p">(</span> <span class="c1">-- Replace NULL session_utms with (direct)</span>
    <span class="k">SELECT</span>  
        <span class="o">*</span> <span class="k">EXCEPT</span> <span class="p">(</span><span class="n">session_campaign</span><span class="p">,</span> <span class="n">session_medium</span><span class="p">,</span> <span class="n">session_source</span><span class="p">,</span> <span class="n">session_term</span><span class="p">),</span>  
        <span class="n">IFNULL</span><span class="p">(</span><span class="n">session_campaign</span><span class="p">,</span> <span class="s1">'(direct)'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">session_campaign</span><span class="p">,</span>  
        <span class="n">IFNULL</span><span class="p">(</span><span class="n">session_medium</span><span class="p">,</span> <span class="s1">'(none)'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">session_medium</span><span class="p">,</span>  
        <span class="n">IFNULL</span><span class="p">(</span><span class="n">session_source</span><span class="p">,</span> <span class="s1">'(direct)'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">session_source</span><span class="p">,</span>  
        <span class="n">IFNULL</span><span class="p">(</span><span class="n">session_term</span><span class="p">,</span> <span class="s1">'(direct)'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">session_term</span>  
    <span class="k">FROM</span> <span class="n">CTE_utm_spread</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="6-extract-only-the-necessary-columns-for-calculating-attribution">6. Extract only the necessary columns for calculating attribution.</h1>

<p>You only need the following columns:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">user_pseudo_id</code></li>
  <li><code class="language-plaintext highlighter-rouge">event_date</code></li>
  <li><code class="language-plaintext highlighter-rouge">event_timestamp</code></li>
  <li><code class="language-plaintext highlighter-rouge">session_campaign</code></li>
  <li><code class="language-plaintext highlighter-rouge">session_medium</code></li>
  <li><code class="language-plaintext highlighter-rouge">session_source</code></li>
  <li><code class="language-plaintext highlighter-rouge">conversion</code> (whether they have made their purchase or not)</li>
  <li><code class="language-plaintext highlighter-rouge">revenue</code> (total value of purchase)</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_user_sessions_channel_conversion</span> <span class="k">AS</span> <span class="p">(</span>    
    <span class="k">SELECT</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">session_campaign</span><span class="p">,</span> <span class="n">session_medium</span><span class="p">,</span> <span class="n">session_source</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'session_start'</span> <span class="k">THEN</span> <span class="mi">0</span>  
            <span class="k">WHEN</span> <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span> <span class="k">THEN</span> <span class="mi">1</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="k">conversion</span><span class="p">,</span>  
        <span class="n">event_value_in_usd</span> <span class="k">AS</span> <span class="n">revenue</span>  
    <span class="k">FROM</span>
        <span class="n">CTE_fill_na</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="k">IN</span> <span class="p">(</span>
            <span class="s1">'session_start'</span><span class="p">,</span> 
            <span class="s1">'purchase'</span>
        <span class="p">)</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">event_timestamp</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="7-assign-journey-numbers-to-each-users-purchase-event">7. Assign journey numbers to each user’s purchase event.</h1>

<p>Since a user may make multiple purchases, it’s necessary to recalculate attribution after the first purchase event.</p>

<p><img src="/assets/2023-07-09-last-click-attribution/joshua-flowchart-1.webp" alt="" /></p>

<p>You’ll need to separate each journey when it comes to calculating Joshua’s attribution model.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_purchase_journey</span> <span class="k">AS</span> <span class="p">(</span>    
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">session_campaign</span><span class="p">,</span> <span class="n">session_medium</span><span class="p">,</span> <span class="n">session_source</span><span class="p">,</span>  
        <span class="k">conversion</span><span class="p">,</span>  
        <span class="n">revenue</span><span class="p">,</span>  
        <span class="n">COALESCE</span><span class="p">(</span><span class="n">cumsum_conversion</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="k">AS</span> <span class="n">purchase_journey</span>  
    <span class="k">FROM</span>  
    <span class="p">(</span>  
        <span class="k">SELECT</span>  
            <span class="o">*</span><span class="p">,</span>  
            <span class="k">SUM</span><span class="p">(</span><span class="k">conversion</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>  
                <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span>  
                <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>  
                <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="n">UNBOUNDED</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="mi">1</span> <span class="k">PRECEDING</span>  
            <span class="p">)</span> <span class="k">AS</span> <span class="n">cumsum_conversion</span>  
        <span class="k">FROM</span>
            <span class="n">CTE_user_sessions_channel_conversion</span>  
    <span class="p">)</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">event_timestamp</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="8-assign-priorities-to-indicate-the-order-of-events-for-applying-the-last-click-attribution-model">8. Assign Priorities to indicate the order of events for applying the Last Click Attribution Model.</h1>

<p>When applying Last Click Attribution mechanically, there is a high possibility of incorrect attribution in cases like the following:</p>
<ul>
  <li>Joshua was initially acquired through the Summer Event campaign, then explored other information, and later started a new session through a Google search before making a purchase.</li>
  <li>In this case, it should be considered that Joshua made the purchase not primarily due to the effectiveness of our Google SEO strategy, as he was already aware of our website. Instead, it can be attributed to the appeal of the Summer Event, which influenced his decision to make the purchase.</li>
</ul>

<p><img src="/assets/2023-07-09-last-click-attribution/joshua-flowchart-2.webp" alt="" /></p>

<p>Therefore, I have assigned priorities based on the session_campaign as follows:</p>
<ul>
  <li>1 &lt; <code class="language-plaintext highlighter-rouge">direct</code> &lt; 2</li>
  <li>2 &lt; <code class="language-plaintext highlighter-rouge">organic</code> &lt; 3</li>
  <li>3 &lt; <code class="language-plaintext highlighter-rouge">referral</code> &lt; 4</li>
  <li>4 &lt; <code class="language-plaintext highlighter-rouge">identified campaign</code></li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_attribution_priority</span> <span class="k">AS</span> <span class="p">(</span> <span class="c1">-- Adjusted Last Click Model</span>
    <span class="k">SELECT</span>  
        <span class="o">*</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(direct)'</span>
                <span class="k">THEN</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span>
                    <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">purchase_journey</span>
                    <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="o">/</span> <span class="mi">1000</span>  
            <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(organic)'</span>
                <span class="k">THEN</span> <span class="mi">2</span> <span class="o">+</span> <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span>
                    <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">purchase_journey</span> 
                    <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="o">/</span> <span class="mi">1000</span>  
            <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(referral)'</span>
                <span class="k">THEN</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span>
                    <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">purchase_journey</span>
                    <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="o">/</span> <span class="mi">1000</span>  
            <span class="k">ELSE</span> 
                <span class="mi">4</span> <span class="o">+</span> <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span>
                    <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">purchase_journey</span> 
                    <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="o">/</span> <span class="mi">1000</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">attribution_priority</span>  
    <span class="k">FROM</span>
        <span class="n">CTE_purchase_journey</span>
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">event_timestamp</span>    
<span class="p">),</span>
</code></pre></div></div>

<h1 id="9--the-session_campaign-with-the-highest-priority-will-be-attributed-to-100-of-the-revenue">9.  The <code class="language-plaintext highlighter-rouge">session_campaign</code> with the highest priority will be attributed to 100% of the revenue.</h1>

<p>I have assigned priority classes based on the campaigns such as direct, organic, referral, and identifiable campaigns. However, within the same class, the attribution will be applied based on the most recent event, following the Last Click Attribution Model. Now, you can call this approach “<strong>Joshua’s Adjusted Last Click Attribution Model</strong>”. 😄</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_revenue_attribution</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">session_campaign</span><span class="p">,</span> <span class="n">session_medium</span><span class="p">,</span> <span class="n">session_source</span><span class="p">,</span>  
        <span class="k">conversion</span><span class="p">,</span>  
        <span class="n">revenue</span><span class="p">,</span>  
        <span class="n">purchase_journey</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">attribution_priority</span> <span class="o">=</span> <span class="k">MAX</span><span class="p">(</span><span class="n">attribution_priority</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>
                <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">purchase_journey</span>
            <span class="p">)</span>  
                <span class="k">THEN</span> <span class="k">MAX</span><span class="p">(</span><span class="n">revenue</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>
                    <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">purchase_journey</span>
                <span class="p">)</span>  
            <span class="k">ELSE</span> 
                <span class="k">NULL</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">revenue_attribution</span>  
    <span class="k">FROM</span>
        <span class="n">CTE_attribution_priority</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">event_timestamp</span>  
<span class="p">)</span>
</code></pre></div></div>

<h1 id="10-now-lets-perform-the-last-click-attribution-aggregation-for-each-channel">10. Now, let’s perform the Last Click Attribution aggregation for each channel.</h1>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="k">CASE</span>  
        <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(organic)'</span> <span class="k">THEN</span> <span class="s1">'Search Engine'</span>  
        <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(direct)'</span> <span class="k">THEN</span> <span class="s1">'Direct or Unknown'</span>  
        <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(referral)'</span> <span class="k">THEN</span> <span class="s1">'Social Media, Blogs, etc. (without UTM)'</span>  
        <span class="k">ELSE</span> <span class="n">session_campaign</span>  
    <span class="k">END</span> <span class="k">AS</span> <span class="n">session_campaign_edited</span><span class="p">,</span>  
    <span class="k">CASE</span>  
        <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(organic)'</span> <span class="k">THEN</span> <span class="n">session_source</span>  
        <span class="k">WHEN</span> <span class="n">session_campaign</span> <span class="o">=</span> <span class="s1">'(referral)'</span> <span class="k">THEN</span> <span class="n">session_source</span>  
        <span class="k">ELSE</span> <span class="k">NULL</span>  
    <span class="k">END</span> <span class="k">AS</span> <span class="n">session_source</span><span class="p">,</span>  
    <span class="k">SUM</span><span class="p">(</span><span class="n">revenue_attribution</span><span class="p">)</span> <span class="k">AS</span> <span class="n">revenue</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">acquisition_user_cnt</span><span class="p">,</span>  
    <span class="k">SUM</span><span class="p">(</span><span class="n">revenue_attribution</span><span class="p">)</span> <span class="o">/</span> <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">avg_revenue_per_user</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="n">revenue_attribution</span><span class="p">)</span> <span class="k">AS</span> <span class="n">purchase_cnt</span><span class="p">,</span>  
    <span class="k">SUM</span><span class="p">(</span><span class="n">revenue_attribution</span><span class="p">)</span> <span class="o">/</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">revenue_attribution</span><span class="p">)</span> <span class="k">AS</span> <span class="n">avg_revenue_per_purchase</span>  
<span class="k">FROM</span> 
    <span class="n">CTE_revenue_attribution</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
    <span class="n">session_campaign_edited</span><span class="p">,</span> <span class="n">session_source</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
    <span class="n">revenue</span> <span class="k">DESC</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="10-lets-create-a-dashboard-using-redash">10. Let’s create a dashboard using Redash.</h1>

<p><img src="/assets/2023-07-09-last-click-attribution/redash.webp" alt="" /></p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="English" /><category term="Data Analysis" /><category term="SQL" /><category term="BigQuery" /><summary type="html"><![CDATA[In this article, you will explore how to easily aggregate the Last Click Attribution Model using BigQuery.]]></summary></entry><entry><title type="html">It’s Harder than You Think to Extract DAU Separating New and Existing Users in BigQuery</title><link href="http://localhost:4000/extract-dau-separating-new-and-existing-users/" rel="alternate" type="text/html" title="It’s Harder than You Think to Extract DAU Separating New and Existing Users in BigQuery" /><published>2023-06-14T00:00:00+09:00</published><updated>2023-06-14T00:00:00+09:00</updated><id>http://localhost:4000/extract-dau-separating-new-and-existing-users</id><content type="html" xml:base="http://localhost:4000/extract-dau-separating-new-and-existing-users/"><![CDATA[<blockquote>
  <p>In this article, I’m going to talk about how to extract DAU separating new users and existing users directly from BigQuery. I prepared an insightful example to share some intuition with you, so that you can better understand.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Full BigQuery Codes</li>
  <li>Step by Step</li>
  <li>An Intuitive Example</li>
  <li>Review Full BigQuery Codes</li>
</ol>

<hr />

<p><img src="/assets/2023-06-14-extract-dau-separating-new-and-existing-users/data-pipeline.webp" alt="" /></p>
<blockquote>
  <p>Data pipeline from the website all the way up to Redash</p>
</blockquote>

<h1 id="1-full-bigquery-codes">1. Full BigQuery Codes</h1>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_flattened</span> <span class="k">AS</span> <span class="p">(</span>  
  <span class="c1">-- Confidential  </span>
<span class="p">),</span>  
<span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span>  
    <span class="k">WHERE</span> 
	    <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'session_start'</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">event_date</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">)</span>  
<span class="k">SELECT</span>  
    <span class="nb">date</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_all</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">&lt;&gt;</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_existing</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_new</span>  
<span class="k">FROM</span>
	<span class="n">CTE_users_min_gsn</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="p">;</span>
</code></pre></div></div>

<h1 id="2-step-by-step">2. Step by Step</h1>

<h2 id="21-daily-initial-session-sequence-values">2.1. Daily Initial Session Sequence Values</h2>

<p>First off, extract the <strong>daily initial session sequence values</strong> of all the users triggering <code class="language-plaintext highlighter-rouge">session_start</code>event.</p>
<ul>
  <li>the session sequence values are named <code class="language-plaintext highlighter-rouge">ga_session_number</code>in <a href="https://support.google.com/analytics/answer/7029846?hl=en#zippy=%2Cevent">BigQuery Export Schema of Google Analytics 4</a>.</li>
  <li>When a user(<code class="language-plaintext highlighter-rouge">user_pseudo_id</code>) starts their session for the first time, the  <code class="language-plaintext highlighter-rouge">ga_session_number</code>  in the event parameters equals to <code class="language-plaintext highlighter-rouge">1</code>, and then it increases sequentially each time the user returns and starts the new session again.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span>
    <span class="k">WHERE</span> 
	    <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'session_start'</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">event_date</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">)</span>
</code></pre></div></div>

<h2 id="22-separating-new--existing-users">2.2. Separating New &amp; Existing Users</h2>

<p>For the second step, categorize users as new or existing based on whether the <strong>daily initial session sequence value</strong> is <code class="language-plaintext highlighter-rouge">1</code> or <code class="language-plaintext highlighter-rouge">not</code> on a daily basis.</p>
<ul>
  <li>A user named Joshua, who first visited your website for example, can trigger multiple <code class="language-plaintext highlighter-rouge">session_start</code>events in a single day.</li>
  <li>Even though he returns to the website after his first visit, he should be still regarded as one of the new users when calculating on a daily basis.</li>
  <li>That ‘s why I mentioned above that you need to extract the <strong>“daily” initial session sequence values</strong> of all the users.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="nb">date</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_all</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">&lt;&gt;</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_existing</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_new</span>  
<span class="k">FROM</span>
	<span class="n">CTE_users_min_gsn</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="nb">date</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="3-an-intuitive-example">3. An Intuitive Example</h1>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1, before noon</strong></th>
      <th><strong>Jan 1, afternoon</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td>1st Visit</td>
      <td>2nd Visit</td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td>-</td>
      <td>1st Visit</td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td>2nd Visit</td>
      <td>-</td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td>1st Visit</td>
      <td>2nd Visit</td>
    </tr>
  </tbody>
</table>

<p>On January 1st, the DAU will be:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">3 New Users</code> (Joshua, Shane, and Angela)</li>
  <li><code class="language-plaintext highlighter-rouge">1 Existing User</code> (Chloe)</li>
</ul>

<p>Keep in mind that Joshua and Angela are regarded as the new users <strong>in spite of the fact that they made their second visit</strong>.</p>

<h3 id="step-1-identify-the-session-sequence-values-of-all-the-users">STEP 1. Identify the session sequence values of all the users.</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1, before noon</strong></th>
      <th><strong>Jan 1, afternoon</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 2</td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td>-</td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 45</td>
      <td>-</td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 2</td>
    </tr>
  </tbody>
</table>

<h3 id="step2-aggregate-each-user-with-the-minimum-session-sequence-value">STEP2. Aggregate each user with the minimum session sequence value.</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 45</td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
  </tbody>
</table>

<h3 id="step-3-classify-each-user-as-a-new-or-existing-user-based-on-whether-or-not-the-minimum-session-sequence-value-equals-to-1">STEP 3. Classify each user as a new or existing user based on whether or not the minimum session sequence value equals to 1.</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td><code class="language-plaintext highlighter-rouge">New User</code></td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td><code class="language-plaintext highlighter-rouge">New User</code></td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td><code class="language-plaintext highlighter-rouge">Existing User</code></td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td><code class="language-plaintext highlighter-rouge">New User</code></td>
    </tr>
  </tbody>
</table>

<h1 id="4-review-full-bigquery-codes">4. Review Full BigQuery Codes</h1>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_flattened</span> <span class="k">AS</span> <span class="p">(</span>  
  <span class="c1">-- Confidential  </span>
<span class="p">),</span>  
<span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span>  
    <span class="k">WHERE</span> 
	    <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'session_start'</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">event_date</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">)</span>  
<span class="k">SELECT</span>  
    <span class="nb">date</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_all</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">&lt;&gt;</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_existing</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_new</span>  
<span class="k">FROM</span>
	<span class="n">CTE_users_min_gsn</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="p">;</span>
</code></pre></div></div>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="English" /><category term="SQL" /><category term="Data Analysis" /><category term="BigQuery" /><summary type="html"><![CDATA[In this article, I’m going to talk about how to extract DAU separating new users and existing users directly from BigQuery. I prepared an insightful example to share some intuition with you, so that you can better understand.]]></summary></entry><entry><title type="html">Harnessing the Power of BigQuery and Python: Overcoming Google Optimize A/B Testing Limitations</title><link href="http://localhost:4000/overcoming-google-optimize/" rel="alternate" type="text/html" title="Harnessing the Power of BigQuery and Python: Overcoming Google Optimize A/B Testing Limitations" /><published>2023-06-04T00:00:00+09:00</published><updated>2023-06-04T00:00:00+09:00</updated><id>http://localhost:4000/overcoming-google-optimize</id><content type="html" xml:base="http://localhost:4000/overcoming-google-optimize/"><![CDATA[<blockquote>
  <p>By connecting to BigQuery (where the experiment data is loaded) from Python and creating automated code, the analysis time can be significantly reduced, and it becomes easier to quickly determine the direction for further analysis when needed.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Introduction
    <ul>
      <li>1.1. Why I Think of Google Optimize as Risky</li>
      <li>1.2. Google Analytics 4 May Offer Improvements in This Regard, But It Can be Quite Cumbersome.</li>
      <li>1.3. How Your A/B Test Data is Loaded Into BigQuery</li>
    </ul>
  </li>
  <li>To Connect Python with BigQuery
    <ul>
      <li>2.1. Load Libraries</li>
      <li>2.2. Connect to Bigquery</li>
      <li>2.3. Enter the Basic Experiment Info</li>
    </ul>
  </li>
  <li>Extracting Data
    <ul>
      <li>3.1. Purchase Conversion Rate</li>
      <li>3.2. Purchase Conversion Rate (by Country)</li>
      <li>3.3. Average Revenue per User</li>
      <li>3.4. Average Revenue per User (by Country)</li>
      <li>3.5. Other Aspects?</li>
    </ul>
  </li>
  <li>Start to Analyze Statistically
    <ul>
      <li>4.1. Purchase Conversion Rate</li>
      <li>4.2. Average Revenue per User</li>
      <li>4.3. Conversion Rate &amp; Average Revenue per User (by Country)</li>
    </ul>
  </li>
  <li>To Recap</li>
</ol>

<hr />

<h1 id="tldr">TL;DR</h1>

<p>The dashboard of Google Optimize presents an excessively one-dimensional view when analyzing A/B tests, making it very risky to base service decisions solely on this.</p>
<ul>
  <li>Even if A/B testing may lead to the conclusion of maintaining option A across all user aspects, there can be cases within specific subgroups where the conclusion may favor option B. Unfortunately, Google Optimize does not provide such detailed analysis tools.</li>
  <li>Google Optimize allows for setting a maximum of three goals, which include metrics such as purchase conversion rate and specific button click-through rate. However, to comprehensively examine actions on the following pages or retention rates, it is necessary to consider them all together. Unfortunately, Google Optimize does not provide such functionality.</li>
  <li>There is indeed a valid concern regarding Google Optimize accurately measuring goal achievement if a user executes multiple sessions and makes a purchase in the last session while bypassing the experiment assignment page. It is questionable whether Google Optimize can accurately attribute this conversion as goal achievement.</li>
</ul>

<p>While Google Analytics 4’s Explore feature provides a UI for in-depth analysis of experiment results, it can be quite cumbersome and time-consuming to manually check and explore the results every time.</p>

<p>Therefore, by connecting to BigQuery (where the experiment data is loaded) from Python and creating automated code, the analysis time can be significantly reduced, and it becomes easier to quickly determine the direction for further analysis when needed.</p>

<p><strong>⚠️Amber Alert!</strong>  ️</p>

<blockquote>
  <p>“Google Optimize and Optimize 360 will no longer be available after September 30, 2023. Your experiments and personalizations can continue to run until that date. Any experiments and personalizations still active on that date will end.</p>

  <p>We launched Google Optimize over 5 years ago to enable businesses of all sizes to easily test and improve your user experiences. We remain committed to enabling businesses of all sizes to improve your user experiences and are investing in third-party A/B testing integrations for Google Analytics 4.”</p>
</blockquote>

<p>by  <a href="https://support.google.com/optimize/answer/12979939?hl=en">Google Resource Hub</a></p>

<h1 id="1-introduction">1. Introduction</h1>

<h2 id="11-why-i-think-of-google-optimize-as-risky">1.1. Why I Think of Google Optimize as Risky</h2>

<p>A/B testing is one of the most important growth methodologies in growth hacking. However, unfortunately, many startups do not have an independent A/B testing environment. As a result, many companies utilize A/B testing tools such as Amplitude’s Experiment feature, Optimizely, and Google’s Optimize. In the case of Google Optimize, which I am most familiar with, as shown in the image below, it only displays analysis results in a simple one-dimensional view.</p>

<p><img src="/assets/2023-06-04-overcoming-google-optimize/google-optimize.webp" alt="" /></p>
<blockquote>
  <p>Is that enough to analyze for your A/B test, indeed?</p>
</blockquote>

<p>Deriving A/B test results solely based on such one-dimensional outcomes can pose significant risks.</p>

<p>Especially according to Chapter 6 of  <a href="https://www.oreilly.com/library/view/product-analytics-applied/9780135258644/">Product Analytics by Joanne Rodrigues</a>, the following pitfalls can occur in A/B testing:</p>

<ol>
  <li>Even if there is no significant difference between the experimental group and the control group, there may be significant differences among specific subgroups, such as gender group, age group, country group, etc.</li>
  <li>In terms of CTR (Click-through rate), Group A may be less than B. However, in terms of subsequent page actions or retention, Group A may be greater than B, as well.</li>
</ol>

<p>Additionally, based on my personal investigation, there seemed to be a limitation where users who were assigned to the A/B test, ended their session normally, and made a purchase through a different path rather than the experimental exposure page, did not appear properly on the Google Optimize dashboard.</p>

<p>In conclusion, it feels difficult to trust the Google Optimize dashboard, and relying on it to brief analysis results seems prone to errors.</p>

<h2 id="12-google-analytics-4-may-offer-improvements-in-this-regard-but-it-can-be-quite-cumbersome">1.2. Google Analytics 4 May Offer Improvements in This Regard, But It Can be Quite Cumbersome.</h2>

<p>Experiment data from Google Optimize is transferred to Google Analytics 4, and when pre-defined audience settings are in place, it allows for the exploration of users from various perspectives within the Explore feature.</p>

<p><img src="/assets/2023-06-04-overcoming-google-optimize/ga4-explore.webp" alt="" /></p>
<blockquote>
  <p>Imagine that you click and drag here and there every time you should analyze a series of A/B tests.</p>
</blockquote>

<p>However, repeatedly using such exploration features and finding insights within specific subgroups can be very time-consuming. While this level of analysis may be sufficient when conducting A/B tests only once, it becomes time-consuming when the tests need to be repeated multiple times.</p>

<h2 id="13-how-your-ab-test-data-is-loaded-into-bigquery">1.3. How Your A/B Test Data is Loaded Into BigQuery</h2>

<p>In the environment of our company where we conduct A/B tests at least once a week, I have decided to create an automated analysis tool using BigQuery and Python to minimize the time spent on A/B test analysis.</p>

<p>The flow of A/B test data executed in Google Optimize is roughly as follows:</p>

<p><img src="/assets/2023-06-04-overcoming-google-optimize/flowchart.webp" alt="" /></p>
<blockquote>
  <p>The flow of A/B test data executed in Google Optimize</p>
</blockquote>

<p>The  <code class="language-plaintext highlighter-rouge">experiment_impression</code>  event generated in Google Analytics 4 is loaded into BigQuery as follows.</p>

<p>Event Parameters of <code class="language-plaintext highlighter-rouge">experiment_impression</code></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">experiment_id</code>: It signifies which experiment the user was exposed to. (You can find the unique ID of each experiment on the Google Optimize management page.)</li>
  <li><code class="language-plaintext highlighter-rouge">variant_id</code>: It signifies which group the user was assigned to within that experiment. It is represented by values in the format of  <code class="language-plaintext highlighter-rouge">experiment_id.{index}</code>, where 0, 1, 2, etc., indicate assignment to Group A, Group B, Group C, and so on in sequential order.</li>
</ul>

<p><img src="/assets/2023-06-04-overcoming-google-optimize/bigquery.webp" alt="" /></p>
<blockquote>
  <p>The <code class="language-plaintext highlighter-rouge">experiment_impression</code> event and its parameters in BigQuery</p>
</blockquote>

<h1 id="2-to-connect-python-with-bigquery">2. To Connect Python with BigQuery</h1>

<h2 id="21-load-libraries">2.1. Load Libraries</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">### Basics
</span><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">warnings</span>
<span class="n">warnings</span><span class="p">.</span><span class="nf">filterwarnings</span><span class="p">(</span><span class="sh">'</span><span class="s">ignore</span><span class="sh">'</span><span class="p">)</span>

<span class="c1">### Connector to BigQuery
</span><span class="kn">from</span> <span class="n">google.cloud</span> <span class="kn">import</span> <span class="n">bigquery</span>
<span class="kn">from</span> <span class="n">google.oauth2</span> <span class="kn">import</span> <span class="n">service_account</span>

<span class="c1">### A/B Test Analytics Libraries
</span><span class="kn">import</span> <span class="n">scipy.stats</span> <span class="k">as</span> <span class="n">stats</span>
<span class="kn">from</span> <span class="n">scipy.stats</span> <span class="kn">import</span> <span class="n">chi2_contingency</span>
<span class="kn">from</span> <span class="n">statsmodels.stats</span> <span class="kn">import</span> <span class="n">proportion</span>

<span class="c1">### Data Viz
</span><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
</code></pre></div></div>

<h2 id="22-connect-to-bigquery">2.2. Connect to Bigquery</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FOLDERPATH</span> <span class="o">=</span> <span class="sh">'</span><span class="s">/xxxxxxxxxxxxxxxxxx/config</span><span class="sh">'</span>  
<span class="n">KEY_NAME</span> <span class="o">=</span> <span class="sh">'</span><span class="s">xxxxxxxxxxxxxxxxx.json</span><span class="sh">'</span>  
<span class="n">KEY_PATH</span> <span class="o">=</span> <span class="n">FOLDERPATH</span> <span class="o">+</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="o">+</span> <span class="n">KEY_NAME</span>  

<span class="n">CREDENTIALS</span> <span class="o">=</span> <span class="n">service_account</span><span class="p">.</span><span class="n">Credentials</span><span class="p">.</span><span class="nf">from_service_account_file</span><span class="p">(</span><span class="n">KEY_PATH</span><span class="p">)</span>  
  
<span class="n">client</span> <span class="o">=</span> <span class="n">bigquery</span><span class="p">.</span><span class="nc">Client</span><span class="p">(</span>  
    <span class="n">credentials</span> <span class="o">=</span> <span class="n">CREDENTIALS</span><span class="p">,</span>  
    <span class="n">project</span> <span class="o">=</span> <span class="n">CREDENTIALS</span><span class="p">.</span><span class="n">project_id</span>  
<span class="p">)</span>
</code></pre></div></div>

<p>To connect with BigQuery, you need to create a service account within your BigQuery project and obtain the necessary credentials.</p>

<p>For detailed instructions, please refer to  <a href="https://cloud.google.com/bigquery/docs/authentication/service-account-file?hl=en#python">this guide</a>. It provides step-by-step instructions on how to create a service account and obtain the required credentials for accessing BigQuery.</p>

<h2 id="23-enter-the-basic-experiment-info">2.3. Enter the Basic Experiment Info</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">EXPERIMENT_ID</span> <span class="o">=</span> <span class="sh">'</span><span class="s">abc123ABC123</span><span class="sh">'</span>  
<span class="n">START_DATE</span><span class="p">,</span> <span class="n">END_DATE</span> <span class="o">=</span> <span class="sh">'</span><span class="s">2023-01-01</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">2023-01-31</span><span class="sh">'</span>  
<span class="n">CONFIDENCE_LEVEL</span> <span class="o">=</span> <span class="mf">0.95</span>  
<span class="n">ALPHA</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">CONFIDENCE_LEVEL</span>
</code></pre></div></div>

<p>Please provide the  <code class="language-plaintext highlighter-rouge">EXPERIMENT_ID</code>  of the Google Optimize experiment you wish to analyze.</p>

<p>Please enter the experiment duration by specifying the  <code class="language-plaintext highlighter-rouge">START_DATE</code>  and  <code class="language-plaintext highlighter-rouge">END_DATE</code>  in the format of YYYY-MM-DD.</p>
<ul>
  <li>Note: It typically takes around 1.5 days for all data to be transferred from Google Optimize to GA4 and then to BigQuery. Therefore, it is recommended to wait for approximately 1–2 days after the experiment ends before starting the analysis. This will allow sufficient time for the data to be fully available for analysis.</li>
</ul>

<h1 id="3-extracting-data">3. Extracting Data</h1>

<h2 id="31-purchase-conversion-rate">3.1. Purchase Conversion Rate</h2>

<p><strong>Full Codes</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SQL</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"""</span><span class="s">  
  
WITH  
CTE_raw AS (  
    SELECT
        *  
    FROM 
        `xxxxxxxxxxxxxxxxxxxx.events_*`  
    WHERE  
        _table_suffix BETWEEN 
            FORMAT_DATE(</span><span class="sh">'</span><span class="s">%Y%m%d</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="si">{</span><span class="n">START_DATE</span><span class="si">}</span><span class="sh">'</span><span class="s">) 
            AND FORMAT_DATE(</span><span class="sh">'</span><span class="s">%Y%m%d</span><span class="sh">'</span><span class="s">, </span><span class="sh">'</span><span class="si">{</span><span class="n">END_DATE</span><span class="si">}</span><span class="sh">'</span><span class="s">)  
        AND user_pseudo_ID IS NOT NULL  
),  

CTE_users_assigned AS (  
    SELECT  
        user_pseudo_id,  
        CASE  
            WHEN ENDS_WITH(assigned_params.value.string_value, </span><span class="sh">'</span><span class="s">.0</span><span class="sh">'</span><span class="s">) THEN </span><span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="s">  
            WHEN ENDS_WITH(assigned_params.value.string_value, </span><span class="sh">'</span><span class="s">.1</span><span class="sh">'</span><span class="s">) THEN </span><span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="s">  
        END AS test_group,  
        MIN(event_timestamp) AS assigned_timestamp  
    FROM
        CTE_raw  
    CROSS JOIN 
        UNNEST (event_params) AS assigned_params  
    WHERE  
        event_name = </span><span class="sh">'</span><span class="s">experiment_impression</span><span class="sh">'</span><span class="s">  
        AND assigned_params.key = </span><span class="sh">'</span><span class="s">variant_id</span><span class="sh">'</span><span class="s">  
        AND STARTS_WITH(assigned_params.value.string_value, </span><span class="sh">'</span><span class="si">{</span><span class="n">EXPERIMENT_ID</span><span class="si">}</span><span class="sh">'</span><span class="s">) = True  
    GROUP BY 
        test_group, user_pseudo_id  
    ORDER BY 
        test_group, user_pseudo_id  
),  

CTE_users_purchased AS (  
    SELECT  
        user_pseudo_id,  
        event_timestamp AS purchase_timestamp   
    FROM 
        CTE_raw  
    WHERE  
        event_name = </span><span class="sh">'</span><span class="s">purchase</span><span class="sh">'</span><span class="s">  
    ORDER BY  
        purchase_timestamp, user_pseudo_id  
),  

CTE_users_purchased_assigned_only AS (  
    SELECT  
        DISTINCT A.user_pseudo_id  
    FROM 
        CTE_users_purchased A  
    LEFT JOIN 
        CTE_users_assigned B  
        ON A.user_pseudo_id = B.user_pseudo_id  
        AND A.purchase_timestamp &gt;= B.assigned_timestamp  
    WHERE  
        B.user_pseudo_id IS NOT NULL
        AND B.assigned_timestamp IS NOT NULL  
    ORDER BY 
        user_pseudo_id  
),  

CTE_users_purchase_cvr_group AS (  
    SELECT  
        A.user_pseudo_id,  
        A.test_group,  
        CASE  
            WHEN B.user_pseudo_id IS NOT NULL THEN 1  
            ELSE 0  
        END AS purchase  
    FROM 
        CTE_users_assigned A  
    LEFT JOIN 
        CTE_users_purchased_assigned_only B  
        ON A.user_pseudo_id = B.user_pseudo_id  
    ORDER BY 
        A.test_group, purchase DESC, A.user_pseudo_id      
)  

SELECT 
    * 
FROM 
    CTE_users_purchase_cvr_group
;
  
</span><span class="sh">"""</span>  

<span class="n">results</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">SQL</span><span class="p">)</span>  
<span class="n">purchase_cvr_df</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">to_dataframe</span><span class="p">()</span>
</code></pre></div></div>

<p>Feeling overwhelmed by all the code snippets? Don’t worry. I’ll guide you through each code snippet and explain what it means.</p>

<p><strong>1. Extract all events that occurred during the experiment period.</strong></p>
<ul>
  <li>Since  <code class="language-plaintext highlighter-rouge">START_DATE</code>  and  <code class="language-plaintext highlighter-rouge">END_DATE</code>  have already been defined earlier, let’s input the variables themselves.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>
        <span class="o">*</span>  
    <span class="k">FROM</span> 
        <span class="nv">`xxxxxxxxxxxxxxxxxxxx.events_*`</span>  
    <span class="k">WHERE</span>  
        <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> 
            <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'{START_DATE}'</span><span class="p">)</span> 
            <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'{END_DATE}'</span><span class="p">)</span>  
        <span class="k">AND</span> <span class="n">user_pseudo_ID</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>2. Extract information on which group each user was assigned to in the experiment and when they were initially assigned.</strong></p>
<ul>
  <li>Reason for including the initially assigned timestamp (<code class="language-plaintext highlighter-rouge">assigned_timestamp</code>) in the extraction: It is important to understand what actions users take after being assigned to the experiment, focusing on the actions that occur after the assignment. By excluding the pre-assignment actions, we establish a foundation for observing the causal relationship in A/B testing. Therefore, it is crucial to only observe the actions taken after the experiment assignment.</li>
</ul>

<table>
  <thead>
    <tr>
      <th><strong>Example Results</strong></th>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Joshua</td>
      <td>A</td>
      <td>2023-01-02</td>
    </tr>
    <tr>
      <td>Meghan</td>
      <td>B</td>
      <td>2023-01-05</td>
    </tr>
    <tr>
      <td>Andrew</td>
      <td>A</td>
      <td>2023-01-04</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
      <td>…</td>
    </tr>
  </tbody>
</table>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_assigned</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">ENDS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'.0'</span><span class="p">)</span> <span class="k">THEN</span> <span class="s1">'A'</span>  
            <span class="k">WHEN</span> <span class="n">ENDS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'.1'</span><span class="p">)</span> <span class="k">THEN</span> <span class="s1">'B'</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">test_group</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">event_timestamp</span><span class="p">)</span> <span class="k">AS</span> <span class="n">assigned_timestamp</span>  
    <span class="k">FROM</span>
        <span class="n">CTE_raw</span>  
    <span class="k">CROSS</span> <span class="k">JOIN</span> 
        <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">assigned_params</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'experiment_impression'</span>  
        <span class="k">AND</span> <span class="n">assigned_params</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'variant_id'</span>  
        <span class="k">AND</span> <span class="n">STARTS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'{EXPERIMENT_ID}'</span><span class="p">)</span> <span class="o">=</span> <span class="k">True</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
        <span class="n">test_group</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">test_group</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span> 
</code></pre></div></div>

<p><strong>3. Extract all users who completed a purchase during the experiment period.</strong></p>
<ul>
  <li>This is still prior to extracting only the users exposed to the experiment. Don’t worry, we’ll get there.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_purchased</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">event_timestamp</span> <span class="k">AS</span> <span class="n">purchase_timestamp</span>   
    <span class="k">FROM</span> 
        <span class="n">CTE_raw</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">purchase_timestamp</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span>  
</code></pre></div></div>

<p><strong>4. Re-extract only the users exposed to the experiment from <code class="language-plaintext highlighter-rouge">CTE_users_purchased</code>.</strong></p>

<ul>
  <li><strong>Condition 1)</strong> The  <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>  must match the assigned  <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>  in the experiment.</li>
  <li><strong>Condition 2)</strong> The  <code class="language-plaintext highlighter-rouge">assigned_timestamp</code>  in the experiment must be earlier than the  <code class="language-plaintext highlighter-rouge">purchase_timestamp</code>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_purchased_assigned_only</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="k">DISTINCT</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_users_purchased</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">purchase_timestamp</span> <span class="o">&gt;=</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span>  
    <span class="k">WHERE</span>  
        <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
        <span class="k">AND</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">user_pseudo_id</span>  
<span class="p">),</span>  
</code></pre></div></div>

<p><strong>5. Extract the assigned group and the purchase conversion of the users assigned to the experiment simultaneously.</strong></p>

<table>
  <thead>
    <tr>
      <th><strong>Example Results</strong></th>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Joshua</td>
      <td>A</td>
      <td>1</td>
    </tr>
    <tr>
      <td>Meghan</td>
      <td>B</td>
      <td>0</td>
    </tr>
    <tr>
      <td>Andrew</td>
      <td>A</td>
      <td>1</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
      <td>…</td>
    </tr>
  </tbody>
</table>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_purchase_cvr_group</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="mi">1</span>  
            <span class="k">ELSE</span> <span class="mi">0</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">purchase</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_purchased_assigned_only</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span> <span class="n">purchase</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span>      
<span class="p">)</span>

<span class="k">SELECT</span> 
    <span class="o">*</span> 
<span class="k">FROM</span> 
    <span class="n">CTE_users_purchase_cvr_group</span>
<span class="p">;</span>
</code></pre></div></div>

<p><strong>6. Store the final extracted table as a Pandas DataFrame named <code class="language-plaintext highlighter-rouge">purchase_cvr_df</code>.</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">results</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">SQL</span><span class="p">)</span>  
<span class="n">purchase_cvr_df</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">to_dataframe</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="32-purchase-conversion-rate-by-country">3.2. Purchase Conversion Rate (by Country)</h2>

<p><strong>Full Codes</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span> 
    <span class="o">*</span>  
    <span class="k">FROM</span> 
        <span class="nv">`xxxxxxxxxxxxxxxxxxxx.events_*`</span>  
    <span class="k">WHERE</span>  
        <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> 
            <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'{START_DATE}'</span><span class="p">)</span> 
            <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'{END_DATE}'</span><span class="p">)</span>  
        <span class="k">AND</span> <span class="n">user_pseudo_ID</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>  

<span class="n">CTE_users_assigned</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">ENDS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'.0'</span><span class="p">)</span> <span class="k">THEN</span> <span class="s1">'A'</span>  
            <span class="k">WHEN</span> <span class="n">ENDS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'.1'</span><span class="p">)</span> <span class="k">THEN</span> <span class="s1">'B'</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">test_group</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">event_timestamp</span><span class="p">)</span> <span class="k">AS</span> <span class="n">assigned_timestamp</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_raw</span>  
    <span class="k">CROSS</span> <span class="k">JOIN</span> 
        <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">assigned_params</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'experiment_impression'</span>  
        <span class="k">AND</span> <span class="n">assigned_params</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'variant_id'</span>  
        <span class="k">AND</span> <span class="n">STARTS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'{EXPERIMENT_ID}'</span><span class="p">)</span> <span class="o">=</span> <span class="k">True</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
        <span class="n">test_group</span><span class="p">,</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">test_group</span><span class="p">,</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span>  

<span class="n">CTE_users_purchased</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>  
        <span class="n">event_timestamp</span> <span class="k">AS</span> <span class="n">purchase_timestamp</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_raw</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">purchase_timestamp</span><span class="p">,</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span>  

<span class="n">CTE_users_purchased_assigned_only</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="k">DISTINCT</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="n">country</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_users_purchased</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">country</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">purchase_timestamp</span> <span class="o">&gt;=</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span>  
    <span class="k">WHERE</span>  
        <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> 
        <span class="k">AND</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">A</span><span class="p">.</span><span class="n">country</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span>  

<span class="n">CTE_users_purchase_cvr_group</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="mi">1</span>  
            <span class="k">ELSE</span> <span class="mi">0</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">purchase</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_purchased_assigned_only</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">country</span>   
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span> <span class="n">purchase</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
<span class="p">)</span>  

<span class="k">SELECT</span> 
    <span class="o">*</span> 
<span class="k">FROM</span> 
    <span class="n">CTE_users_purchase_cvr_group</span>
<span class="p">;</span>
</code></pre></div></div>

<p>Everything is the same as I have guided you previously, except for the <code class="language-plaintext highlighter-rouge">geo.country</code> for grouping the users by their countries.</p>

<h2 id="33-average-revenue-per-user">3.3. Average Revenue per User</h2>

<p><strong>Full Codes</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SQL</span> <span class="o">=</span> <span class="nv">"</span><span class="se">""</span><span class="nv">

WITH  
CTE_raw AS (  
    SELECT 
        *  
    FROM 
        `xxxxxxxxxxxxxxxxxxxx.events_*`  
    WHERE  
        _table_suffix BETWEEN 
            FORMAT_DATE('%Y%m%d', '{START_DATE}') 
            AND FORMAT_DATE('%Y%m%d', '{END_DATE}')  
        AND user_pseudo_ID IS NOT NULL  
),  

CTE_users_assigned AS (  
    SELECT  
        user_pseudo_id,  
        CASE  
            WHEN ENDS_WITH(assigned_params.value.string_value, '.0') THEN 'A'  
            WHEN ENDS_WITH(assigned_params.value.string_value, '.1') THEN 'B'  
        END AS test_group,  
        MIN(event_timestamp) AS assigned_timestamp  
    FROM 
        CTE_raw  
    CROSS JOIN 
        UNNEST (event_params) AS assigned_params  
    WHERE  
        event_name = 'experiment_impression'  
        AND assigned_params.key = 'variant_id'  
        AND STARTS_WITH(assigned_params.value.string_value, '{EXPERIMENT_ID}') = True  
    GROUP BY 
        test_group, user_pseudo_id  
    ORDER BY 
        test_group, user_pseudo_id  
),  

CTE_txids_revenue AS (  
    SELECT  
        ecommerce.transaction_id AS txid,  
        user_pseudo_id,  
        event_timestamp AS purchase_timestamp,  
        ecommerce.purchase_revenue_in_usd AS revenue  
    FROM 
        CTE_raw  
    WHERE  
        event_name = 'purchase'  
    ORDER BY 
        revenue DESC, txid, user_pseudo_id  
),  

CTE_txids_revenue_assigned_only AS (  
    SELECT  
        A.txid,  
        A.user_pseudo_id,  
        A.purchase_timestamp,  
        A.revenue  
    FROM 
        CTE_txids_revenue A  
    LEFT JOIN 
        CTE_users_assigned B  
        ON A.user_pseudo_id = B.user_pseudo_id  
        AND A.purchase_timestamp &gt;= B.assigned_timestamp  
    WHERE  
        B.user_pseudo_id IS NOT NULL 
        AND B.assigned_timestamp IS NOT NULL  
),  

CTE_users_revenue AS (  
    SELECT  
        user_pseudo_id,  
        SUM(revenue) AS revenue_usd  
    FROM 
        CTE_txids_revenue_assigned_only  
    GROUP BY 
        user_pseudo_id  
    ORDER BY 
        revenue_usd DESC  
),  

CTE_users_arpu_group AS (  
    SELECT  
        A.user_pseudo_id,  
        A.test_group,  
        CASE  
            WHEN B.revenue_usd IS NOT NULL THEN B.revenue_usd  
            ELSE 0  
        END AS revenue_usd  
    FROM 
        CTE_users_assigned A  
    LEFT JOIN 
        CTE_users_revenue B  
        ON A.user_pseudo_id = B.user_pseudo_id  
    ORDER BY 
        A.test_group, B.revenue_usd DESC, A.user_pseudo_id  
)  

SELECT 
    * 
FROM 
    CTE_users_arpu_group
;

</span><span class="se">""</span><span class="nv">"</span>

<span class="n">results</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="k">SQL</span><span class="p">)</span>  
<span class="n">arpu_df</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="n">to_dataframe</span><span class="p">()</span>
</code></pre></div></div>

<p>Feeling overwhelmed by all the code snippets? Don’t worry. I’ll guide you through each code snippet and explain what it means.</p>

<p><strong>1. Extract all events that occurred during the experiment period.</strong></p>
<ul>
  <li>This is the same as we already discussed earlier in the <strong>“Purchase Conversion Rate”</strong>.</li>
</ul>

<p><strong>2. Extract information on which group each user was assigned to in the experiment and when they were initially assigned.</strong></p>
<ul>
  <li>This is the same as we already discussed earlier in the <strong>“Purchase Conversion Rate”</strong>.</li>
</ul>

<p><strong>3. Extract the <code class="language-plaintext highlighter-rouge">transaction_id</code>, <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>, <code class="language-plaintext highlighter-rouge">purchase_timestamp</code>, and <code class="language-plaintext highlighter-rouge">revenue</code> for each transaction during the experiment period.</strong></p>
<ul>
  <li>This is still prior to extracting only the users exposed to the experiment. Don’t worry, we’ll get there.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_txids_revenue</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">transaction_id</span> <span class="k">AS</span> <span class="n">txid</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">event_timestamp</span> <span class="k">AS</span> <span class="n">purchase_timestamp</span><span class="p">,</span>  
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">purchase_revenue_in_usd</span> <span class="k">AS</span> <span class="n">revenue</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_raw</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">revenue</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">txid</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span>  
</code></pre></div></div>

<p><strong>4. Re-extract only the users’ transactions exposed to the experiment from <code class="language-plaintext highlighter-rouge">CTE_txids_revenue</code>.</strong></p>
<ul>
  <li><strong>Condition 1)</strong> The  <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>  must match the assigned  <code class="language-plaintext highlighter-rouge">user_pseudo_id</code>  in the experiment.</li>
  <li><strong>Condition 2)</strong> The  <code class="language-plaintext highlighter-rouge">assigned_timestamp</code>  in the experiment must be earlier than the  <code class="language-plaintext highlighter-rouge">purchase_timestamp</code>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_txids_revenue_assigned_only</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">txid</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">purchase_timestamp</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">revenue</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_txids_revenue</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">purchase_timestamp</span> <span class="o">&gt;=</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span>  
    <span class="k">WHERE</span>  
        <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> 
        <span class="k">AND</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>  
</code></pre></div></div>

<p><strong>5. Represent the data at the user level instead of the transaction ID level.</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_revenue</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">SUM</span><span class="p">(</span><span class="n">revenue</span><span class="p">)</span> <span class="k">AS</span> <span class="n">revenue_usd</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_txids_revenue_assigned_only</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
        <span class="n">user_pseudo_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">revenue_usd</span> <span class="k">DESC</span>  
<span class="p">),</span>  
</code></pre></div></div>

<p><strong>6. Extract the assigned group and purchase amount of the users assigned to the experiment in a single query.</strong></p>

<table>
  <thead>
    <tr>
      <th><strong>Example Results</strong></th>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Joshua</td>
      <td>A</td>
      <td>$100</td>
    </tr>
    <tr>
      <td>Meghan</td>
      <td>B</td>
      <td>$200</td>
    </tr>
    <tr>
      <td>Andrew</td>
      <td>A</td>
      <td>$300</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
      <td>…</td>
    </tr>
  </tbody>
</table>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_arpu_group</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">B</span><span class="p">.</span><span class="n">revenue_usd</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="n">B</span><span class="p">.</span><span class="n">revenue_usd</span>  
            <span class="k">ELSE</span> <span class="mi">0</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">revenue_usd</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_revenue</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="n">revenue_usd</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
<span class="p">)</span>  

<span class="k">SELECT</span> 
    <span class="o">*</span> 
<span class="k">FROM</span> 
    <span class="n">CTE_users_arpu_group</span>
<span class="p">;</span>
</code></pre></div></div>

<p><strong>7. Store the final extracted table as a Pandas DataFrame named <code class="language-plaintext highlighter-rouge">arpu_df</code>.</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">results</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">SQL</span><span class="p">)</span>  
<span class="n">arpu_df</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="nf">to_dataframe</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="34-average-revenue-per-user-by-country">3.4. Average Revenue per User (by Country)</h2>

<p><strong>Full Codes</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span> 
        <span class="o">*</span>  
    <span class="k">FROM</span> 
        <span class="nv">`xxxxxxxxxxxxxxxxxxxx.events_*`</span>  
    <span class="k">WHERE</span>  
        <span class="n">_table_suffix</span> <span class="k">BETWEEN</span> 
            <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'{START_DATE}'</span><span class="p">)</span> 
            <span class="k">AND</span> <span class="n">FORMAT_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="s1">'{END_DATE}'</span><span class="p">)</span>  
        <span class="k">AND</span> <span class="n">user_pseudo_ID</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>  

<span class="n">CTE_users_assigned</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">ENDS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'.0'</span><span class="p">)</span> <span class="k">THEN</span> <span class="s1">'A'</span>  
            <span class="k">WHEN</span> <span class="n">ENDS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'.1'</span><span class="p">)</span> <span class="k">THEN</span> <span class="s1">'B'</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">test_group</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">event_timestamp</span><span class="p">)</span> <span class="k">AS</span> <span class="n">assigned_timestamp</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_raw</span>  
    <span class="k">CROSS</span> <span class="k">JOIN</span> 
        <span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">assigned_params</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'experiment_impression'</span>  
        <span class="k">AND</span> <span class="n">assigned_params</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'variant_id'</span>  
        <span class="k">AND</span> <span class="n">STARTS_WITH</span><span class="p">(</span><span class="n">assigned_params</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span><span class="p">,</span> <span class="s1">'{EXPERIMENT_ID}'</span><span class="p">)</span> <span class="o">=</span> <span class="k">True</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
        <span class="n">test_group</span><span class="p">,</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">test_group</span><span class="p">,</span> <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span>

<span class="n">CTE_txids_revenue</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">transaction_id</span> <span class="k">AS</span> <span class="n">txid</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>  
        <span class="n">event_timestamp</span> <span class="k">AS</span> <span class="n">purchase_timestamp</span><span class="p">,</span>  
        <span class="n">ecommerce</span><span class="p">.</span><span class="n">purchase_revenue_in_usd</span> <span class="k">AS</span> <span class="n">revenue</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_raw</span>  
    <span class="k">WHERE</span>  
        <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'purchase'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">revenue</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">txid</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">),</span>  

<span class="n">CTE_txids_revenue_assigned_only</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">txid</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">purchase_timestamp</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">revenue</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_txids_revenue</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">country</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">purchase_timestamp</span> <span class="o">&gt;=</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span>  
    <span class="k">WHERE</span>  
        <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> 
        <span class="k">AND</span> <span class="n">B</span><span class="p">.</span><span class="n">assigned_timestamp</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>  

<span class="n">CTE_users_revenue</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">country</span><span class="p">,</span>  
        <span class="k">SUM</span><span class="p">(</span><span class="n">revenue</span><span class="p">)</span> <span class="k">AS</span> <span class="n">revenue_usd</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_txids_revenue_assigned_only</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
        <span class="n">country</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">revenue_usd</span> <span class="k">DESC</span>  
<span class="p">),</span>

<span class="n">CTE_users_arpu_group</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>  
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span>  
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">B</span><span class="p">.</span><span class="n">revenue_usd</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="n">B</span><span class="p">.</span><span class="n">revenue_usd</span>  
            <span class="k">ELSE</span> <span class="mi">0</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">revenue_usd</span>  
    <span class="k">FROM</span> 
        <span class="n">CTE_users_assigned</span> <span class="n">A</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span> 
        <span class="n">CTE_users_revenue</span> <span class="n">B</span>  
        <span class="k">ON</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
        <span class="k">AND</span> <span class="n">A</span><span class="p">.</span><span class="n">country</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">country</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
        <span class="n">A</span><span class="p">.</span><span class="n">test_group</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="n">revenue_usd</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">A</span><span class="p">.</span><span class="n">user_pseudo_id</span>  
<span class="p">)</span>  

<span class="k">SELECT</span> 
    <span class="o">*</span> 
<span class="k">FROM</span> 
    <span class="n">CTE_users_arpu_group</span>
<span class="p">;</span>
</code></pre></div></div>

<p>Everything is the same as I have guided you previously, except for the  <code class="language-plaintext highlighter-rouge">geo.country</code>  for grouping the users by their countries.</p>

<h2 id="35-other-aspects">3.5. Other Aspects?</h2>

<p>For the sake of brevity, I will omit the details regarding device-specific goal achievement and CTR for different buttons, as they are not significantly different from the provided SQL queries.</p>

<h1 id="4-start-to-analyze-statistically">4. Start to Analyze Statistically</h1>

<h2 id="41-purchase-conversion-rate">4.1. Purchase Conversion Rate</h2>

<p><strong>1. Did the data meet the assumptions prior to the analysis of A/B Test?</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">na</span> <span class="o">=</span> <span class="n">purchase_cvr_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">user_pseudo_id</span><span class="sh">'</span><span class="p">].</span><span class="nf">count</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>  
<span class="n">nb</span> <span class="o">=</span> <span class="n">purchase_cvr_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">user_pseudo_id</span><span class="sh">'</span><span class="p">].</span><span class="nf">count</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>  
<span class="nf">print</span><span class="p">(</span><span class="n">na</span><span class="p">,</span> <span class="n">nb</span><span class="p">)</span>

<span class="n">na</span> <span class="o">=</span> <span class="n">purchase_cvr_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">user_pseudo_id</span><span class="sh">'</span><span class="p">].</span><span class="nf">count</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>  
<span class="n">nb</span> <span class="o">=</span> <span class="n">purchase_cvr_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">user_pseudo_id</span><span class="sh">'</span><span class="p">].</span><span class="nf">count</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>  
  
<span class="n">xa</span> <span class="o">=</span> <span class="n">purchase_cvr_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">purchase</span><span class="sh">'</span><span class="p">].</span><span class="nf">sum</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>  
<span class="n">xb</span> <span class="o">=</span> <span class="n">purchase_cvr_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">purchase</span><span class="sh">'</span><span class="p">].</span><span class="nf">sum</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>  
  
<span class="n">pa</span> <span class="o">=</span> <span class="n">xa</span> <span class="o">/</span> <span class="n">na</span>  
<span class="n">pb</span> <span class="o">=</span> <span class="n">xb</span> <span class="o">/</span> <span class="n">nb</span>  
  
<span class="nf">if </span><span class="p">(</span><span class="n">na</span> <span class="o">*</span> <span class="n">pa</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">na</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">pa</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">nb</span> <span class="o">*</span> <span class="n">pb</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">nb</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">pb</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">):</span>  
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Did not meet the assumptions!</span><span class="sh">'</span><span class="p">)</span>  
<span class="k">else</span><span class="p">:</span>  
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Met the assumptions!</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>2. Start to Analyze.</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">z_result</span> <span class="o">=</span> <span class="n">proportion</span><span class="p">.</span><span class="nf">proportions_ztest</span><span class="p">(</span>  
    <span class="n">count</span> <span class="o">=</span> <span class="p">[</span><span class="n">xa</span><span class="p">,</span> <span class="n">xb</span><span class="p">],</span>  
    <span class="n">nobs</span> <span class="o">=</span> <span class="p">[</span><span class="n">na</span><span class="p">,</span> <span class="n">nb</span><span class="p">],</span>  
    <span class="n">alternative</span> <span class="o">=</span> <span class="sh">'</span><span class="s">smaller</span><span class="sh">'</span> <span class="c1"># two-sided, smaller, larger  
</span><span class="p">)</span>  
<span class="n">z</span><span class="p">,</span> <span class="n">p_value</span> <span class="o">=</span> <span class="n">z_result</span>  
  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">The results of the A/B test are as follows. (Confidence Level:</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">%)</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="k">if</span> <span class="n">p_value</span> <span class="o">&lt;</span> <span class="n">ALPHA</span><span class="p">:</span>  
  <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; The null hypothesis can be rejected. (A &lt; B)</span><span class="sh">'</span><span class="p">)</span>   
<span class="k">else</span><span class="p">:</span>  
  <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; The null hypothesis can not be rejected. (A &gt;= B)</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">=====================================</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="p">(</span><span class="n">a_lower</span><span class="p">,</span> <span class="n">b_lower</span><span class="p">),</span> <span class="p">(</span><span class="n">a_upper</span><span class="p">,</span> <span class="n">b_upper</span><span class="p">)</span> <span class="o">=</span> <span class="n">proportion</span><span class="p">.</span><span class="nf">proportion_confint</span><span class="p">(</span>  
    <span class="p">[</span><span class="n">xa</span><span class="p">,</span> <span class="n">xb</span><span class="p">],</span>  
    <span class="n">nobs</span> <span class="o">=</span> <span class="p">[</span><span class="n">na</span><span class="p">,</span> <span class="n">nb</span><span class="p">],</span>  
    <span class="n">alpha</span> <span class="o">=</span> <span class="n">ALPHA</span>  
<span class="p">)</span>  
  
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">p-value = </span><span class="si">{</span><span class="n">p_value</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; Conversion Rate of Group A:</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">pa</span> <span class="o">*</span> <span class="mi">100</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">%</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="s">(</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">% Confidence Interval: </span><span class="si">{</span><span class="n">a_lower</span> <span class="o">*</span> <span class="mi">100</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">% ~ </span><span class="si">{</span><span class="n">a_upper</span> <span class="o">*</span> <span class="mi">100</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">%)</span><span class="sh">'</span><span class="p">)</span>  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; Conversion Rate of Group B:</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">pb</span> <span class="o">*</span> <span class="mi">100</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">%</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="s">(</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">% Confidence Interval: </span><span class="si">{</span><span class="n">b_lower</span> <span class="o">*</span> <span class="mi">100</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">% ~ </span><span class="si">{</span><span class="n">b_upper</span> <span class="o">*</span> <span class="mi">100</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">%)</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>3. Visualize</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mf">2.5</span><span class="p">))</span>  
  
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span>  
    <span class="p">(</span><span class="n">a_lower</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span> <span class="n">a_upper</span><span class="o">*</span><span class="mi">100</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="sh">'</span><span class="s">ro-</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">blue</span><span class="sh">'</span>  
<span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span>  
    <span class="p">(</span><span class="n">b_lower</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span> <span class="n">b_upper</span><span class="o">*</span><span class="mi">100</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="sh">'</span><span class="s">ro-</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">red</span><span class="sh">'</span>  
<span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">yticks</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="p">[</span><span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">])</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">Conversion Rate (</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">% Confidence Level)</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Conversion Rate (%)</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Group</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">();</span>
</code></pre></div></div>

<h2 id="42-average-revenue-per-user">4.2. Average Revenue per User</h2>

<p><strong>1. Did the data meet the assumptions prior to the analysis of A/B Test?</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">na</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">user_pseudo_id</span><span class="sh">'</span><span class="p">].</span><span class="nf">count</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>  
<span class="n">nb</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">user_pseudo_id</span><span class="sh">'</span><span class="p">].</span><span class="nf">count</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>  
  
<span class="k">if</span> <span class="n">na</span> <span class="o">+</span> <span class="n">nb</span> <span class="o">&lt;</span> <span class="mi">30</span><span class="p">:</span>  
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Did not meet the assumptions!</span><span class="sh">'</span><span class="p">)</span>  
<span class="k">else</span><span class="p">:</span>  
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Met the assumptions!</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>2. Preliminary Analysis: Homogeneity of Variance Test <code class="language-plaintext highlighter-rouge">(Bartlett’s Test)</code></strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stat</span><span class="p">,</span> <span class="n">p_value</span> <span class="o">=</span> <span class="n">stats</span><span class="p">.</span><span class="nf">bartlett</span><span class="p">(</span>  
    <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">),</span>  
    <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>  
<span class="p">)</span>  
  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">The result of the homoscedasticity test is as follows. (Confidence Level:</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">%)</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="k">if</span> <span class="n">p_value</span> <span class="o">&lt;</span> <span class="n">ALPHA</span><span class="p">:</span>  
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; The variances of the two groups are different.</span><span class="sh">'</span><span class="p">)</span>  
    <span class="n">EQUAL_VAR</span> <span class="o">=</span> <span class="bp">False</span>  
<span class="k">else</span><span class="p">:</span>  
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; The variances of the two groups are same.</span><span class="sh">'</span><span class="p">)</span>  
    <span class="n">EQUAL_VAR</span> <span class="o">=</span> <span class="bp">True</span>
</code></pre></div></div>

<p><strong>3. Start to Analyze.</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">t_result</span> <span class="o">=</span> <span class="n">stats</span><span class="p">.</span><span class="nf">ttest_ind</span><span class="p">(</span>  
    <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">),</span>  
    <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">),</span>  
    <span class="n">equal_var</span> <span class="o">=</span> <span class="n">EQUAL_VAR</span><span class="p">,</span>  
    <span class="n">alternative</span> <span class="o">=</span> <span class="sh">'</span><span class="s">less</span><span class="sh">'</span>  
<span class="p">)</span>  
<span class="n">t</span><span class="p">,</span> <span class="n">p_value</span> <span class="o">=</span> <span class="n">t_result</span>  
  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">The results of the A/B test are as follows. (Confidence Level:</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">%)</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="k">if</span> <span class="n">p_value</span> <span class="o">&lt;</span> <span class="n">ALPHA</span><span class="p">:</span>  
  <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; The null hypothesis can be rejected. (A &lt; B)</span><span class="sh">'</span><span class="p">)</span>   
<span class="k">else</span><span class="p">:</span>  
  <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; The null hypothesis can not be rejected. (A &gt;= B)</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">=====================================</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="n">mean_a</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">mean</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>  
<span class="n">mean_b</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">mean</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>  
<span class="n">std_a</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">std</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>  
<span class="n">std_b</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">)[</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">std</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>  
  
<span class="n">a_lower</span><span class="p">,</span> <span class="n">a_upper</span> <span class="o">=</span> <span class="n">stats</span><span class="p">.</span><span class="n">t</span><span class="p">.</span><span class="nf">interval</span><span class="p">(</span>  
    <span class="n">confidence</span> <span class="o">=</span> <span class="n">ALPHA</span><span class="p">,</span>  
    <span class="n">df</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">).</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span>  
    <span class="n">loc</span> <span class="o">=</span> <span class="n">mean_a</span><span class="p">,</span>  
    <span class="n">scale</span> <span class="o">=</span> <span class="n">std_a</span>  
<span class="p">)</span>  
<span class="n">b_lower</span><span class="p">,</span> <span class="n">b_upper</span> <span class="o">=</span> <span class="n">stats</span><span class="p">.</span><span class="n">t</span><span class="p">.</span><span class="nf">interval</span><span class="p">(</span>  
    <span class="n">confidence</span> <span class="o">=</span> <span class="n">ALPHA</span><span class="p">,</span>  
    <span class="n">df</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">).</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span>  
    <span class="n">loc</span> <span class="o">=</span> <span class="n">mean_b</span><span class="p">,</span>  
    <span class="n">scale</span> <span class="o">=</span> <span class="n">std_b</span>  
<span class="p">)</span>  
  
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">p-value = </span><span class="si">{</span><span class="n">p_value</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; A안의 ARPU:</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="s">US$</span><span class="si">{</span><span class="n">mean_a</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="s">(</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">% Confidence Interval: US$</span><span class="si">{</span><span class="n">a_lower</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s"> ~ US$</span><span class="si">{</span><span class="n">a_upper</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">)</span><span class="sh">'</span><span class="p">)</span>  
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">&gt; B안의 ARPU:</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="s">US$</span><span class="si">{</span><span class="n">mean_b</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="sh">'</span><span class="p">,</span> <span class="sa">f</span><span class="sh">'</span><span class="s">(</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">% Confidence Interval: US$</span><span class="si">{</span><span class="n">b_lower</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s"> ~ US$</span><span class="si">{</span><span class="n">b_upper</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">)</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>4. Visualize</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mf">2.5</span><span class="p">))</span>  
  
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span>  
    <span class="p">(</span><span class="n">a_lower</span><span class="p">,</span> <span class="n">a_upper</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="sh">'</span><span class="s">ro-</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">blue</span><span class="sh">'</span>  
<span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span>  
    <span class="p">(</span><span class="n">b_lower</span><span class="p">,</span> <span class="n">b_upper</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="sh">'</span><span class="s">ro-</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">red</span><span class="sh">'</span>  
<span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">yticks</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="p">[</span><span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">])</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">ARPU (</span><span class="si">{</span><span class="nf">str</span><span class="p">(</span><span class="n">CONFIDENCE_LEVEL</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">% Confidence Leve)</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">ARPU (USD)</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Group</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">();</span>
</code></pre></div></div>

<p><strong>5. Visualize the Histogram of Purchase Amount by User <code class="language-plaintext highlighter-rouge">(KDE Plot)</code></strong></p>
<ul>
  <li>Checking for Data Bias due to Extremely High Purchase Amounts by Certain Minority of Users</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>  
  
<span class="n">sns</span><span class="p">.</span><span class="nf">kdeplot</span><span class="p">(</span>  
    <span class="n">data</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">),</span>  
    <span class="n">color</span> <span class="o">=</span> <span class="sh">'</span><span class="s">blue</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">fill</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>  
    <span class="n">label</span> <span class="o">=</span> <span class="sh">'</span><span class="s">Group A</span><span class="sh">'</span>  
<span class="p">)</span>  
<span class="n">sns</span><span class="p">.</span><span class="nf">kdeplot</span><span class="p">(</span>  
    <span class="n">data</span> <span class="o">=</span> <span class="n">arpu_df</span><span class="p">[</span><span class="n">arpu_df</span><span class="p">[</span><span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">),</span>  
    <span class="n">color</span> <span class="o">=</span> <span class="sh">'</span><span class="s">red</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">fill</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>  
    <span class="n">label</span> <span class="o">=</span> <span class="sh">'</span><span class="s">Group B</span><span class="sh">'</span>  
<span class="p">)</span> 

<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">Distribution of User Purchase Amounts</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">User Purchase Amounts (USD)</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Proportion</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">xlim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10000</span><span class="p">)</span>  
  
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">();</span>
</code></pre></div></div>

<h2 id="43-conversion-rate--average-revenue-per-user-by-country">4.3. Conversion Rate &amp; Average Revenue per User (by Country)</h2>

<ul>
  <li>In the following query, I have categorized countries into the US vs Others. However, depending on the distribution of countries currently using your service, it may be possible to further divide them into smaller groups.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>  
  
<span class="c1"># Conversion Rate  
</span><span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>  
  
<span class="n">temp_df</span> <span class="o">=</span> <span class="n">purchase_cvr_by_country_df</span>  
<span class="n">temp_df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span>  
    <span class="p">(</span><span class="n">temp_df</span><span class="p">[</span><span class="sh">'</span><span class="s">country</span><span class="sh">'</span><span class="p">]</span> <span class="o">!=</span> <span class="sh">'</span><span class="s">United States</span><span class="sh">'</span><span class="p">),</span>  
    <span class="sh">'</span><span class="s">country</span><span class="sh">'</span>  
<span class="p">]</span> <span class="o">=</span> <span class="sh">'</span><span class="s">Others</span><span class="sh">'</span>  
  
<span class="n">sns</span><span class="p">.</span><span class="nf">barplot</span><span class="p">(</span>  
    <span class="n">data</span> <span class="o">=</span> <span class="n">temp_df</span><span class="p">,</span>  
    <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">country</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">purchase</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">hue</span> <span class="o">=</span> <span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">hue_order</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">],</span>  
    <span class="n">palette</span> <span class="o">=</span> <span class="sh">'</span><span class="s">coolwarm</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">order</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">United States</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Others</span><span class="sh">'</span><span class="p">]</span>      
<span class="p">)</span>  
  
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">'</span><span class="s">Conversion Rate (by Countries)</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">Group</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Country</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Conversion Rate</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="c1"># ARPU  
</span><span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>  
  
<span class="n">temp_df</span> <span class="o">=</span> <span class="n">arpu_by_country_df</span>  
<span class="n">temp_df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span>  
    <span class="p">(</span><span class="n">temp_df</span><span class="p">[</span><span class="sh">'</span><span class="s">country</span><span class="sh">'</span><span class="p">]</span> <span class="o">!=</span> <span class="sh">'</span><span class="s">United States</span><span class="sh">'</span><span class="p">),</span>  
    <span class="sh">'</span><span class="s">country</span><span class="sh">'</span>  
<span class="p">]</span> <span class="o">=</span> <span class="sh">'</span><span class="s">Others</span><span class="sh">'</span>  
  
<span class="n">sns</span><span class="p">.</span><span class="nf">barplot</span><span class="p">(</span>  
    <span class="n">data</span> <span class="o">=</span> <span class="n">temp_df</span><span class="p">,</span>  
    <span class="n">x</span> <span class="o">=</span> <span class="sh">'</span><span class="s">country</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">y</span> <span class="o">=</span> <span class="sh">'</span><span class="s">revenue_usd</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">hue</span> <span class="o">=</span> <span class="sh">'</span><span class="s">test_group</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">hue_order</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">A</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">B</span><span class="sh">'</span><span class="p">],</span>  
    <span class="n">palette</span> <span class="o">=</span> <span class="sh">'</span><span class="s">coolwarm</span><span class="sh">'</span><span class="p">,</span>  
    <span class="n">order</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">United States</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Others</span><span class="sh">'</span><span class="p">]</span>      
<span class="p">)</span>  
  
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">'</span><span class="s">ARPU (by Countries)</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">Group</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Country</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">ARPU (USD)</span><span class="sh">'</span><span class="p">)</span>  
  
<span class="c1"># Display!  
</span><span class="n">plt</span><span class="p">.</span><span class="nf">tight_layout</span><span class="p">()</span>  
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">();</span>
</code></pre></div></div>

<h1 id="5-to-recap">5. To Recap</h1>
<blockquote>
  <p>(Honestly, it’s TL;DR again.😅)</p>
</blockquote>

<p>The dashboard of Google Optimize presents an excessively one-dimensional view when analyzing A/B tests, making it very risky to base service decisions solely on this.</p>

<ul>
  <li>Even if A/B testing may lead to the conclusion of maintaining option A across all user aspects, there can be cases within specific subgroups where the conclusion may favor option B. Unfortunately, Google Optimize does not provide such detailed analysis tools.</li>
  <li>Google Optimize allows for setting a maximum of three goals, which include metrics such as purchase conversion rate and specific button click-through rate. However, to comprehensively examine actions on the following pages or retention rates, it is necessary to consider them all together. Unfortunately, Google Optimize does not provide such functionality.</li>
  <li>There is indeed a valid concern regarding Google Optimize accurately measuring goal achievement if a user executes multiple sessions and makes a purchase in the last session while bypassing the experiment assignment page. It is questionable whether Google Optimize can accurately attribute this conversion as goal achievement.</li>
</ul>

<p>While Google Analytics 4’s Explore feature provides a UI for in-depth analysis of experiment results, it can be quite cumbersome and time-consuming to manually check and explore the results every time.</p>

<p>Therefore, by connecting to BigQuery (where the experiment data is loaded) from Python and creating automated code, the analysis time can be significantly reduced, and it becomes easier to quickly determine the direction for further analysis when needed.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="English" /><category term="Statistics" /><category term="Data Analysis" /><category term="SQL" /><category term="Python" /><category term="BigQuery" /><category term="Data Visualization" /><summary type="html"><![CDATA[By connecting to BigQuery (where the experiment data is loaded) from Python and creating automated code, the analysis time can be significantly reduced, and it becomes easier to quickly determine the direction for further analysis when needed.]]></summary></entry><entry><title type="html">Let’s Create the Sankey Chart</title><link href="http://localhost:4000/sankey-chart/" rel="alternate" type="text/html" title="Let’s Create the Sankey Chart" /><published>2023-05-21T00:00:00+09:00</published><updated>2023-05-21T00:00:00+09:00</updated><id>http://localhost:4000/sankey-chart</id><content type="html" xml:base="http://localhost:4000/sankey-chart/"><![CDATA[<blockquote>
  <p>In this article, I’m going to tell you how you can create the Sankey Chart starting from GA4, BigQuery, and up to Redash.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Introduction</li>
  <li><strong>Flatten</strong> the source table.</li>
  <li>Make sure each <strong>user</strong> and <strong>session</strong> has the same properties(or parameters).</li>
  <li>Delete the consecutive same <strong>page URL duplicates</strong> in the same <code class="language-plaintext highlighter-rouge">session_id</code>.</li>
  <li>Label each page’s <strong>visiting order number</strong> for each session.</li>
  <li><strong>Categorize</strong> all the pages.</li>
  <li>Pivot each session’s journey up to <strong>10 steps</strong>.</li>
  <li>Make the query result compatible with <strong>Redash</strong>.</li>
  <li>Final Result</li>
  <li>Conclusion</li>
</ol>

<hr />

<p><img src="/assets/2023-05-21-sankey-chart/Data Pipeline from the website all the way up to Redash.webp" alt="" /></p>
<blockquote>
  <p>Data Pipeline from the website all the way up to Redash</p>
</blockquote>

<h1 id="1-introduction">1. Introduction</h1>

<h2 id="11-what-is-sankey-chart">1.1. What is Sankey Chart?</h2>

<p><img src="/assets/2023-05-21-sankey-chart/Sankey-Diagram.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.originlab.com/doc/Origin-Help/Sankey-Diagram">Source</a></p>
</blockquote>

<p><strong>Sankey Chart</strong>, oftentimes also called Sankey Diagram, is a type of flow visualization in which the width of the arrows is proportional to the flow rate of the depicted extensive property. [<a href="https://en.wikipedia.org/wiki/Sankey_diagram">Wikipedia</a>]</p>

<h2 id="12-why-is-sankey-chart-important-in-data-analytics">1.2. Why is Sankey Chart Important in Data Analytics?</h2>

<p>In the Data Analytics world, though, we can figure out how our visitors make their journey throughout our website pages or app screens. With the Sankey Chart, we can apply <strong>our strategies</strong> as shown below.</p>
<ul>
  <li>“Many purchasing visitors mainly make a journey starting from <code class="language-plaintext highlighter-rouge">page A</code>, <code class="language-plaintext highlighter-rouge">page B</code>, <code class="language-plaintext highlighter-rouge">page C</code>, and finally make their purchase. Therefore, we might be able to create a CTA button in order to drive the other visitors to this journey, so that we could make our revenue much higher.”</li>
  <li>“<code class="language-plaintext highlighter-rouge">Page A</code> and <code class="language-plaintext highlighter-rouge">Page B</code> are the points where our visitors bounce off the most. Bet those two pages have some problems in terms of psychology or technology. Let’s now dive into specific user interviews or research to deal with this bounce-off rate.”</li>
</ul>

<h2 id="13-limitations-of-google-analytics-4">1.3. Limitations of Google Analytics 4</h2>

<p>Although GA4 supports some custom visualizations and you can explore the path analysis to figure out how your visitors take their journey throughout the websites, it’s literally awful and much of a hassle if you’re eager to get some insights regarding that. (See below how awful it is.)</p>

<p><img src="/assets/2023-05-21-sankey-chart/GA4’s Path Analysis.webp" alt="" /></p>

<p>Now that hopefully you got deeply understood what is the Sankey Chart and why it’s important in product analytics, it’s time to show you <strong>how to create the Sankey Chart from A to Z</strong>. Let’s directly dive into it!</p>

<h1 id="2-flatten-the-source-table">2. Flatten the source table.</h1>

<p>Although it’s really handy to connect the GA4 events to BigQuery, there’s a complicated issue hard to handle; Some of the datatypes imported to BigQuery are <code class="language-plaintext highlighter-rouge">STRUCT</code> type. It’s regarded as an array type, or you can imagine this as a <code class="language-plaintext highlighter-rouge">STRUCT</code> type column that allows each row to have a multiple-dimensional value in it.</p>

<p><img src="/assets/2023-05-21-sankey-chart/address_history.webp" alt="" />
<img src="/assets/2023-05-21-sankey-chart/1. Flatten the Table.webp" alt="" /></p>
<blockquote>
  <p><a href="https://medium.com/google-cloud/how-to-work-with-array-and-structs-in-bigquery-9c0a2ea584a6">Source</a></p>
</blockquote>

<p>You can simply use <code class="language-plaintext highlighter-rouge">UNNEST</code> to flatten each <code class="language-plaintext highlighter-rouge">STRUCT</code> type column in advance of your main query.</p>

<h2 id="21-the-entire-codes">2.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_flattened</span> <span class="k">AS</span> <span class="p">(</span>
	<span class="k">SELECT</span>
		<span class="n">event_date</span><span class="p">,</span>
		<span class="n">event_timestamp</span><span class="p">,</span>
		<span class="n">user_pseudo_id</span><span class="p">,</span>
		<span class="n">ga_session_id</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">session_id</span><span class="p">,</span>
		<span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">session_number</span><span class="p">,</span>
		<span class="n">event_name</span><span class="p">,</span>
		<span class="n">page_location</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
		<span class="n">ecommerce</span><span class="p">.</span><span class="n">purchase_revenue_in_usd</span> <span class="k">AS</span> <span class="n">revenue_usd</span><span class="p">,</span>
		<span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>
		<span class="n">device</span><span class="p">.</span><span class="n">category</span> <span class="k">AS</span> <span class="n">device</span><span class="p">,</span>
		<span class="n">utm_campaign</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">utm_campaign</span><span class="p">,</span>  
		<span class="n">utm_medium</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">utm_medium</span><span class="p">,</span>  
		<span class="n">utm_source</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">utm_source</span><span class="p">,</span>  
		<span class="n">page_referrer</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">page_referrer</span>  
	<span class="k">FROM</span>
		<span class="nv">`your_table.events_*`</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span>
		<span class="k">ON</span> <span class="n">ga_session_id</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_id'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span>
		<span class="k">ON</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span>
		<span class="k">ON</span> <span class="n">page_location</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_campaign</span>
		<span class="k">ON</span> <span class="n">utm_campaign</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'campaign'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_medium</span>
		<span class="k">ON</span> <span class="n">utm_medium</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'medium'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_source</span>
		<span class="k">ON</span> <span class="n">utm_source</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'source'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span>
		<span class="k">ON</span> <span class="n">page_referrer</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'page_referrer'</span>  
	<span class="k">WHERE</span>  
		<span class="n">_table_suffix</span> <span class="k">BETWEEN</span>
		<span class="n">FORMAT_DATE</span><span class="p">(</span>
			<span class="s1">'%Y%m%d'</span><span class="p">,</span>
			<span class="n">DATE_SUB</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="mi">90</span> <span class="k">DAY</span><span class="p">)</span>
		<span class="p">)</span>
		<span class="k">AND</span>
		<span class="n">FORMAT_DATE</span><span class="p">(</span>
			<span class="s1">'%Y%m%d'</span><span class="p">,</span>
			<span class="k">CURRENT_DATE</span><span class="p">()</span>
		<span class="p">)</span>
		<span class="k">AND</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="o">=</span> <span class="mi">1</span>  
		<span class="k">AND</span> <span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
		<span class="k">AND</span> <span class="n">ga_session_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>
</code></pre></div></div>

<h2 id="22-detailed-explanation-of-key-codes">2.2. Detailed Explanation of Key Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span>
	<span class="k">ON</span> <span class="n">ga_session_id</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">ga_session_id</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Each <code class="language-plaintext highlighter-rouge">event</code> may have <code class="language-plaintext highlighter-rouge">ga_session_id</code> in its parameters, and we have to grab it in order to follow through each user session’s journey based on the <code class="language-plaintext highlighter-rouge">ga_session_id</code>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span>
	<span class="k">ON</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">ga_session_number</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Each <code class="language-plaintext highlighter-rouge">event</code> may have <code class="language-plaintext highlighter-rouge">ga_session_number</code> in its parameters, and we have to look through it in order to know if each <code class="language-plaintext highlighter-rouge">session</code> is the <strong>first visiting user’s</strong> or <strong>returning user’s</strong> session.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span>
	<span class="k">ON</span> <span class="n">page_location</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">page_location</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Most of each <code class="language-plaintext highlighter-rouge">event</code> has <code class="language-plaintext highlighter-rouge">page_location</code> in its parameters, and of course, we have to know <code class="language-plaintext highlighter-rouge">page_location</code> in order to follow through with their journey based on the <strong>page URL</strong>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_campaign</span>
	<span class="k">ON</span> <span class="n">utm_campaign</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">campaign</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on what kind of <strong>campaign channel</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">utm_campaign</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_medium</span>
	<span class="k">ON</span> <span class="n">utm_medium</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">medium</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on what kind of <strong>medium channel</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">utm_medium</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_source</span>
	<span class="k">ON</span> <span class="n">utm_source</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="k">source</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on what kind of <strong>source channel</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">utm_source</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span>
	<span class="k">ON</span> <span class="n">page_referrer</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">page_referrer</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on exactly what <strong>previous page URL</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">page_referrer</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">AND</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="o">=</span> <span class="mi">1</span>  
<span class="k">AND</span> <span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="k">AND</span> <span class="n">ga_session_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
</code></pre></div></div>
<ul>
  <li>Here, I wanted to know specifically about the <strong>first visiting users’ journey</strong>, and that’s why I try to query with <code class="language-plaintext highlighter-rouge">ga_session_number</code> only as <code class="language-plaintext highlighter-rouge">1</code>.</li>
  <li>We basically have to track the <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> and <code class="language-plaintext highlighter-rouge">ga_session_id</code> in order to <strong>make sure each user journey has been there from the same user and same session</strong>. That’s why I dropped all the missing <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> and <code class="language-plaintext highlighter-rouge">ga_session_id</code> instances.</li>
</ul>

<h1 id="3-make-sure-each-user-and-session-has-the-same-propertiesor-parameters">3. Make sure each user and session has the same properties(or parameters).</h1>

<p>Sometimes, even though it’s rooted in the same <code class="language-plaintext highlighter-rouge">session_id</code>, some events have their parameters fully, but others don’t. That’s why we make duplicates for the parameters throughout the same <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> and <code class="language-plaintext highlighter-rouge">session_id</code>.</p>

<p><img src="/assets/2023-05-21-sankey-chart/ This is a real BigQuery table appended from GA4, and look only one event has the medium value.webp" alt="" /></p>
<blockquote>
  <p>This is a real <strong>BigQuery</strong> table appended from GA4, and you can look only one event has the medium value.</p>
</blockquote>

<h2 id="31-the-entire-codes">3.1. The Entire Codes</h2>

<p>You can use <code class="language-plaintext highlighter-rouge">FIRST_VALUE</code> and <code class="language-plaintext highlighter-rouge">LAST_VALUE</code> functions to make the duplicates.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_properties_spread</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span>
        <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>
        <span class="n">session_id</span><span class="p">,</span>
        <span class="n">session_number</span><span class="p">,</span>  
        <span class="n">event_name</span><span class="p">,</span> 
        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
	        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
		        <span class="k">LOWER</span><span class="p">(</span><span class="n">page_location</span><span class="p">),</span> 
		        <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span>
	        <span class="p">),</span>
	        <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
        <span class="n">revenue_usd</span><span class="p">,</span>  
        <span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">country</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>  
        <span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">device</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">utm_campaign</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">utm_campaign</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">utm_medium</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">utm_medium</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">utm_source</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">utm_source</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span>
	        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
		        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
			        <span class="k">LOWER</span><span class="p">(</span><span class="n">page_referrer</span><span class="p">),</span> 
			        <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span>
		        <span class="p">),</span> 
		        <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span>
	        <span class="p">)</span>
        <span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span> 
<span class="p">),</span>
</code></pre></div></div>

<h2 id="32-detailed-explanation-of-key-codes">3.2. Detailed Explanation of Key Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">REGEXP_REPLACE</span><span class="p">(</span>
	<span class="n">REGEXP_REPLACE</span><span class="p">(</span>
		<span class="k">LOWER</span><span class="p">(</span><span class="n">page_location</span><span class="p">),</span> 
		<span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span>
	<span class="p">),</span>
	<span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span>
<span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
</code></pre></div></div>
<ul>
  <li>Many times, the <strong>page URL</strong> has different shapes even though it drives the visitors to the exact same page.</li>
  <li>The four URLs below have different values, but they direct you to the same Google main page anyways.
    <ul>
      <li><a href="https://google.com/">https://google.com</a></li>
      <li><a href="https://google.com/">https://google.com/</a></li>
      <li><a href="https://google.com?utm_source=medium">https://google.com?utm_source=medium</a></li>
      <li><a href="https://google.com/?utm_source=medium">https://google.com/?utm_source=medium</a></li>
    </ul>
  </li>
  <li>That’s why I use the <code class="language-plaintext highlighter-rouge">REGEXP_REPLACE</code> function to <strong>drop the useless letters</strong> in data analytics.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">country</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	<span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	<span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
<span class="p">)</span> <span class="k">AS</span> <span class="n">country</span>
</code></pre></div></div>
<ul>
  <li>Because of some technical problems, one user and session might have multiple countries. (I’m guessing some users might have moved overseas, changed IP Address through VPNs, or GA4’s tech issue itself.) Regarding this issue, I would make a decision to <strong>grab the very first country value</strong> to know where the <code class="language-plaintext highlighter-rouge">user</code> and <code class="language-plaintext highlighter-rouge">session</code> have started.</li>
  <li>Let’s assume a visitor is aboard a plane, and when he/she starts the session the plane is located in the <strong>US</strong>, but when visiting the following page, the plane has just entered the <strong>Canada</strong> area. In this extreme case, we’d rather think of this visitor as starting from the <strong>US</strong>.</li>
</ul>

<h1 id="4-delete-the-consecutive-same-page-url-duplicates-in-the-same-session_id">4. Delete the consecutive same page URL duplicates in the same <code class="language-plaintext highlighter-rouge">session_id</code>.</h1>

<p>In most cases, if a visitor lands on page A, multiple events can happen.</p>
<ul>
  <li>i.e., <code class="language-plaintext highlighter-rouge">session_start</code>, <code class="language-plaintext highlighter-rouge">page_view</code>, <code class="language-plaintext highlighter-rouge">user_engagement</code>, <code class="language-plaintext highlighter-rouge">scroll</code>, and whatnot</li>
</ul>

<p>We need to delete all the same Page URLs triggered consecutively in one session, but <strong>only with the unique page URL</strong>.</p>

<h2 id="41-the-entire-codes">4.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_unique_pages</span> <span class="k">AS</span> <span class="p">(</span>
	<span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">session_number</span><span class="p">,</span>  
        <span class="n">event_name</span><span class="p">,</span>  
        <span class="n">page_location</span><span class="p">,</span>          
        <span class="n">LAG</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">previous_page_location</span><span class="p">,</span>  
        <span class="n">LEAD</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">next_page_location</span><span class="p">,</span>  
        <span class="n">revenue_usd</span><span class="p">,</span>  
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>      
    <span class="k">FROM</span> <span class="p">(</span>  
        <span class="k">SELECT</span>  
            <span class="o">*</span><span class="p">,</span>  
            <span class="k">CASE</span>  
	            <span class="k">WHEN</span> <span class="c1">-- Previous URL IS NULL  </span>
                    <span class="n">previous_page_location</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'remain'</span>  
                <span class="k">WHEN</span> <span class="c1">-- Previous URL &lt;&gt; Current URL  </span>
                    <span class="n">previous_page_location</span> <span class="o">&lt;&gt;</span> <span class="n">page_location</span> <span class="k">THEN</span> <span class="s1">'remain'</span>  
                <span class="k">WHEN</span> <span class="c1">-- Previous URL = Current URL  </span>
                    <span class="n">previous_page_location</span> <span class="o">=</span> <span class="n">page_location</span> 
                    <span class="k">AND</span> <span class="n">page_location</span> <span class="o">&lt;&gt;</span> <span class="n">next_page_location</span> <span class="k">THEN</span> <span class="s1">'del'</span>  
            <span class="k">END</span> <span class="k">AS</span> <span class="n">remain_or_del</span>  
        <span class="k">FROM</span> <span class="p">(</span>  
            <span class="k">SELECT</span>  
                <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
                <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">session_number</span><span class="p">,</span>  
                <span class="n">event_name</span><span class="p">,</span>
                <span class="n">page_location</span><span class="p">,</span>          
                <span class="n">LAG</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	                <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	                <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="k">AS</span> <span class="n">previous_page_location</span><span class="p">,</span>  
                <span class="n">LEAD</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	                <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	                <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="k">AS</span> <span class="n">next_page_location</span><span class="p">,</span>  
                <span class="n">revenue_usd</span><span class="p">,</span>  
                <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
                <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
            <span class="k">FROM</span> <span class="n">CTE_properties_spread</span>  
        <span class="p">)</span>  
    <span class="p">)</span>  
    <span class="k">WHERE</span>
	    <span class="n">remain_or_del</span> <span class="o">=</span> <span class="s1">'remain'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">event_timestamp</span>  
<span class="p">),</span>
</code></pre></div></div>

<p>Here in the query above, I used <code class="language-plaintext highlighter-rouge">LAG</code> and <code class="language-plaintext highlighter-rouge">LEAD</code> window functions <strong>to know whether to delete duplicates</strong> based on the previous page URL and the next page URL.</p>

<h1 id="5-label-each-pages-visiting-order-number-for-each-session">5. Label each page’s visiting order number for each session.</h1>

<p>We can Label <code class="language-plaintext highlighter-rouge">visit_order</code> for each page URL based on the <code class="language-plaintext highlighter-rouge">event_timestamp</code> <strong>in ascending order</strong>.</p>
<ul>
  <li>Here, I used the <code class="language-plaintext highlighter-rouge">ROW_NUMBER</code> window function to do it.</li>
</ul>

<h2 id="51-the-entire-codes">5.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_visit_orders</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span>  
        <span class="n">page_location</span><span class="p">,</span>
        <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">visit_order</span><span class="p">,</span>  
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_unique_pages</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">visit_order</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="6-categorize-all-the-pages">6. Categorize all the pages.</h1>

<p>The page URL itself looks dirty since it’s not that human-readable, so here I wanted to <strong>categorize all the pages</strong> existing in the whole domain to <strong>make them literally human-readable</strong>.</p>

<h2 id="61-the-entire-codes">6.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_page_groups</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span>  
        <span class="n">page_location</span><span class="p">,</span>   
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com'</span> <span class="k">THEN</span> <span class="s1">'Google Home'</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com/joshua'</span> <span class="k">THEN</span> <span class="s1">'Joshua Intro'</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com/andrew'</span> <span class="k">THEN</span> <span class="s1">'Andrew Intro'</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com/amber'</span> <span class="k">THEN</span> <span class="s1">'Amber Intro'</span>  
            <span class="k">WHEN</span> <span class="n">CONTAINS_SUBSTR</span><span class="p">(</span><span class="n">page_location</span><span class="p">,</span> <span class="s1">'https://google.com/policy'</span><span class="p">)</span> <span class="o">=</span> <span class="k">True</span> <span class="k">THEN</span> <span class="s1">'Policy Pages'</span>  
            <span class="k">WHEN</span> <span class="n">CONTAINS_SUBSTR</span><span class="p">(</span><span class="n">page_location</span><span class="p">,</span> <span class="s1">'https://google.com/events'</span><span class="p">)</span> <span class="o">=</span> <span class="k">True</span> <span class="k">THEN</span> <span class="s1">'Event Pages'</span>  
            <span class="k">ELSE</span> <span class="s1">'ETC'</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">page_group</span><span class="p">,</span>  
        <span class="n">visit_order</span><span class="p">,</span>  
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_visit_orders</span>
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">visit_order</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="7-pivot-each-sessions-journey-up-to-10-steps">7. Pivot each session’s journey up to 10 steps.</h1>

<h2 id="71-the-entire-codes">7.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_journeys</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span>
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> 
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">1</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step01</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">2</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step02</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">3</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step03</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">4</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step04</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">5</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step05</span><span class="p">,</span>          
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">6</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step06</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">7</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step07</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">8</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step08</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">9</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step09</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">10</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step10</span>  
    <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> 
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> 
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">step01</span><span class="p">,</span> <span class="n">step02</span><span class="p">,</span> <span class="n">step03</span><span class="p">,</span> <span class="n">step04</span><span class="p">,</span> <span class="n">step05</span><span class="p">,</span> 
        <span class="n">step06</span><span class="p">,</span> <span class="n">step07</span><span class="p">,</span> <span class="n">step08</span><span class="p">,</span> <span class="n">step09</span><span class="p">,</span> <span class="n">step10</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="8-make-the-query-result-compatible-with-redash">8. Make the query result compatible with Redash.</h1>

<p>Since <strong>Redash Sankey Chart</strong> has its expected framework and naming rules of the query result, we need to make the final query result in order to fit the rule.</p>

<p><img src="/assets/2023-05-21-sankey-chart/Redash Sankey Visualization’s Constraints.webp" alt="" /></p>
<blockquote>
  <p>Redash Sankey Chart’s Constraints</p>
</blockquote>

<h2 id="81-the-entire-codes">8.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="n">step01</span> <span class="k">AS</span> <span class="n">stage1</span><span class="p">,</span>
    <span class="n">step02</span> <span class="k">AS</span> <span class="n">stage2</span><span class="p">,</span> 
    <span class="n">step03</span> <span class="k">AS</span> <span class="n">stage3</span><span class="p">,</span> 
    <span class="n">step04</span> <span class="k">AS</span> <span class="n">stage4</span><span class="p">,</span> 
    <span class="n">step05</span> <span class="k">AS</span> <span class="n">stage5</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value</span>  
<span class="k">FROM</span> 
	<span class="n">CTE_sankey</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="n">step01</span><span class="p">,</span> <span class="n">step02</span><span class="p">,</span> <span class="n">step03</span><span class="p">,</span> <span class="n">step04</span><span class="p">,</span> <span class="n">step05</span>  
<span class="k">HAVING</span> 
	<span class="n">step01</span> <span class="o">=</span> <span class="s1">'Google Home'</span> 
	<span class="k">AND</span> <span class="n">value</span> <span class="o">&gt;=</span> <span class="mi">100</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">value</span> <span class="k">DESC</span>
<span class="p">;</span>
</code></pre></div></div>

<h2 id="82-detailed-explanation-of-key-codes">8.2. Detailed Explanation of Key Codes</h2>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">HAVING</span>
	<span class="n">step01</span> <span class="o">=</span> <span class="err">‘</span><span class="n">Google</span> <span class="n">Home</span><span class="err">’</span> 
	<span class="k">AND</span> <span class="n">value</span> <span class="o">&gt;=</span> <span class="mi">100</span>
</code></pre></div></div>

<ul>
  <li>I just wanted to see how the users make their journey who is <strong>starting from Google Home</strong>.</li>
  <li>To make the visualization look simple and not distracting, I ordered the query to show me <strong>the types of user journeys of at least 100 users</strong>.</li>
</ul>

<h1 id="9-final-result">9. Final Result</h1>

<p><img src="/assets/2023-05-21-sankey-chart/Redash returns this kind of Sankey Chart.webp" alt="" /></p>
<blockquote>
  <p>Redash returns this kind of Sankey Chart.</p>
</blockquote>

<h1 id="10-conclusion">10. Conclusion</h1>

<ul>
  <li><strong>Redash Sankey Chart</strong> is much more valuable specifically when you try to figure out how the users make their journey depending on their countries, devices, UTM parameters, referrer pages, and stuff like that.</li>
  <li>It’s superbly complicated to query, but once you make the whole framework queries to return the Sankey table, I believe you can generate more value to do as many actions as possible which wouldn’t have been possible to do before.</li>
  <li>Nevertheless, <strong>Redash Sankey Chart</strong> only supports up to <code class="language-plaintext highlighter-rouge">5 steps</code>, which by that means if your website or app has too many pages and screens, it wouldn’t be enough to look through only 5 steps.</li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="English" /><category term="SQL" /><category term="BigQuery" /><category term="Redash" /><category term="Data Visualization" /><summary type="html"><![CDATA[In this article, I’m going to tell you how you can create the Sankey Chart starting from GA4, BigQuery, and up to Redash.]]></summary></entry></feed>