<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-12-13T15:06:17+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Joshua Kim</title><subtitle>Data Analyst</subtitle><entry><title type="html">데이터 분석가의 SQL 최적화 일기: Static vs. Rolling Stickiness</title><link href="http://localhost:4000/static-vs-rolling-stickiness/" rel="alternate" type="text/html" title="데이터 분석가의 SQL 최적화 일기: Static vs. Rolling Stickiness" /><published>2023-11-19T00:00:00+09:00</published><updated>2023-11-19T00:00:00+09:00</updated><id>http://localhost:4000/static-vs-rolling-stickiness</id><content type="html" xml:base="http://localhost:4000/static-vs-rolling-stickiness/"><![CDATA[<blockquote>
  <p>대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, Stickiness 지표 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>들어가는 글</li>
  <li>Rolling MAU vs. 30일 이동평균선</li>
  <li>Static MAU</li>
  <li>Stickiness 지표</li>
  <li>Rolling Stickiness</li>
  <li>Static Stickiness</li>
  <li>Data Mart를 통해 Rolling MAU 도입하기</li>
  <li>결론: Query Cost vs Data Freshness</li>
</ol>

<hr />

<h3 id="disclaimer">DISCLAIMER</h3>
<blockquote>
  <p>본 자료는 작성자 본인의 견해일 뿐이며, 실제 데이터베이스의 환경에 따라 적합하지 않을 수 있습니다. 이미지 출처를 제외한 모든 쿼리문과 내용은 본인의 경험에 의해 작성되었습니다. 작성된 쿼리문은 샘플로 작성한 것이며, 본인의 과거 및 현재 재직 회사의 업무 현황과 무관합니다.</p>
</blockquote>

<h1 id="1-들어가는-글">1. 들어가는 글</h1>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/unfinished-work.webp" alt="" /></p>
<blockquote>
  <p><a href="https://datasciencedojo.com/blog/data-science-memes/">Source</a></p>
</blockquote>

<p>안녕하세요. 저는 위 아이 처럼 데이터 분석가로 근무하고 있는 Joshua라고 합니다.</p>

<p>저는 일반적인 B2C 기업에서 데이터 분석가로 근무하며, GA4, Amplitude, BigQuery, Redash 등을 활용하여 A/B 테스트, 지표 모니터링 등을 수행하며 회사의 등대 역할을 하며 지냈습니다. 다른 분들과 비슷한 역할을 수행했던 것이죠.</p>

<p>또한 GA4, Amplitude 등과 같은 B2B 데이터 분석 플랫폼 서비스를 만드는 경험도 살짝 했는데요. 그러다보니 저의 R&amp;R은 서비스 자체의 데이터 분석 업무 외에도, 고객들에게 데이터를 서빙하기 위한 데이터 마트 설계와 최적화 업무에 집중되기도 했습니다. 제 타이틀을 멋있게 가공하면 최근에 떠오르는 포지션인 Analytics Engineer, 반쪽 짜리 데이터 엔지니어, 아니면 대충 쿼리 머신 혹은 분지니어(?)인 것 같기도 합니다. 😅</p>

<p>아무튼 대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, Stickiness 지표 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.</p>

<p>(SQL 전문가 분들이 많이 계시는 만큼, 제 글을 비판적으로 고찰해주시면 감사하겠습니다! 😄)</p>

<h1 id="2-rolling-mau-vs-30일-이동평균선">2. Rolling MAU vs. 30일 이동평균선</h1>

<p>Rolling MAU란 마치 30일 이동평균선 인디케이터 등과 유사하게, 각 시점마다 최근 30일 동안의 MAU를 측정하는 지표입니다. 아래 GA4의 리포트는 WAU와 MAU를 모두 Rolling 방식으로 집계하고 있는 대표적인 사례라고 할 수 있을 것 같아서 가져와봤어요!</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/user-activity-over-time.webp" alt="" /></p>
<blockquote>
  <p><a href="https://measureschool.com/ga4-active-users/">Source</a></p>
</blockquote>

<p>하지만, 30일 이동평균선 인디케이터와 Rolling MAU의 연산 방식에는 중대한 차이점이 있습니다.</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/trading-view.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.tradingwithrayner.com/20-30-day-moving-average/">Source</a></p>
</blockquote>

<p>먼저 30일 이동평균선을 SQL스럽게 작성해본다면, 단순히  <code class="language-plaintext highlighter-rouge">AVG Window Functions</code>를 통해 즉각적으로 연산할 수 있습니다. Window Functions는 이미 출력된  <code class="language-plaintext highlighter-rouge">price</code>  칼럼 자체를 통해 연산하므로,  <code class="language-plaintext highlighter-rouge">daily_prices</code>  테이블을 중복으로 불러오지 않아 연산량이 기하급수적으로 증가하지 않습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_ma_30d</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="nb">date</span><span class="p">,</span>
      <span class="n">price</span><span class="p">,</span>
      <span class="k">AVG</span><span class="p">(</span><span class="n">price</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>
         <span class="k">ORDER</span> <span class="k">BY</span> <span class="nb">date</span>
         <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="mi">29</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="k">CURRENT</span> <span class="k">ROW</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">ma_30d</span>
   <span class="k">FROM</span>
      <span class="n">daily_prices</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_ma_30d</span>
<span class="p">;</span>
</code></pre></div></div>

<p>반면, Rolling MAU의 연산 방식은 중대한 문제점이 있습니다. 즉, Window Functions를 통해 연산하는 것이 어렵다는 점입니다. 아래 쿼리문을 살펴보면,  <code class="language-plaintext highlighter-rouge">SELECT Statement</code>  내 서브쿼리를 통해 Outer Table의 각  <code class="language-plaintext highlighter-rouge">date</code>마다 일일이 Inner Table의 가변적인 기간마다 모든  <code class="language-plaintext highlighter-rouge">user_id</code>  고유값 개수를  <code class="language-plaintext highlighter-rouge">COUNT</code>하게 됩니다. 즉,  <code class="language-plaintext highlighter-rouge">session_starts</code>  테이블 내의  <code class="language-plaintext highlighter-rouge">date</code>  고유값 개수가 365개라면, 각  <code class="language-plaintext highlighter-rouge">rolling_mau</code>  칼럼의 값을 계산하기 위해서는 동일한 테이블을 365번이나 메모리에 올려야 하는 것이죠.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_rolling_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="p">(</span>
         <span class="k">SELECT</span>
            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span>
         <span class="k">FROM</span>
            <span class="n">session_starts</span> <span class="n">SUB</span>
         <span class="k">WHERE</span>
            <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span>
            <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span> <span class="o">&lt;=</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span> <span class="n">MAIN</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_rolling_mau</span>
<span class="p">;</span>
</code></pre></div></div>

<p>결국, 30일 이동평균선과 달리 Rolling MAU의 경우 단순한 집계로 가능한 영역이 아니라,  <code class="language-plaintext highlighter-rouge">COUNT(DISTINCT user_id)</code>를 수행하기 위한 테이블 재탐색이 각 Row마다 중복 발생해야 하는 영역입니다. 따라서 이는 쿼리문의 성능과 비용 관리에 매우 부정적인 영향을 끼치게 됩니다.</p>

<h1 id="3-static-mau">3. Static MAU</h1>

<p>Static MAU는 제가 직접 마음대로 지어본 용어인데요. 😅 Rolling MAU에서 겪은 문제점에 대해 다음과 같은 방식으로 타협을 해봤습니다.</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/cat.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.reddit.com/r/ProgrammerHumor/comments/szxooa/the_difference_between_dynamic_vs_static_ip/?rdt=33714">Source</a></p>
</blockquote>

<p><strong>“어쩔 수 없네. 그럼, MAU는 Rolling 방식이 아닌 각 월 별로 Static하게 집계해보자!”</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_static_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="k">month</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">static_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_static_mau</span>
<span class="p">;</span>
</code></pre></div></div>

<p>Static MAU는 Rolling MAU에 비해 다음과 같은 장/단점이 존재할 것 같습니다.</p>
<ul>
  <li><strong>장점</strong>: 쿼리 비용이 크게 절감되고 연산 속도가 빨라집니다.</li>
  <li><strong>단점</strong>: 쿼리가 실행되는 시점 당월의 경우, 월말이 도래하기 전까지는 MAU가 과소평가되어 데이터 분석의 Freshness가 저하됩니다. 즉, 오늘이 1월 2일이라면 1월의 MAU는 1월 1일부터 1월 2일까지만 집계되겠죠.</li>
</ul>

<h1 id="4-stickiness-지표">4. Stickiness 지표</h1>

<p>한편, 흔히 <code class="language-plaintext highlighter-rouge">DAU➗MAU</code>로 표현되는 Stickiness(사용자 고착도)를 측정하는 경우에는 Static과 Rolling 방식 사이의 고민이 더욱 깊어지게 됩니다.</p>

<p>Stickiness 지표는 토스, Instagram, YouTube, TikTok, 블라인드 등 활성 사용자들이 습관적으로 앱에 방문함으로써 광고 노출 효과 등을 극대화해야 하는 서비스에서 매우 중요한 지표입니다. 나쁘게 말하면, 사용자의 중독도를 파악하기 위한 지표인 것이죠. 😂</p>

<p><img src="/assets/2023-11-19-static-vs-rolling-stickiness/facebook.webp" alt="" /></p>
<blockquote>
  <p><a href="https://velog.io/@datarian/retention4">Source</a></p>
</blockquote>

<h1 id="5-rolling-stickiness">5. Rolling Stickiness</h1>

<p>Stickiness도 마찬가지로, Rolling Stickiness와 Static Stickiness로 구분하여 연산할 수 있는데요. (Static Stickiness도 제가 마음대로 지어본 용어입니다.) 먼저 Rolling Stickiness 지표 산출을 위한 쿼리문은 다음과 같습니다.
(참고로, 분모가 0이 되는 케이스의 경우, 0으로 반환되도록  <code class="language-plaintext highlighter-rouge">COALSECE(TRY(…), 0)</code> 함수를 사용했습니다. 혼동이 없으시길 바랄게요! 🙃)</p>

<p>이 경우 Rolling MAU 연산 방식과 마찬가지로, Outer Table의 각  <code class="language-plaintext highlighter-rouge">date</code>마다 일일이 Inner Table의 모든  <code class="language-plaintext highlighter-rouge">user_id</code>  고유값 개수를  <code class="language-plaintext highlighter-rouge">COUNT</code>하게 됩니다. 즉, 메모리 사용량과 트래픽 수준이 급격하게 상승할 것입니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_rolling_stickiness</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="n">COALESCE</span><span class="p">(</span>
         <span class="n">TRY</span><span class="p">(</span>
            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span>
            <span class="o">/</span>
            <span class="p">(</span>
               <span class="k">SELECT</span>
                  <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span>
               <span class="k">FROM</span>
                  <span class="n">session_start</span> <span class="n">SUB</span>
               <span class="k">WHERE</span>
                  <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span>
                  <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="nb">date</span> <span class="o">&lt;=</span> <span class="n">MAIN</span><span class="p">.</span><span class="nb">date</span>
            <span class="p">)</span>
         <span class="p">),</span>
         <span class="mi">0</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_stickiness</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span> <span class="n">MAIN</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_rolling_stickiness</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="6-static-stickiness">6. Static Stickiness</h1>

<p>그러나 Static Stickiness 방식으로 접근할 경우 쿼리문은 다음과 같습니다. DAU와 Static MAU를 Inline View로 먼저 계산한 후, 각 일자 별  <code class="language-plaintext highlighter-rouge">dau</code>를 고정된 월의  <code class="language-plaintext highlighter-rouge">mau</code>로 나누어주는 방식입니다. 이 경우, 쿼리 비용과 연산 속도를 크게 개선할 수 있게 됩니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_dau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="nb">date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">),</span>
<span class="n">CTE_static_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="nb">date</span><span class="p">)</span> <span class="k">AS</span> <span class="k">month</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">static_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">),</span>
<span class="n">CTE_static_stickiness</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">dau</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="n">COALESCE</span><span class="p">(</span>
         <span class="n">TRY</span><span class="p">(</span><span class="n">dau</span><span class="p">.</span><span class="n">dau</span> <span class="o">/</span> <span class="n">static_mau</span><span class="p">.</span><span class="n">static_mau</span><span class="p">),</span>
         <span class="mi">0</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">static_stickiness</span>
   <span class="k">FROM</span>
      <span class="n">dau</span>
   <span class="k">LEFT</span> <span class="k">JOIN</span>
      <span class="n">static_mau</span>
      <span class="k">ON</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'MONTH'</span><span class="p">,</span> <span class="n">dau</span><span class="p">.</span><span class="nb">date</span><span class="p">)</span> <span class="o">=</span> <span class="n">static_mau</span><span class="p">.</span><span class="k">month</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_static_stickiness</span>
<span class="p">;</span>
</code></pre></div></div>

<p>물론, Static Stickiness는 Rolling Stickiness에 비해 다음과 같은 장/단점이 존재합니다.</p>
<ul>
  <li><strong>장점</strong>: 쿼리 비용이 크게 절감되고 연산 속도가 빨라집니다.</li>
  <li><strong>단점</strong>: 당월의 경우, 월말이 도래하기 전까지는 MAU가 과소평가되어 Stickiness가 비정상적으로 높은 값으로 측정됩니다. 즉, 오늘이 1월 1일이라면,  <code class="language-plaintext highlighter-rouge">DAU=MAU</code>  이므로  <code class="language-plaintext highlighter-rouge">Stickiness=100%</code>인 말도 안되는 수치가 대시보드에 표시될 것입니다.😨</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">Stickiness=100%</code>  로 표현되면, 사내 구성원들에게 잘못된 의사결정의 근거를 전달하게 될 위험성이 존재합니다. 따라서, Static Stickiness 방식을 사내에 도입하게 될 경우, 매월 초 자정에만 Appending되도록 하는 스케줄링을 두어야 할 것입니다. 즉, 1월 1일부터 1월 31일까지의 Stickiness 지표는 2월 1일이 되어야만 대시보드에 표현되는 것이죠. 그렇다면, Stickiness 지표는 최대 30일 이상 지연되어 서비스의 신속한 Action Item을 실행하기가 어려워질 것입니다. Stickiness는 Data Freshness가 중요한 지표 중 하나인데도 불구하고 말이죠.</p>

<h1 id="7-data-mart를-통해-rolling-mau-도입하기">7. Data Mart를 통해 Rolling MAU 도입하기</h1>

<p>그러면 대안이 없을까요? 없으면 제가 이 글을 안 썼겠죠.🤭 Data Mart 내에 Incremental Strategy를 적용한 <code class="language-plaintext highlighter-rouge">rolling_mau</code>  테이블 스케줄링을 구축한다면 앞서 언급한 Rolling Stickiness의 치명적인 단점을 개선할 수 있습니다. 가령, 다음과 같이 매일 자정에 Appending되는  <code class="language-plaintext highlighter-rouge">fact_rolling_mau</code>  테이블을 생성한다고 가정해보겠습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">fact_rolling_mau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_mau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">WHERE</span>
      <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">30</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="nb">date</span>
      <span class="k">AND</span> <span class="nb">date</span> <span class="o">&lt;=</span> <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">fact_rolling_mau</span>
<span class="p">;</span>
</code></pre></div></div>

<p>즉 다음과 같이,  <code class="language-plaintext highlighter-rouge">fact_rolling_mau</code>  테이블은 중복 연산 문제를 벗어난 채 매일 새로운  <code class="language-plaintext highlighter-rouge">rolling_mau</code>  값을 업데이트하게 됩니다.</p>

<table>
  <thead>
    <tr>
      <th><strong>date</strong></th>
      <th><strong>rolling_mau</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2023-01-01</td>
      <td>100,000</td>
    </tr>
    <tr>
      <td>2023-01-01</td>
      <td>101,000</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
    </tr>
    <tr>
      <td>2023-01-01</td>
      <td>99,700</td>
    </tr>
    <tr>
      <td>2023-01-01</td>
      <td>110,000</td>
    </tr>
    <tr>
      <td>…</td>
      <td>…</td>
    </tr>
  </tbody>
</table>

<p>이제 이미 생성된  <code class="language-plaintext highlighter-rouge">fact_rolling_mau</code>  테이블을 통해 Rolling Stickiness를 계산하는 쿼리문을 작성하면 다음과 같습니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_dau</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="nb">date</span><span class="p">,</span>
      <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span>
   <span class="k">FROM</span>
      <span class="n">session_starts</span>
   <span class="k">GROUP</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">),</span>
<span class="n">CTE_rolling_stickiness</span> <span class="k">AS</span> <span class="p">(</span>
   <span class="k">SELECT</span>
      <span class="n">dau</span><span class="p">.</span><span class="nb">date</span><span class="p">,</span>
      <span class="n">COALESCE</span><span class="p">(</span>
         <span class="n">TRY</span><span class="p">(</span><span class="n">dau</span><span class="p">.</span><span class="n">dau</span> <span class="o">/</span> <span class="n">fact_rolling_mau</span><span class="p">.</span><span class="n">rolling_mau</span><span class="p">),</span>
         <span class="mi">0</span>
      <span class="p">)</span> <span class="k">AS</span> <span class="n">rolling_stickiness</span>
   <span class="k">FROM</span>
      <span class="n">CTE_dau</span>
   <span class="k">LEFT</span> <span class="k">JOIN</span>
      <span class="n">fact_rolling_mau</span>
      <span class="k">ON</span> <span class="n">dau</span><span class="p">.</span><span class="nb">date</span> <span class="o">=</span> <span class="n">rolling_mau</span><span class="p">.</span><span class="nb">date</span>
   <span class="k">ORDER</span> <span class="k">BY</span>
      <span class="mi">1</span>
<span class="p">)</span>
<span class="k">SELECT</span>
   <span class="o">*</span>
<span class="k">FROM</span>
   <span class="n">CTE_rolling_stickiness</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="8-결론-query-cost-vs-data-freshness">8. 결론: Query Cost vs Data Freshness</h1>

<p>결국 Rolling MAU, Rolling Stickiness 지표에 대한 이야기를 다루다보니 자연스럽게 Data Mart의 필요성으로 귀결되는 것 같습니다. Data Mart는 단순히 쿼리 결과의 정확성이나 일관성만을 위해 필요한 것이 아니라, 이처럼 Query Cost vs Data Freshness 사이의 상충 관계를 극복하기 위해서도 필요하다고 할 수 있습니다. 특히, 서비스의 사용 규모에 따라 소스 테이블의 사이즈가 방대해질수록 Data Mart의 활용은 필수적일 것입니다. 부족한 글을 읽어주셔서 감사합니다!</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="korean" /><category term="data_analytics" /><category term="sql" /><category term="date_warehouse" /><summary type="html"><![CDATA[대고객 서빙을 위해 엄청나게 큰 사이즈의 소스 테이블로부터 최적화된 데이터 마트 설계 고민을 많이 하고 있는 만큼, Stickiness 지표 사례를 중심으로 SQL 성능에 대한 이야기를 들려드리겠습니다.]]></summary></entry><entry><title type="html">Near Protocol: Account Model and Transaction Story</title><link href="http://localhost:4000/near-protocol/" rel="alternate" type="text/html" title="Near Protocol: Account Model and Transaction Story" /><published>2023-11-18T00:00:00+09:00</published><updated>2023-11-18T00:00:00+09:00</updated><id>http://localhost:4000/near-protocol</id><content type="html" xml:base="http://localhost:4000/near-protocol/"><![CDATA[<blockquote>
  <p>Dive into the intricate world of blockchain with Joshua. Uncover the complexities of Near Protocol’s account model, transaction stories, and personal insights. This article offers a captivating exploration of addresses, private keys, and the execution flow of transactions, providing a unique perspective on user experience and protocol design. Join me on this insightful journey, backed by personal research and a wealth of references from the blockchain realm.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Account Model Story
    <ul>
      <li>1.1. Addresses</li>
      <li>1.2. Private Keys</li>
      <li>1.3. A Sample UX Case</li>
    </ul>
  </li>
  <li>Transaction Story
    <ul>
      <li>2.1. Transactions</li>
      <li>2.2. Actions</li>
      <li>2.3. Receipts</li>
      <li>2.4. A Sample Transactions Case</li>
    </ul>
  </li>
  <li>Personal Thoughts</li>
  <li>References</li>
</ol>

<hr />

<h3 id="disclaimer">DISCLAIMER</h3>
<blockquote>
  <p>This material is based on personal research and study; therefore, it may contain factual errors and cannot be relied upon for critical decision-making. Additionally, the opinions in the material are purely subjective and have no connection to any past or current companies that I have worked at.</p>
</blockquote>

<h1 id="1-account-model-story">1. Account Model Story</h1>

<p><img src="/assets/2023-11-18-near-protocol/account-model-story.webp" alt="" /></p>
<blockquote>
  <p><a href="https://docs.near.org/concepts/basics/accounts/model">Source</a></p>
</blockquote>

<h2 id="11-addresses">1.1. Addresses</h2>

<h3 id="there-are-two-types-of-accounts">There are Two Types of Accounts.</h3>

<p><strong>1. Named Account</strong></p>
<ul>
  <li>i.e.,  <code class="language-plaintext highlighter-rouge">alice.near</code>,  <code class="language-plaintext highlighter-rouge">bob.near</code>,  <code class="language-plaintext highlighter-rouge">usa.near</code>,  <code class="language-plaintext highlighter-rouge">texas.usa.near</code></li>
  <li>Formatically Same as DNS</li>
  <li>🙆🏻‍♂️  <code class="language-plaintext highlighter-rouge">usa.near</code>  →  <code class="language-plaintext highlighter-rouge">texas.usa.near</code>  can be created.</li>
  <li>🙅🏻‍♂️  <code class="language-plaintext highlighter-rouge">usa.near</code>  →  <code class="language-plaintext highlighter-rouge">texas.uk.near</code>  can NOT be created.</li>
</ul>

<p><strong>2. Implicit Account</strong></p>
<ul>
  <li>i.e.,  <code class="language-plaintext highlighter-rouge">98793cd91a3f870fb126f662858[...]</code></li>
  <li>Formatically Similar to the Traditional Way to Create Addresses such as Bitcoin and Ethereum (64 letters)</li>
</ul>

<h3 id="personal-thoughts">Personal Thoughts</h3>

<p><strong>1. Named Account</strong></p>
<ul>
  <li>Improves the end-user UX of the product because it’s easy to memorize!</li>
  <li>While ENS is executed at the  <strong>contract layer</strong>, Near’s Named Account is executed at the  <strong>protocol layer</strong>.</li>
</ul>

<p><strong>2. Implicit Account</strong></p>
<ul>
  <li>For user groups that want to maintain pseudonymization!</li>
  <li>For developers accustomed to traditional address systems, especially hardware wallet service companies</li>
</ul>

<h2 id="12-private-keys">1.2. Private Keys</h2>

<h3 id="there-are-two-types-of-private-keys">There are Two Types of Private Keys.</h3>

<p><img src="/assets/2023-11-18-near-protocol/private-keys.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.vitalpoint.ai/understanding-near-keys/">Source</a></p>
</blockquote>

<p><strong>1. Full Access Key</strong></p>
<blockquote>
  <p><strong>The address can be used to sign transactions of all types.</strong></p>
</blockquote>

<ul>
  <li>The 8 Types of Transactions (<code class="language-plaintext highlighter-rouge">Transaction Actions</code>)
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Transfer</span><span class="p">,</span> <span class="c1"># Transfer Tokens  
</span><span class="n">CreateAccount</span><span class="p">,</span> <span class="c1"># Create Accounts  
</span><span class="n">DeleteAccount</span><span class="p">,</span> <span class="c1"># Delete Accounts  
</span><span class="n">DeployContract</span><span class="p">,</span> <span class="c1"># Deploy Contracts  
</span><span class="n">FunctionCall</span><span class="p">,</span> <span class="c1"># Call Functions of Contracts  
</span><span class="n">Stake</span><span class="p">,</span> <span class="c1"># Staking  
</span><span class="n">AddKey</span><span class="p">,</span> <span class="c1"># Add Keys  
</span><span class="n">DeleteKey</span> <span class="c1"># Delete Keys
</span></code></pre></div>    </div>
  </li>
</ul>

<p><strong>2. Function Call Key</strong></p>
<blockquote>
  <p><strong>The address can be used to sign the following restricted transactions.</strong></p>
</blockquote>

<ul>
  <li>Transactions are restricted to  <strong>specific function(s)</strong>  within  <strong>a specific contract</strong>.</li>
  <li>Sending Native Token, $NEAR, is NOT possible.
    <ul>
      <li>Gas Fees can be paid, however.</li>
      <li>Of course, if you set it so that you can’t even pay Gas Fees, only functions related to View methods can be called.</li>
    </ul>
  </li>
  <li>Purpose of Using Function Call Keys
    <ul>
      <li>By passing it to the dApp’s client, creating an environment where the dApp can immediately invoke contract calls with limited permissions.</li>
    </ul>
  </li>
</ul>

<h3 id="parameters">Parameters</h3>

<p><strong>1. Full Access Key</strong></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pub</span> <span class="kr">enum</span> <span class="nx">AccessKeyPermission</span> <span class="p">{</span>  
    <span class="nc">FunctionCall</span><span class="p">(</span><span class="nx">FunctionCallPermission</span><span class="p">),</span>  
    <span class="nx">FullAccess</span><span class="p">,</span>  
<span class="p">}</span>
</code></pre></div></div>

<p><strong>2. Function Call Key</strong></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pub</span> <span class="nx">struct</span> <span class="nx">FunctionCallPermission</span> <span class="p">{</span>  
    <span class="nx">pub</span> <span class="nx">receiver_id</span><span class="p">:</span> <span class="nx">AccountId</span><span class="p">,</span> <span class="c1">// a Specific Contract  </span>
    <span class="nx">pub</span> <span class="nx">method_names</span><span class="p">:</span> <span class="nx">Vec</span><span class="o">&lt;</span><span class="nb">String</span><span class="o">&gt;</span><span class="p">,</span> <span class="c1">// Specific Functions  </span>
    <span class="nx">pub</span> <span class="nx">allowance</span><span class="p">:</span> <span class="nx">Option</span><span class="o">&lt;</span><span class="nx">Balance</span><span class="o">&gt;</span><span class="p">,</span> <span class="c1">// Max Gas Fee Payment Amount  </span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="locked-account">Locked Account</h3>
<ul>
  <li>Simply remove all keys through the transaction of the  <code class="language-plaintext highlighter-rouge">DeleteKey</code>  action.</li>
  <li>No one will be able to control the account.</li>
  <li>In other words, after deploying the smart contract account itself, it can be made fully decentralized, allowing only internal transactions to occur.</li>
</ul>

<h2 id="13-a-sample-ux-case">1.3. A Sample UX Case</h2>

<h3 id="typical-dapp-transaction-signing-architecture">Typical dApp Transaction Signing Architecture</h3>

<p><img src="/assets/2023-11-18-near-protocol/Typical dApp Transaction Signing Architecture.webp" alt="" /></p>
<blockquote>
  <p><a href="https://docs.near.org/concepts/web3/near">Source</a></p>
</blockquote>

<ul>
  <li>To execute a specific transaction within the dApp, the user must undergo repeated redirection between the wallet and the client.</li>
  <li><strong>Advantage</strong>: Excellent  <strong>security</strong>  as the private key is not exposed to the client.</li>
  <li><strong>Disadvantage</strong>: Repeated redirections can be annoying for  <strong>users</strong>.</li>
</ul>

<h3 id="dapp-transaction-signing-architecture-using-function-call-key">dApp Transaction Signing Architecture Using Function Call Key</h3>
<blockquote>
  <p>It is possible to address the Disadvantage without significantly compromising the Advantage.</p>
</blockquote>

<p><strong>1. Add Key</strong></p>

<p><img src="/assets/2023-11-18-near-protocol/add-key.webp" alt="" /></p>
<blockquote>
  <p><a href="https://docs.near.org/concepts/web3/near">Source</a></p>
</blockquote>

<p><strong>2. Call a Specific Function within a dApp’s Contract</strong></p>

<p><img src="/assets/2023-11-18-near-protocol/call a specific function within a dapps contract.webp" alt="" /></p>
<blockquote>
  <p><a href="https://docs.near.org/concepts/web3/near">Source</a></p>
</blockquote>

<h1 id="2-transaction-story">2. Transaction Story</h1>

<p><strong>Overall Execution Flow of the Transactions</strong></p>

<p><img src="/assets/2023-11-18-near-protocol/transaction-story.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.youtube.com/@NEARProtocol">Source</a></p>
</blockquote>

<p><strong>Important Terms</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Transaction</code></li>
  <li><code class="language-plaintext highlighter-rouge">Action</code></li>
  <li><code class="language-plaintext highlighter-rouge">Receipt</code></li>
</ul>

<h2 id="21-transactions">2.1. Transactions</h2>
<p><strong>A Transaction is:</strong></p>
<ul>
  <li>a set of  <code class="language-plaintext highlighter-rouge">actions</code>  that need to be performed on the receiving account.</li>
  <li>🙅🏻‍♂️ In other words, a transaction is NOT the atomic unit driving state changes in Near Blockchain.</li>
</ul>

<h2 id="22-actions">2.2. Actions</h2>
<p><strong>An Action is:</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">the unit of work</code>  that the virtual machine needs to process through a transaction.</li>
  <li>There are a total of 8 types recognizable by the Near Protocol. (You have already checked them above!)</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Transfer</span><span class="p">,</span> <span class="c1"># Transfer Tokens  
</span><span class="n">CreateAccount</span><span class="p">,</span> <span class="c1"># Create Accounts  
</span><span class="n">DeleteAccount</span><span class="p">,</span> <span class="c1"># Delete Accounts  
</span><span class="n">DeployContract</span><span class="p">,</span> <span class="c1"># Deploy Contracts  
</span><span class="n">FunctionCall</span><span class="p">,</span> <span class="c1"># Call Functions of Contracts  
</span><span class="n">Stake</span><span class="p">,</span> <span class="c1"># Staking  
</span><span class="n">AddKey</span><span class="p">,</span> <span class="c1"># Add Keys  
</span><span class="n">DeleteKey</span> <span class="c1"># Delete Keys
</span></code></pre></div></div>

<h2 id="23-receipts">2.3. Receipts</h2>
<p><strong>A Receipt is:</strong></p>
<ul>
  <li>the smallest unit executed by the virtual machine, in other words,  <code class="language-plaintext highlighter-rouge">the execution object</code>.</li>
</ul>

<h2 id="24-a-sample-transaction-case">2.4. A Sample Transaction Case</h2>

<h3 id="a-randomly-chosen-transaction-case">A Randomly Chosen Transaction Case</h3>

<p><strong>1. A Transaction Sending 0.02 NEAR</strong></p>

<p><img src="/assets/2023-11-18-near-protocol/A Transaction Sending 0.02 NEAR.webp" alt="" /></p>
<blockquote>
  <p><a href="https://nearblocks.io/txns/6aqjvabatzFkvoBzYmnpEZbAfnLbGo6PsUM6WdpUYxmG#">Source</a></p>
</blockquote>

<p><strong>2. Receipt Executions - (1) TRANSFER Action</strong></p>

<p><img src="/assets/2023-11-18-near-protocol/Receipt Executions TRANSFER Action.webp" alt="" /></p>
<blockquote>
  <p><a href="https://nearblocks.io/txns/6aqjvabatzFkvoBzYmnpEZbAfnLbGo6PsUM6WdpUYxmG#">Source</a></p>
</blockquote>

<p><strong>2. Receipt Executions - (2) Receiving a Refund for the difference between Gas Limit and Gas Used</strong></p>

<p><img src="/assets/2023-11-18-near-protocol/Receipt Executions Receiving a Refund for the difference between Gas Limit and Gas Used.webp" alt="" /></p>
<blockquote>
  <p><a href="https://nearblocks.io/txns/6aqjvabatzFkvoBzYmnpEZbAfnLbGo6PsUM6WdpUYxmG#">Source</a></p>
</blockquote>

<h1 id="3-personal-thoughts">3. Personal Thoughts</h1>

<h3 id="1-protocolized-address-system-for-dns">1. Protocolized Address System for DNS</h3>

<p>It seems that the computational burden on nodes has been compromised to become a user-friendly blockchain. (Due to the increased size of dtype…)</p>
<ul>
  <li>Wouldn’t there be a slowdown and an increase in gas fees then?</li>
  <li>It seems that this has been addressed by dividing a block into multiple chunks to create the block.</li>
  <li>Let me study deeper when I have more expertise to check out if there are any potential security drawbacks of this approach. 😁</li>
</ul>

<p><img src="/assets/2023-11-18-near-protocol/nightshade.webp" alt="" /></p>
<blockquote>
  <p><a href="https://near.org/papers/nightshade">Source</a></p>
</blockquote>

<h3 id="2-key-generation-structure-for-dapp-end-user-ux">2. Key Generation Structure for dApp End-User UX</h3>

<p>Of course, in the initial Add Key situation, wallet redirection still occurs, so it may not be possible to completely alleviate user confusion.</p>
<ul>
  <li>🗣️<strong>Picky Users (say, Joshua)</strong>: “Earlier, my signature was required, but why are you executing things now without it?” 😠😡</li>
</ul>

<p><img src="/assets/2023-11-18-near-protocol/add-key.webp" alt="" /></p>
<blockquote>
  <p><a href="https://docs.near.org/concepts/web3/near">Source</a></p>
</blockquote>

<h1 id="4-references">4. References</h1>
<ul>
  <li><strong>Near</strong>  <strong>Whitepaper</strong>:  <a href="https://near.org/papers/nightshade">https://near.org/papers/nightshade</a></li>
  <li><strong>Near Official Docs</strong>:  <a href="https://docs.near.org/">https://docs.near.org</a></li>
  <li><strong>Near Official Dev Docs</strong>:  <a href="https://nomicon.io/">https://nomicon.io</a></li>
  <li><strong>Near Official YouTube Channel</strong>:  <a href="https://www.youtube.com/@NEARProtocol">https://www.youtube.com/@NEARProtocol</a></li>
  <li><strong>Blockchain Explorer (Nearblocks)</strong>:  <a href="https://nearblocks.io/">https://nearblocks.io</a></li>
  <li><strong>Vital Point AI Content</strong>:  <a href="https://www.vitalpoint.ai/understanding-near-keys">https://www.vitalpoint.ai/understanding-near-keys</a></li>
</ul>

<p><img src="/assets/2023-11-18-near-protocol/near-logo.webp" alt="" /></p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="english" /><category term="blockchain" /><summary type="html"><![CDATA[Dive into the intricate world of blockchain with Joshua. Uncover the complexities of Near Protocol’s account model, transaction stories, and personal insights. This article offers a captivating exploration of addresses, private keys, and the execution flow of transactions, providing a unique perspective on user experience and protocol design. Join me on this insightful journey, backed by personal research and a wealth of references from the blockchain realm.]]></summary></entry><entry><title type="html">Intro to Encoding &amp;amp; Decoding Ethereum Contract Functions</title><link href="http://localhost:4000/encoding-and-decoding-ethereum-contract-functions/" rel="alternate" type="text/html" title="Intro to Encoding &amp;amp; Decoding Ethereum Contract Functions" /><published>2023-10-16T00:00:00+09:00</published><updated>2023-10-16T00:00:00+09:00</updated><id>http://localhost:4000/encoding-and-decoding-ethereum-contract-functions</id><content type="html" xml:base="http://localhost:4000/encoding-and-decoding-ethereum-contract-functions/"><![CDATA[<blockquote>
  <p>In this article, I will briefly explore the Ethereum ABI Specification and show you how to decode contract functions when conducting on-chain data analysis. Additionally, I will demonstrate a simple data extraction and analysis case about “Who are the Top 10 Recipients of USDT approve Functions?” using DuneSQL while handling ABIs.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Argument Types Key Content
    <ul>
      <li>1.1. Elementary Types</li>
      <li>1.2. Fixed-size Types</li>
      <li>1.3. Dynamic-size Types</li>
    </ul>
  </li>
  <li>Key Points of Argument Padding to 32 Bytes Rules</li>
  <li>A Contract Example
    <ul>
      <li>3.1. How to Call <code class="language-plaintext highlighter-rouge">baz(uint32 x, bool y)</code></li>
      <li>3.2. How to Call <code class="language-plaintext highlighter-rouge">bar(bytes3[2])</code></li>
      <li>3.3. How to Call <code class="language-plaintext highlighter-rouge">sam(bytes, bool, uint[])</code></li>
    </ul>
  </li>
  <li>Case Study: Who are the Top 10 Recipients of USDT <code class="language-plaintext highlighter-rouge">approve</code> Functions?
    <ul>
      <li>4.1. Function Selector</li>
      <li>4.2. Extract only the transactions that have called the <code class="language-plaintext highlighter-rouge">approve</code> function on the USDT Contract.</li>
      <li>4.3. Extract the first argument value, <code class="language-plaintext highlighter-rouge">address</code>, from the functions.</li>
      <li>4.4. Now, aggregate the number of unique addresses that executed <code class="language-plaintext highlighter-rouge">approve</code> function, grouped by each <code class="language-plaintext highlighter-rouge">approve</code> recipient, over the past week.</li>
      <li>4.5. Label the <code class="language-plaintext highlighter-rouge">approve</code> recipient addresses based on Dune Tables regarding “address labeling”.</li>
      <li>4.6. The Final Query Results</li>
    </ul>
  </li>
  <li>Let’s Conclude!</li>
  <li>References</li>
</ol>

<hr />

<h1 id="1-argument-types-key-content">1. Argument Types Key Content</h1>

<p>Before diving into the Ethereum ABI specification, let’s take a quick look at the argument data types of Ethereum contracts. Ethereum contract functions can have various parameter data types, and among them, I have listed some of the important types and summarize their key characteristics.</p>

<h2 id="11-elementary-types">1.1. Elementary Types</h2>

<p><code class="language-plaintext highlighter-rouge">uint</code></p>
<ul>
  <li>Same as  <code class="language-plaintext highlighter-rouge">uint256</code>,</li>
  <li>which means it should be considered as  <code class="language-plaintext highlighter-rouge">uint256</code>  type during encoding.</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">int</code></p>
<ul>
  <li>Same as  <code class="language-plaintext highlighter-rouge">int256</code>,</li>
  <li>which means it should be considered as  <code class="language-plaintext highlighter-rouge">int256</code>  type during encoding.</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">bool</code></p>
<ul>
  <li>Same as  <code class="language-plaintext highlighter-rouge">uint8</code>,</li>
  <li>which means only 0 or 1 can be assigned to it.</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">bytes{n}</code></p>
<ul>
  <li>Binary type with a length of n bytes (0 &lt; n ≤ 32)</li>
</ul>

<h2 id="12-fixed-size-types">1.2. Fixed-size Types</h2>

<p><code class="language-plaintext highlighter-rouge">{type_name}[{n}]</code></p>
<ul>
  <li>An array with n elements (n ≥ 0)</li>
</ul>

<h2 id="13-dynamic-size-types">1.3. Dynamic-size Types</h2>

<p><code class="language-plaintext highlighter-rouge">bytes</code></p>
<ul>
  <li>Binary type with a dynamic length of bytes</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">string</code></p>
<ul>
  <li>A dynamically sized string (assuming it’s UTF-8 encoded)</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">{type_name}[]</code></p>
<ul>
  <li>An array with a dynamic number of elements</li>
</ul>

<h1 id="2-key-points-of-argument-padding-to-32-bytes-rules">2. Key Points of Argument Padding to 32 Bytes Rules</h1>

<p>When calling Ethereum contract functions, you need to encode each argument and input them concatenated. In this process, there are rules regarding “length.” To avoid confusion, I’ve summarized the key rules for you in advance.</p>

<p><code class="language-plaintext highlighter-rouge">uint{n}</code></p>
<ul>
  <li>Padding with preceding 0 to achieve a length of 32 bytes</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">int{n}</code></p>
<ul>
  <li>Padding with preceding 0 to achieve a length of 32 bytes</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">bytes{n}</code></p>
<ul>
  <li>Padding with trailing 0 to achieve a length of 32 bytes</li>
</ul>

<h1 id="3-a-contract-example">3. A Contract Example</h1>

<p>The following example has been taken from  <a href="https://docs.soliditylang.org/en/develop/abi-spec.html#examples">Contract ABI Specification Docs</a>. Let me explain this in simpler terms.</p>

<p><strong>Given the Contract:</strong></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pragma</span> <span class="nx">solidity</span> <span class="o">^</span><span class="mf">0.4</span><span class="p">.</span><span class="mi">16</span><span class="p">;</span>  
  
<span class="nx">contract</span> <span class="nx">Foo</span> <span class="p">{</span>  
  <span class="kd">function</span> <span class="nf">baz</span><span class="p">(</span><span class="nx">uint32</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">bool</span> <span class="nx">y</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">pure</span> <span class="nf">returns </span><span class="p">(</span><span class="nx">bool</span> <span class="nx">r</span><span class="p">)</span> <span class="p">{</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">&gt;</span> <span class="mi">32</span> <span class="o">||</span> <span class="nx">y</span><span class="p">;</span> <span class="p">}</span>  
  <span class="kd">function</span> <span class="nf">bar</span><span class="p">(</span><span class="nx">bytes3</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="kr">public</span> <span class="nx">pure</span> <span class="p">{}</span>  
  <span class="kd">function</span> <span class="nf">sam</span><span class="p">(</span><span class="nx">bytes</span><span class="p">,</span> <span class="nx">bool</span><span class="p">,</span> <span class="nx">uint</span><span class="p">[])</span> <span class="kr">public</span> <span class="nx">pure</span> <span class="p">{}</span>  
<span class="p">}</span>
</code></pre></div></div>

<h2 id="31-how-to-call-bazuint32-x-bool-y">3.1. How to Call <code class="language-plaintext highlighter-rouge">baz(uint32 x, bool y)</code></h2>

<p>Let’s say you’re calling the function in the format of:  <code class="language-plaintext highlighter-rouge">baz(69, true)</code></p>

<p><strong>Function Selector</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">baz(uint32,bool)</code>  → Keccak-256 Hash
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xcdcd77c0992ec5bbfc459984220f8c45084cc24d9b6efed1fae540db8de801d2</span>
</code></pre></div>    </div>
  </li>
  <li>Slice the left 4 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xcdcd77c0</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>Parameter 1:</strong>  <code class="language-plaintext highlighter-rouge">69</code></p>
<ul>
  <li>Convert it to hexadecimal.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0x45</span>
</code></pre></div>    </div>
  </li>
  <li>Left pad it to a length of 32 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000045</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>Parameter 2:</strong>  <code class="language-plaintext highlighter-rouge">true</code></p>
<ul>
  <li>Convert it to uint8.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">1</span>
</code></pre></div>    </div>
  </li>
  <li>Left pad it to a length of 32 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000001</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>The Final Encoding with Concatenating All</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xcdcd77c0</span> <span class="c1"># Function Selector  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000045</span> <span class="c1"># 69  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000001</span> <span class="c1"># true  
</span>  
<span class="c1"># Concat  
</span><span class="mh">0xdcdcd77c000000000000000000000000000000000000000000000000000000000000000450000000000000000000000000000000000000000000000000000000000000001</span>
</code></pre></div></div>

<h2 id="32-how-to-call-barbytes32">3.2. How to Call <code class="language-plaintext highlighter-rouge">bar(bytes3[2])</code></h2>

<p>Let’s say you’re calling the function in the format of:  <code class="language-plaintext highlighter-rouge">baz("abc", "def")</code></p>

<p><strong>Function Selector</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">bar(bytes3[2])</code>  → Keccak-256 Hash
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xfce353f601a3db60cb33e4b6ef4f91e4465eaf93c292b64fcde1bf4ba6819b6a</span>
</code></pre></div>    </div>
  </li>
  <li>Slice the left 4 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xfce353f6</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>Parameter 1:</strong>  <code class="language-plaintext highlighter-rouge">“abc”</code></p>
<ul>
  <li>Convert it to utf-8 bytes (<a href="https://onlinetools.com/utf8/convert-utf8-to-bytes">String to UTF-8 Bytes Convertor</a>)
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">616263</span>
</code></pre></div>    </div>
  </li>
  <li>Right pad it to a length of 32 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0x6162630000000000000000000000000000000000000000000000000000000000</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>Parameter 2</strong>:  <code class="language-plaintext highlighter-rouge">“def”</code></p>
<ul>
  <li>Convert it to utf-8 bytes (<a href="https://onlinetools.com/utf8/convert-utf8-to-bytes">String to UTF-8 Bytes Convertor</a>)
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">646566</span>
</code></pre></div>    </div>
  </li>
  <li>Right pad it to a length of 32 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0x6465660000000000000000000000000000000000000000000000000000000000</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>The Final Encoding with Concatenating All</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xfce353f6</span> <span class="c1"># Function Selector  
</span><span class="mi">6162630000000000000000000000000000000000000000000000000000000000</span> <span class="c1"># "abc"  
</span><span class="mi">6465660000000000000000000000000000000000000000000000000000000000</span> <span class="c1"># "def"  
</span>  
<span class="c1"># Concat  
</span><span class="mh">0xfce353f661626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000</span>
</code></pre></div></div>

<h2 id="33-how-to-call-sambytes-bool-uint">3.3. How to Call <code class="language-plaintext highlighter-rouge">sam(bytes, bool, uint[])</code></h2>

<p>Let’s say you’re calling the function in the format of:  <code class="language-plaintext highlighter-rouge">sam(“dave”, true, [1, 2, 3])</code></p>

<p><strong>Function Selector</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">sam(bytes,bool,uint256[])</code>  → Keccak-256 Hash</li>
  <li>Note that  <code class="language-plaintext highlighter-rouge">uint</code>  is replaced with its canonical representation  <code class="language-plaintext highlighter-rouge">uint256</code>.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xa5643bf27e2786816613d3eeb0b62650200b5a98766dfcfd4428f296fb56d043</span>
</code></pre></div>    </div>
  </li>
  <li>Slice the left 4 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xa5643bf2</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>Parameters</strong></p>
<ul>
  <li>In the order of: “<strong>iLoc &gt; Len &gt; Value</strong>”</li>
</ul>

<p><img src="/assets/2023-10-16-encoding-and-decoding-ethereum-contract-functions/parameters.webp" alt="" /></p>
<blockquote>
  <p>made by Joshua</p>
</blockquote>

<p><strong>The Final Encoding with Concatenating All</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0xa5643bf2</span> <span class="c1"># Function Selector  
</span>  
<span class="mh">0x0000000000000000000000000000000000000000000000000000000000000060</span> <span class="c1"># 1st Param iLoc : 96 bytes  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000001</span> <span class="c1"># 2nd Param Value : true   
</span><span class="mh">0x00000000000000000000000000000000000000000000000000000000000000a0</span> <span class="c1"># 3rd Param iLoc : 160 bytes  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000004</span> <span class="c1"># 1st Param Len : 4 bytes  
</span><span class="mh">0x6461766500000000000000000000000000000000000000000000000000000000</span> <span class="c1"># 1sst Param Value : "dave"  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000003</span> <span class="c1"># 3rd Params Len : 3 items  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000001</span> <span class="c1"># 3rd Param Value (item 0) : 1  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000002</span> <span class="c1"># 3rd Param Value (item 1) : 2  
</span><span class="mh">0x0000000000000000000000000000000000000000000000000000000000000003</span> <span class="c1"># 3rd Param Value (item 2) : 3  
</span>  
<span class="c1"># Concat  
</span><span class="mh">0xa5643bf20000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000464617665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003</span>
</code></pre></div></div>

<h1 id="4-case-study-who-are-the-top-10-recipients-of-usdt-approve-functions">4. Case Study: Who are the Top 10 Recipients of USDT <code class="language-plaintext highlighter-rouge">approve</code> Functions?</h1>

<p>According to  <a href="https://docs.openzeppelin.com/contracts/2.x/api/token/erc20">ERC-20 Interface</a>, it is possible to delegate the permission to use a specific token (the authority to transfer the token, specifically) to a particular account using the <code class="language-plaintext highlighter-rouge">approve</code> function. This permission is frequently requested, particularly in DeFi platforms. In this case study, I aim to aggregate and analyze the top 10 accounts that people commonly delegate their USDT through <code class="language-plaintext highlighter-rouge">approve</code> function.</p>

<h2 id="41-function-selector">4.1. Function Selector</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">approve(address,uint256)</code>  → Keccak-256 Hash
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0x095ea7b334ae44009aa867bfb386f5c3b4b443ac6f0ee573fa91c4608fbadfba</span>
</code></pre></div>    </div>
  </li>
  <li>Slice the left 4 bytes.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mh">0x095ea7b3</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="42-extract-only-the-transactions-that-have-called-the-approve-function-on-the-usdt-contract">4.2. Extract only the transactions that have called the <code class="language-plaintext highlighter-rouge">approve</code> function on the USDT Contract.</h2>

<ul>
  <li>For more info about <code class="language-plaintext highlighter-rouge">BYTEARRAY_STARTS_WITH</code> Function, click  <a href="https://dune.com/docs/query/DuneSQL-reference/Functions-and-operators/varbinary/#bytearray_starts_with">here</a>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="o">*</span>  
<span class="k">FROM</span>  
    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
<span class="k">WHERE</span>  
    <span class="nv">"to"</span> <span class="o">=</span> <span class="mi">0</span><span class="n">xdAC17F958D2ee523a2206206994597C13D831ec7</span> <span class="c1">-- USDT ERC-20 Contract  </span>
    <span class="k">AND</span> <span class="n">BYTEARRAY_STARTS_WITH</span><span class="p">(</span><span class="k">data</span><span class="p">,</span> <span class="mi">0</span><span class="n">x095ea7b3</span><span class="p">)</span> <span class="c1">-- approve(address,uint256) Function Call</span>
</code></pre></div></div>

<h2 id="43-extract-the-first-argument-value-address-from-the-functions">4.3. Extract the first argument value, <code class="language-plaintext highlighter-rouge">address</code>, from the functions.</h2>

<ul>
  <li>For more info about <code class="language-plaintext highlighter-rouge">BYTEARRAY_SUBSTRING</code> Function, click  <a href="https://dune.com/docs/query/DuneSQL-reference/Functions-and-operators/varbinary/#bytearray_substring">here</a>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="n">BYTEARRAY_SUBSTRING</span><span class="p">(</span>  
        <span class="n">BYTEARRAY_SUBSTRING</span><span class="p">(</span><span class="k">data</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">32</span><span class="p">),</span>  
        <span class="mi">13</span><span class="p">,</span>  
        <span class="mi">20</span>  
    <span class="p">)</span> <span class="k">AS</span> <span class="n">approved_to</span>  
<span class="k">FROM</span>  
    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
<span class="k">WHERE</span>  
    <span class="nv">"to"</span> <span class="o">=</span> <span class="mi">0</span><span class="n">xdAC17F958D2ee523a2206206994597C13D831ec7</span> <span class="c1">-- USDT ERC-20 Contract  </span>
    <span class="k">AND</span> <span class="n">BYTEARRAY_STARTS_WITH</span><span class="p">(</span><span class="k">data</span><span class="p">,</span> <span class="mi">0</span><span class="n">x095ea7b3</span><span class="p">)</span> <span class="c1">-- approve(address,uint256) Function Call</span>
</code></pre></div></div>

<h2 id="44-now-aggregate-the-number-of-unique-addresses-that-executed-approve-function-grouped-by-each-approve-recipient-over-the-past-week">4.4. Now, aggregate the number of unique addresses that executed <code class="language-plaintext highlighter-rouge">approve</code> function, grouped by each <code class="language-plaintext highlighter-rouge">approve</code> recipient, over the past week.</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="n">BYTEARRAY_SUBSTRING</span><span class="p">(</span>  
        <span class="n">BYTEARRAY_SUBSTRING</span><span class="p">(</span><span class="k">data</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">32</span><span class="p">),</span>  
        <span class="mi">13</span><span class="p">,</span>  
        <span class="mi">20</span>  
    <span class="p">)</span> <span class="k">AS</span> <span class="n">approved_to</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="nv">"from"</span><span class="p">)</span> <span class="k">AS</span> <span class="n">approved_from_cnt</span>  
<span class="k">FROM</span>  
    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
<span class="k">WHERE</span>  
    <span class="k">CAST</span><span class="p">(</span><span class="n">block_date</span> <span class="k">AS</span> <span class="nb">DATE</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">7</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="c1">-- Recent 7 Days  </span>
    <span class="k">AND</span> <span class="nv">"to"</span> <span class="o">=</span> <span class="mi">0</span><span class="n">xdAC17F958D2ee523a2206206994597C13D831ec7</span> <span class="c1">-- USDT ERC-20 Contract  </span>
    <span class="k">AND</span> <span class="n">BYTEARRAY_STARTS_WITH</span><span class="p">(</span><span class="k">data</span><span class="p">,</span> <span class="mi">0</span><span class="n">x095ea7b3</span><span class="p">)</span> <span class="c1">-- approve(address,uint256) Function Call  </span>
<span class="k">GROUP</span> <span class="k">BY</span>  
    <span class="mi">1</span>
</code></pre></div></div>

<h2 id="45-label-the-approve-recipient-addresses-based-on-dune-tables-regarding-address-labeling">4.5. Label the <code class="language-plaintext highlighter-rouge">approve</code> recipient addresses based on Dune Tables regarding “address labeling”.</h2>

<ul>
  <li>Looking at the original address values alone does not provide any meaningful information, as y’all know here.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_approves</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">BYTEARRAY_SUBSTRING</span><span class="p">(</span>  
            <span class="n">BYTEARRAY_SUBSTRING</span><span class="p">(</span><span class="k">data</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">32</span><span class="p">),</span>  
            <span class="mi">13</span><span class="p">,</span>  
            <span class="mi">20</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">approved_to</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="nv">"from"</span><span class="p">)</span> <span class="k">AS</span> <span class="n">approved_from_cnt</span>  
    <span class="k">FROM</span>  
        <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="n">block_date</span> <span class="k">AS</span> <span class="nb">DATE</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">7</span><span class="p">,</span> <span class="k">CURRENT_DATE</span><span class="p">)</span> <span class="c1">-- Recent 7 Days  </span>
        <span class="k">AND</span> <span class="nv">"to"</span> <span class="o">=</span> <span class="mi">0</span><span class="n">xdAC17F958D2ee523a2206206994597C13D831ec7</span> <span class="c1">-- USDT ERC-20 Contract  </span>
        <span class="k">AND</span> <span class="n">BYTEARRAY_STARTS_WITH</span><span class="p">(</span><span class="k">data</span><span class="p">,</span> <span class="mi">0</span><span class="n">x095ea7b3</span><span class="p">)</span> <span class="c1">-- approve(address,uint256) Function Call  </span>
    <span class="k">GROUP</span> <span class="k">BY</span>  
        <span class="mi">1</span>  
<span class="p">)</span>  
  
<span class="k">SELECT</span>  
    <span class="n">MAIN</span><span class="p">.</span><span class="n">approved_to</span><span class="p">,</span>  
    <span class="n">COALESCE</span><span class="p">(</span>  
        <span class="n">SUB1</span><span class="p">.</span><span class="n">dex_name</span> <span class="o">||</span> <span class="s1">' - '</span> <span class="o">||</span> <span class="n">SUB1</span><span class="p">.</span><span class="n">distinct_name</span><span class="p">,</span>  
        <span class="n">SUB2</span><span class="p">.</span><span class="n">project</span> <span class="o">||</span> <span class="s1">' - '</span> <span class="o">||</span> <span class="n">SUB2</span><span class="p">.</span><span class="n">project_type</span><span class="p">,</span>  
        <span class="n">SUB3</span><span class="p">.</span><span class="n">bridge_name</span> <span class="o">||</span> <span class="s1">' - '</span> <span class="o">||</span> <span class="n">SUB3</span><span class="p">.</span><span class="n">description</span><span class="p">,</span>  
        <span class="n">SUB4</span><span class="p">.</span><span class="n">cex_name</span> <span class="o">||</span> <span class="s1">' - '</span> <span class="o">||</span> <span class="n">SUB4</span><span class="p">.</span><span class="n">distinct_name</span><span class="p">,</span>  
        <span class="s1">'Unknown'</span>  
    <span class="p">)</span> <span class="k">AS</span> <span class="n">name</span><span class="p">,</span>  
    <span class="n">MAIN</span><span class="p">.</span><span class="n">approved_from_cnt</span> <span class="k">AS</span> <span class="n">addresses_cnt</span>  
<span class="k">FROM</span>  
    <span class="n">CTE_approves</span> <span class="n">MAIN</span>  
<span class="k">LEFT</span> <span class="k">JOIN</span>  
    <span class="n">addresses_ethereum</span><span class="p">.</span><span class="n">dex</span> <span class="n">SUB1</span> <span class="c1">-- DEX named addresses  </span>
    <span class="k">ON</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">approved_to</span> <span class="o">=</span> <span class="n">SUB1</span><span class="p">.</span><span class="n">address</span>  
<span class="k">LEFT</span> <span class="k">JOIN</span>  
    <span class="n">addresses_ethereum</span><span class="p">.</span><span class="n">defi</span> <span class="n">SUB2</span> <span class="c1">-- DeFi named addresses  </span>
    <span class="k">ON</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">approved_to</span> <span class="o">=</span> <span class="n">SUB2</span><span class="p">.</span><span class="n">address</span>  
<span class="k">LEFT</span> <span class="k">JOIN</span>  
    <span class="n">addresses_ethereum</span><span class="p">.</span><span class="n">bridges</span> <span class="n">SUB3</span> <span class="c1">-- Bridge named addresses  </span>
    <span class="k">ON</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">approved_to</span> <span class="o">=</span> <span class="n">SUB3</span><span class="p">.</span><span class="n">address</span>  
<span class="k">LEFT</span> <span class="k">JOIN</span>  
    <span class="n">addresses_ethereum</span><span class="p">.</span><span class="n">cex</span> <span class="n">SUB4</span> <span class="c1">-- CEX named addresses  </span>
    <span class="k">ON</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">approved_to</span> <span class="o">=</span> <span class="n">SUB4</span><span class="p">.</span><span class="n">address</span>  
<span class="k">ORDER</span> <span class="k">BY</span>  
    <span class="mi">3</span> <span class="k">DESC</span>  
<span class="k">LIMIT</span>  
    <span class="mi">10</span>  
<span class="p">;</span>
</code></pre></div></div>

<h2 id="46-the-final-query-results">4.6. The Final Query Results</h2>

<p><img src="/assets/2023-10-16-encoding-and-decoding-ethereum-contract-functions/query-results.webp" alt="" /></p>
<blockquote>
  <p>Dune Analytics</p>
</blockquote>

<h1 id="5-lets-conclude">5. Let’s Conclude!</h1>

<p>So far, we have delved into <strong>the Ethereum’s ABI Specification</strong>, learned how data is encoded when transactions call contract functions, and understood how to extract meaningful insights by decoding specific function names and arguments from Ethereum transactions data.</p>

<p>In fact, Dune Analytics, Etherscan, and many other on-chain data platforms all incorporate these decoding processes internally.</p>

<p>Hopefully this article will serve as an excellent foundation for your future, more detailed and complex on-chain data analysis endeavors.</p>

<h1 id="6-references">6. References</h1>

<ul>
  <li><a href="https://docs.soliditylang.org/en/develop/abi-spec.html#function-selector-and-argument-encoding">Contract ABI Specification</a></li>
  <li><a href="https://docs.openzeppelin.com/contracts/4.x/api/token/erc721">OpenZeppelin Docs</a></li>
  <li><a href="https://dune.com/joshua_web3">Dune Analytics</a></li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="english" /><category term="blockchain" /><category term="on_chain_data" /><category term="sql" /><summary type="html"><![CDATA[In this article, I will briefly explore the Ethereum ABI Specification and show you how to decode contract functions when conducting on-chain data analysis. Additionally, I will demonstrate a simple data extraction and analysis case about “Who are the Top 10 Recipients of USDT approve Functions?” using DuneSQL while handling ABIs.]]></summary></entry><entry><title type="html">Finding all NFTs (ERC721) held by an address (feat. Dune Analytics)</title><link href="http://localhost:4000/finding-nfts/" rel="alternate" type="text/html" title="Finding all NFTs (ERC721) held by an address (feat. Dune Analytics)" /><published>2023-10-08T00:00:00+09:00</published><updated>2023-10-08T00:00:00+09:00</updated><id>http://localhost:4000/finding-nfts</id><content type="html" xml:base="http://localhost:4000/finding-nfts/"><![CDATA[<blockquote>
  <p>Embark on a journey through blockchain data with Joshua. Explore the intricacies of smart contracts, ERC721, and data analysis techniques. Joshua’s expertise shines as he guides you through interpreting transfer events using tools like Dune Analytics. Don’t miss the case study featuring Binance 7 EOA addresses. Verify insights with Etherscan for a deeper understanding of on-chain data architecture.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Contract = Functions + Events</li>
  <li>ERC721 Interface</li>
  <li>Summary: From Collecting Transfer Events To Calculating Wallet Balance</li>
  <li>Step by Step
    <ul>
      <li>4.1️. Collect All Transfer Events.</li>
      <li>4.2️. Filter Out the Most Recent Transfer Events for Each Token.</li>
      <li>4.3. Filter the Results to Show Only Those Related to the Specific Address.</li>
      <li>4.4️. Determine the Acquisition Price of the Tokens and Label the Contracts.</li>
    </ul>
  </li>
  <li>Case Study</li>
  <li>References</li>
</ol>

<hr />

<h1 id="1-contract--functions--events">1. Contract = Functions + Events</h1>

<p><img src="/assets/2023-10-08-finding-nfts/flowchart.webp" alt="" /></p>

<h3 id="functions"><code class="language-plaintext highlighter-rouge">Functions</code></h3>
<p>When you call a <code class="language-plaintext highlighter-rouge">function</code>:</p>
<ul>
  <li>
    <ol>
      <li>it returns a value, or</li>
    </ol>
  </li>
  <li>
    <ol>
      <li>it trigers an event. (= emits an event.)</li>
    </ol>
  </li>
</ul>

<h3 id="events"><code class="language-plaintext highlighter-rouge">Events</code></h3>
<p>WHen an <code class="language-plaintext highlighter-rouge">event</code> is emitted:</p>
<ul>
  <li>
    <ol>
      <li>it creates and. broadcasts a TX message, then</li>
    </ol>
  </li>
  <li>
    <ol>
      <li>the TX message leads to state change of Ethereum.</li>
    </ol>
  </li>
</ul>

<h1 id="2-erc721-interface">2. ERC721 Interface</h1>

<h3 id="functions-1"><code class="language-plaintext highlighter-rouge">Functions</code></h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">balanceOf</span><span class="p">(</span><span class="n">owner</span><span class="p">):</span>  
    <span class="k">return</span> <span class="sh">"</span><span class="s">Number of Tokens held by the Owner</span><span class="sh">'</span><span class="s">s Account</span><span class="sh">"</span>  
<span class="k">def</span> <span class="nf">ownerOf</span><span class="p">(</span><span class="n">tokenId</span><span class="p">):</span>  
    <span class="k">return</span> <span class="sh">"</span><span class="s">Owner</span><span class="sh">'</span><span class="s">s Address holding the Token</span><span class="sh">"</span>  
<span class="k">def</span> <span class="nf">transferFrom</span><span class="p">(</span><span class="k">from</span><span class="p">,</span> <span class="n">to</span><span class="p">,</span> <span class="n">tokenId</span><span class="p">):</span>  
    <span class="n">emit</span> <span class="n">Transfer</span>  
<span class="k">def</span> <span class="nf">approve</span><span class="p">(</span><span class="n">to</span><span class="p">,</span> <span class="n">tokenId</span><span class="p">):</span>  
    <span class="n">emit</span> <span class="n">Approval</span>  
<span class="bp">...</span>
</code></pre></div></div>

<h3 id="events-1"><code class="language-plaintext highlighter-rouge">Events</code></h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">event</span> <span class="nc">Transfer</span><span class="p">(</span><span class="k">from</span><span class="p">,</span> <span class="n">to</span><span class="p">,</span> <span class="n">tokenId</span><span class="p">):</span>  
    <span class="c1">#  "tokenId" token is transferred from "from" to "to".  
</span><span class="n">event</span> <span class="nc">Approval</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="n">approved</span><span class="p">,</span> <span class="n">tokenId</span><span class="p">):</span>  
    <span class="c1"># "owner" enables "approved" to manage the "tokenId" token.  
</span><span class="bp">...</span>
</code></pre></div></div>

<h1 id="3-summary-from-collecting-transfer-events-to-calculating-wallet-balance">3. Summary: From Collecting Transfer Events To Calculating Wallet Balance</h1>

<h3 id="collect-all-events-involving--david">Collect All Events Involving  <code class="language-plaintext highlighter-rouge">David</code>.</h3>

<p><strong>Transfer Event #1:</strong></p>
<ul>
  <li>from = “Joshua”</li>
  <li>to = “David”</li>
  <li>tokenId = <code class="language-plaintext highlighter-rouge">1234</code></li>
</ul>

<p><strong>Transfer Event #2:</strong></p>
<ul>
  <li>from = “Angela”</li>
  <li>to = “David”</li>
  <li>tokenId = <code class="language-plaintext highlighter-rouge">5678</code></li>
</ul>

<p><strong>Transfer Event #3:</strong></p>
<ul>
  <li>from = “David”</li>
  <li>to = “Angela”</li>
  <li>tokenId = <code class="language-plaintext highlighter-rouge">1234</code></li>
</ul>

<h3 id="then-sum-up-all-the-events-to-determine-wallet-balance">Then Sum Up All the Events to Determine Wallet Balance.</h3>

<p><strong>Tokens List “David” currently owns:</strong></p>
<ul>
  <li>tokenId = <code class="language-plaintext highlighter-rouge">5678</code></li>
</ul>

<h1 id="4-step-by-step">4. Step by Step</h1>

<h2 id="41️-collect-all-transfer-events">4.1️. Collect All Transfer Events.</h2>

<p><img src="/assets/2023-10-08-finding-nfts/erc721-evt_Transfer.webp" alt="" /></p>
<blockquote>
  <p>Dune Analytics</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_all_transfers</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">contract_address</span><span class="p">,</span>  
        <span class="n">tokenId</span><span class="p">,</span>  
        <span class="n">evt_tx_hash</span><span class="p">,</span>  
        <span class="nv">"to"</span><span class="p">,</span>  
        <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span>  
            <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">contract_address</span><span class="p">,</span> <span class="n">tokenId</span>  
            <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">evt_block_number</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">evt_index</span> <span class="k">DESC</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">recent_idx</span>  
    <span class="k">FROM</span>  
        <span class="n">erc721_ethereum</span><span class="p">.</span><span class="n">evt_Transfer</span>  
    <span class="k">WHERE</span>  
        <span class="n">contract_address</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>Query Results</strong></p>

<table>
  <thead>
    <tr>
      <th><strong>contract_address</strong></th>
      <th><strong>tokenId</strong></th>
      <th><strong>evt_tx_hash</strong></th>
      <th><strong>to</strong></th>
      <th><strong>recent_idx</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>106</td>
      <td><code class="language-plaintext highlighter-rouge">0xc8c0...4e4c</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x826e...1ff3</code></td>
      <td>2</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>113</td>
      <td><code class="language-plaintext highlighter-rouge">0xcd01...66a2</code></td>
      <td><code class="language-plaintext highlighter-rouge">0xc412...0620</code></td>
      <td>2</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>118</td>
      <td><code class="language-plaintext highlighter-rouge">0x28dd...6e20</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x4d98...e5a8</code></td>
      <td>2</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...b183</code></td>
      <td>3</td>
      <td><code class="language-plaintext highlighter-rouge">0xd503...672a</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x8636...a5e9</code></td>
      <td>2</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...b183</code></td>
      <td>13</td>
      <td><code class="language-plaintext highlighter-rouge">0x3cc9...4121</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x47a1...c78a</code></td>
      <td>2</td>
    </tr>
  </tbody>
</table>

<h2 id="42️-filter-out-the-most-recent-transfer-events-for-each-token">4.2️. Filter Out the Most Recent Transfer Events for Each Token.</h2>
<blockquote>
  <p>So that we can see who owns the tokens at the moment!</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_last_transfers</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="o">*</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_all_transfers</span>  
    <span class="k">WHERE</span>  
        <span class="n">recent_idx</span> <span class="o">=</span> <span class="mi">1</span>  
<span class="p">),</span>
</code></pre></div></div>

<p><strong>Query Results</strong></p>

<table>
  <thead>
    <tr>
      <th><strong>contract_address</strong></th>
      <th><strong>tokenId</strong></th>
      <th><strong>evt_tx_hash</strong></th>
      <th><strong>to</strong></th>
      <th><strong>recent_idx</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>0</td>
      <td><code class="language-plaintext highlighter-rouge">0xfa58...164a</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>1</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>2</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>3</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>4</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
  </tbody>
</table>

<h2 id="43-filter-the-results-to-show-only-those-related-to-the-specific-address">4.3. Filter the Results to Show Only Those Related to the Specific Address.</h2>
<blockquote>
  <p>So that we can see all the tokens that the address owns at the moment.</p>
</blockquote>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_last_transfers_cohort</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="o">*</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_last_transfers</span>  
    <span class="k">WHERE</span>  
        <span class="nv">"to"</span> <span class="o">=</span>   
<span class="p">),</span>
</code></pre></div></div>

<p><strong>Query Results</strong></p>

<table>
  <thead>
    <tr>
      <th><strong>contract_address</strong></th>
      <th><strong>tokenId</strong></th>
      <th><strong>evt_tx_hash</strong></th>
      <th><strong>to</strong></th>
      <th><strong>recent_idx</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>0</td>
      <td><code class="language-plaintext highlighter-rouge">0xfa58...164a</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>1</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>2</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>3</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">0x0000...8e25</code></td>
      <td>4</td>
      <td><code class="language-plaintext highlighter-rouge">0x0595...c802</code></td>
      <td><code class="language-plaintext highlighter-rouge">0x0000...5e92</code></td>
      <td>1</td>
    </tr>
  </tbody>
</table>

<h2 id="44️-determine-the-acquisition-price-of-the-tokens-and-label-the-contracts">4.4️. Determine the Acquisition Price of the Tokens and Label the Contracts.</h2>

<p><strong>Determine the Acquisition Price of the Tokens.</strong></p>

<p><img src="/assets/2023-10-08-finding-nfts/flowchart.webp" alt="" /></p>

<ul>
  <li><strong>JOIN <code class="language-plaintext highlighter-rouge">hash</code> with <code class="language-plaintext highlighter-rouge">evt_tx_hash</code> and SELECT <code class="language-plaintext highlighter-rouge">value</code>.</strong></li>
</ul>

<p><img src="/assets/2023-10-08-finding-nfts/ethereum.transactions.webp" alt="" /></p>
<blockquote>
  <p>Dune Analytics</p>
</blockquote>

<p><strong>Label the Contracts.</strong></p>

<p><img src="/assets/2023-10-08-finding-nfts/label-the-contracts.webp" alt="" /></p>
<blockquote>
  <p>Dune Analytics</p>
</blockquote>

<ul>
  <li><strong>JOIN <code class="language-plaintext highlighter-rouge">contract_address</code> with <code class="language-plaintext highlighter-rouge">contract_address</code> and SELECT <code class="language-plaintext highlighter-rouge">name</code>.</strong></li>
</ul>

<p><img src="/assets/2023-10-08-finding-nfts/tokens.nft.webp" alt="" /></p>
<blockquote>
  <p>Dune Analytics</p>
</blockquote>

<p><strong>Final Query to Wrap Up</strong></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_summary</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">LABELS</span><span class="p">.</span><span class="n">name</span><span class="p">,</span>  
        <span class="n">TRANSFERS</span><span class="p">.</span><span class="n">contract_address</span><span class="p">,</span>  
        <span class="n">TRANSFERS</span><span class="p">.</span><span class="n">tokenId</span><span class="p">,</span>  
        <span class="n">TXS</span><span class="p">.</span><span class="n">value</span> <span class="o">/</span> <span class="mi">1</span><span class="n">e18</span> <span class="k">AS</span> <span class="n">acquisition_cost</span>  
    <span class="k">FROM</span>  
        <span class="n">CTE_last_transfers_cohort</span> <span class="n">TRANSFERS</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span>  
        <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span> <span class="n">TXS</span>  
        <span class="k">ON</span> <span class="n">TRANSFERS</span><span class="p">.</span><span class="n">evt_tx_hash</span> <span class="o">=</span> <span class="n">TXS</span><span class="p">.</span><span class="n">hash</span>  
    <span class="k">LEFT</span> <span class="k">JOIN</span>  
        <span class="n">tokens</span><span class="p">.</span><span class="n">nft</span> <span class="n">LABELS</span>  
        <span class="k">ON</span> <span class="n">TRANSFERS</span><span class="p">.</span><span class="n">contract_address</span> <span class="o">=</span> <span class="n">LABELS</span><span class="p">.</span><span class="n">contract_address</span>  
            <span class="k">AND</span> <span class="n">LABELS</span><span class="p">.</span><span class="n">blockchain</span> <span class="o">=</span> <span class="s1">'ethereum'</span>  
<span class="p">)</span>
<span class="k">SELECT</span>
    <span class="o">*</span>
<span class="k">FROM</span>
    <span class="n">CTE_summary</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="5-case-study">5. Case Study</h1>

<h3 id="binance-7--eoa-address"><code class="language-plaintext highlighter-rouge">Binance 7</code>  EOA Address</h3>
<blockquote>
  <p>☎️ <code class="language-plaintext highlighter-rouge">0xBE0eB53F46cd790Cd13851d5EFf43D12404d33E8</code></p>
</blockquote>

<h3 id="query-results">Query Results</h3>

<p><img src="/assets/2023-10-08-finding-nfts/query-results.webp" alt="" /></p>
<blockquote>
  <p>🟠  <a href="https://dune.com/joshua_web3/blpas-sample-dashboard?address_t7a5e7=0xBE0eB53F46cd790Cd13851d5EFf43D12404d33E8">dune.com/joshua_web3</a></p>
</blockquote>

<h3 id="check-it-out-with--etherscan--just-in-case-its-not-been-correctly-queried">Check it out with  <code class="language-plaintext highlighter-rouge">Etherscan</code>  just in case it’s not been correctly queried.</h3>

<ul>
  <li>Holders of  <code class="language-plaintext highlighter-rouge">Documenta X by Vuk Cosic</code></li>
</ul>

<p><img src="/assets/2023-10-08-finding-nfts/etherscan-documenta.webp" alt="" /></p>
<blockquote>
  <p>Etherscan</p>
</blockquote>

<ul>
  <li>Holders of  <code class="language-plaintext highlighter-rouge">New World Babies</code></li>
</ul>

<p><img src="/assets/2023-10-08-finding-nfts/etherscan-new-world-babies.webp" alt="" /></p>
<blockquote>
  <p>Etherscan</p>
</blockquote>

<h1 id="6-references">6. References</h1>

<ul>
  <li><a href="https://docs.openzeppelin.com/contracts/4.x/api/token/erc721">OpenZeppelin Docs</a></li>
  <li><a href="https://dune.com/joshua_web3/blpas-sample-dashboard?address_t7a5e7=0xBE0eB53F46cd790Cd13851d5EFf43D12404d33E8">Dune Dashboard</a>  (created by Joshua)</li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="english" /><category term="blockchain" /><category term="on_chain_data" /><category term="sql" /><summary type="html"><![CDATA[Embark on a journey through blockchain data with Joshua. Explore the intricacies of smart contracts, ERC721, and data analysis techniques. Joshua’s expertise shines as he guides you through interpreting transfer events using tools like Dune Analytics. Don’t miss the case study featuring Binance 7 EOA addresses. Verify insights with Etherscan for a deeper understanding of on-chain data architecture.]]></summary></entry><entry><title type="html">OpenSea에서 발생한 트랜잭션 데이터 구조</title><link href="http://localhost:4000/opensea-transaction/" rel="alternate" type="text/html" title="OpenSea에서 발생한 트랜잭션 데이터 구조" /><published>2023-09-18T00:00:00+09:00</published><updated>2023-09-18T00:00:00+09:00</updated><id>http://localhost:4000/opensea-transaction</id><content type="html" xml:base="http://localhost:4000/opensea-transaction/"><![CDATA[<blockquote>
  <p>안녕하세요. 저는 블록체인 기반 서비스 기업에서 데이터 분석을 담당하고 있는 Joshua라고 합니다. 이번 아티클에서는 OpenSea에서 NFT Transfer가 발생했을 때, EVM 계열 블록체인의 온체인 상에 데이터가 어떤 모습으로 남아 있는지 파헤쳐 보도록 하겠습니다.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>오늘의 토픽</li>
  <li>바쁘신 분들을 위한 두괄식 결론</li>
  <li>상세 내용 파헤치기
    <ul>
      <li>3.1. TransactionReceipt</li>
      <li>3.2. OpenSea의 Wyvern 컨트랙트로부터 발생한 Internal TXs</li>
      <li>3.3. <code class="language-plaintext highlighter-rouge">atomicMatch_</code> 함수로부터 발생한 Events</li>
    </ul>
  </li>
  <li>정리하기</li>
</ol>

<hr />

<h1 id="1-오늘의-토픽">1. 오늘의 토픽</h1>

<p>먼저 오늘 사례로 살펴볼 NFT는 <strong>Bored Ape Yacht Club</strong>의 <code class="language-plaintext highlighter-rouge">tokenId</code> = <code class="language-plaintext highlighter-rouge">3238</code>인 NFT입니다.</p>

<p><img src="/assets/2023-09-18-opensea-transaction/bayc.webp" alt="" /></p>
<blockquote>
  <p><a href="https://opensea.io/assets/ethereum/0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d/3238">Source</a></p>
</blockquote>

<p>이 NFT의 활동 내역을 보면 Transfers 히스토리가 많이 남아 있는데요. 그 중에서, <code class="language-plaintext highlighter-rouge">wizmo</code> 계정으로부터 <code class="language-plaintext highlighter-rouge">LGHTWRK</code> 계정으로의 Transfer 내역을 뜯어보도록 할게요.</p>

<p><img src="/assets/2023-09-18-opensea-transaction/bayc-transfers.webp" alt="" /></p>
<blockquote>
  <p><a href="https://opensea.io/assets/ethereum/0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d/3238">Source</a></p>
</blockquote>

<p>이 Transfer 내역의 우측 바로가기 버튼을 클릭하면 아래와 같이 Etherscan의 <code class="language-plaintext highlighter-rouge">Transaction Receipt</code> 페이지가 팝업합니다. 하지만 안타깝게도 일반적인 ETH 송금과 달리, 트랜잭션이 상당히 난해하여 도대체 어떤 구조와 절차를 통해 실행된 것인지 알기란 참 어려워요. 특히, 블록체인 초심자라면 더욱 난감하겠죠.</p>

<p><img src="/assets/2023-09-18-opensea-transaction/etherscan-overview.webp" alt="" /></p>
<blockquote>
  <p><a href="https://etherscan.io/tx/0xe769c002eb1a13e9384d8b62270c963188a686068f2833a9c1b07b160468e80c">Source</a></p>
</blockquote>

<h1 id="2-바쁘신-분들을-위한-두괄식-결론">2. 바쁘신 분들을 위한 두괄식 결론</h1>

<blockquote>
  <p><strong><code class="language-plaintext highlighter-rouge">wizmo</code>의 NFT 경매에 대하여 <code class="language-plaintext highlighter-rouge">LGHTWRK</code>의 Offer가 수락되어, <code class="language-plaintext highlighter-rouge">wizmo</code>가 <code class="language-plaintext highlighter-rouge">LGHTWRK</code>에게 NFT를 전송하는 거래가 성사되었다.</strong></p>
</blockquote>

<p><img src="/assets/2023-09-18-opensea-transaction/flowchart.webp" alt="" /></p>
<blockquote>
  <p>Joshua가 작성한 Flowchart</p>
</blockquote>

<h1 id="3-상세-내용-파헤치기">3. 상세 내용 파헤치기</h1>

<h2 id="31-transactionreceipt">3.1. TransactionReceipt</h2>

<p>우선, 크게 다음과 같은 내용을 알 수 있습니다.</p>

<table>
  <thead>
    <tr>
      <th><strong>파라미터</strong></th>
      <th><strong>값</strong></th>
      <th><strong>참고내용</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>from</strong></td>
      <td>0x869c…Bf89</td>
      <td><code class="language-plaintext highlighter-rouge">LGHTWRK</code>의 주소</td>
    </tr>
    <tr>
      <td><strong>to</strong></td>
      <td>0x7Be8…D12b</td>
      <td><code class="language-plaintext highlighter-rouge">OpenSea: Wyvern Exchange v1</code>의 주소</td>
    </tr>
    <tr>
      <td><strong>value</strong></td>
      <td>2.1000 ETH</td>
      <td>0.1050 ETH + 1.9950 ETH</td>
    </tr>
    <tr>
      <td><strong>tx fee</strong></td>
      <td>0.0084 ETH</td>
      <td>-</td>
    </tr>
    <tr>
      <td><strong>data</strong></td>
      <td><code class="language-plaintext highlighter-rouge">atomicMatch_</code></td>
      <td>함수 호출</td>
    </tr>
  </tbody>
</table>

<p>즉, 이 트랜잭션의 기본 골격은 다음과 같습니다.</p>
<blockquote>
  <p><strong><code class="language-plaintext highlighter-rouge">LGHTWRK</code>로부터 <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>를 향해 <code class="language-plaintext highlighter-rouge">2.1000</code> ETH를 송금함과 동시에 해당 컨트랙트의 ABI에 정의되어 있는  <code class="language-plaintext highlighter-rouge">atomicMatch_</code>  함수를 실행하는 것을 목표로 한다.</strong></p>
</blockquote>

<p>참고로, 제가 <code class="language-plaintext highlighter-rouge">2.1000</code> ETH를 <code class="language-plaintext highlighter-rouge">0.1050</code> ETH + <code class="language-plaintext highlighter-rouge">1.9950</code> ETH 로 쪼개어 표현했는데요. 제가 왜 그랬을까요? 바로 아래를 보시죠.</p>

<h2 id="32-opensea의-wyvern-컨트랙트로부터-발생한-internal-txs">3.2. OpenSea의 Wyvern 컨트랙트로부터 발생한 Internal TXs</h2>

<p><code class="language-plaintext highlighter-rouge">LGHTWRK</code>가 <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>를 향해 송금하게 되면서, 컨트랙트로부터 총 2개의 트랜잭션이 파생적으로 발생했습니다. 바로, NFT를 구매하고 싶은 <code class="language-plaintext highlighter-rouge">LGHTWRK</code>가 OpenSea에 수수료를 납부하고, NFT 소유자인 <code class="language-plaintext highlighter-rouge">wizmo</code>에게 제시한 가격을 지불해야 하는 내용인 것이죠.</p>

<p><strong>1. <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>가  <code class="language-plaintext highlighter-rouge">OpenSea 수수료 전용 EOA</code>에 <code class="language-plaintext highlighter-rouge">0.1050</code> ETH를 송금한다.</strong></p>
<ul>
  <li><strong>from</strong>  = 0x7Be8…D12b (<code class="language-plaintext highlighter-rouge">OpenSea: Wyvern Exchange v1</code>)</li>
  <li><strong>to</strong>  = 0x5b32…1073 (<code class="language-plaintext highlighter-rouge">OpenSea: Wallet</code>)</li>
</ul>

<p><strong>2. <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>가  <code class="language-plaintext highlighter-rouge">wizmo</code>에게 <code class="language-plaintext highlighter-rouge">1.9950</code> ETH를 송금한다.</strong></p>
<ul>
  <li><strong>from</strong>  = 0x7Be8…D12b (<code class="language-plaintext highlighter-rouge">OpenSea: Wyvern Exchange v1</code>)</li>
  <li><strong>to</strong>  = 0xc4CB…9B26 (<code class="language-plaintext highlighter-rouge">wizmo</code>)</li>
</ul>

<p>참고로, Etherscan의 Transaction Receipt 페이지에서 <strong>Internal Txns 탭</strong>을 클릭하면 위 내용을 확인하실 수 있는데요. 블록체인 데이터 측면에서는 이러한 <strong>Internal TX</strong>를 흔히 <code class="language-plaintext highlighter-rouge">Trace</code>라고도 표현합니다.</p>

<p><img src="/assets/2023-09-18-opensea-transaction/ethersacn-internal-tx.webp" alt="" /></p>
<blockquote>
  <p><a href="https://etherscan.io/tx/0xe769c002eb1a13e9384d8b62270c963188a686068f2833a9c1b07b160468e80c#internal">Source</a></p>
</blockquote>

<h2 id="33-atomicmatch_-함수로부터-발생한-events">3.3. <code class="language-plaintext highlighter-rouge">atomicMatch_</code> 함수로부터 발생한 Events</h2>

<p><code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>에게 Input Data로 적어준  <strong>_atomicMatch__</strong>  함수를 통해,  <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>  에서는 총 3개의 Events가 발생(emit)하게 됩니다.</p>

<p>사실, <strong>_atomicMatch__</strong> 함수를 통해 어떤 Events가 실행되는지 명확하게 알기 위해서는 아래와 같이  <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>의 코드를 분석해야 하는데요. 이것까지 살펴보려면 분량이 너무 길어질 것 같으니, 오늘은 생략할게요.</p>

<p><img src="/assets/2023-09-18-opensea-transaction/etherscan-source-code.webp" alt="" /></p>
<blockquote>
  <p><a href="https://etherscan.io/address/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b#code">Source</a></p>
</blockquote>

<p><strong>1. Approval 이벤트</strong></p>
<ul>
  <li>ERC-721 ABI의 <code class="language-plaintext highlighter-rouge">Approval</code> 이벤트와 파라미터 구조가 똑같습니다. ERC-721 ABI의 <code class="language-plaintext highlighter-rouge">Approval</code> 이벤트는 “특정 Address가 소유자를 대신하여 NFT를 사용할 수 있는 권한을 주게는” 것을 의미합니다.</li>
  <li>Approval 이벤트는 ERC-721 ABI의 <code class="language-plaintext highlighter-rouge">approve</code> 함수를 통해 발생하게 되는데, 이번 아티클에서 소개 드리고 있는 트랜잭션에서는 approve 함수가 실행된 적이 없는 것으로 보아, 아마 소유자인  <code class="language-plaintext highlighter-rouge">wizmo</code>가 자신의 NFT를 경매에 올린 시점에 오프체인 상에서 Signed된 트랜잭션 메시지를 본 트랜잭션과 묶음 단위로 브로드캐스트했기 때문이지 않을까 추측해봅니다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">owner</span> <span class="o">=</span> <span class="mh">0xc4cb</span><span class="err">…</span><span class="mi">9</span><span class="n">b26</span> <span class="c1"># wizmo
</span><span class="n">approved</span> <span class="o">=</span> <span class="mh">0x0000</span><span class="err">…</span><span class="mi">0000</span>  
<span class="n">tokenId</span> <span class="o">=</span> <span class="mi">3238</span>
</code></pre></div></div>

<p><strong>2. Transfer 이벤트</strong></p>
<ul>
  <li>NFT의 소유권이 <code class="language-plaintext highlighter-rouge">wizmo</code>로부터 <code class="language-plaintext highlighter-rouge">LGHTWRK</code>로 넘어가게 되는 이벤트입니다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">from</span> <span class="o">=</span> <span class="mh">0xc4cb</span><span class="err">…</span><span class="mi">9</span><span class="n">b26</span> <span class="c1"># wizmo  
</span><span class="n">to</span> <span class="o">=</span> <span class="mh">0x869c</span><span class="err">…</span><span class="n">bf89</span> <span class="c1"># LGHTWRK
</span><span class="n">tokenId</span> <span class="o">=</span> <span class="mi">3238</span>
</code></pre></div></div>

<p><strong>3. OrdersMatched 이벤트</strong></p>
<ul>
  <li>정확히 어떤 것을 의미하는지 알기 위해서는  <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>  의 코드를 분석해야 하겠지만, 우선 경매를 통해 성사된 거래 내역이 기록된 것이라고 생각하고 넘어가봅시다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">maker</span> <span class="o">=</span> <span class="mh">0xc4cb</span><span class="err">…</span><span class="mi">9</span><span class="n">b26</span> <span class="c1"># wizmo (OpenSea 경매 시장의 Maker)
</span><span class="n">taker</span> <span class="o">=</span> <span class="mh">0x869c</span><span class="err">…</span><span class="n">bf89</span> <span class="c1"># LGHTWRK (OpenSea 경매 시장의 Taker)
</span><span class="n">metadata</span> <span class="o">=</span> <span class="mh">0x0000</span><span class="err">…</span><span class="mi">0000</span> <span class="c1"># data  
</span><span class="n">buyHash</span> <span class="o">=</span> <span class="mi">0000</span><span class="err">…</span><span class="mi">0000</span>  
<span class="n">sellHash</span> <span class="o">=</span> <span class="n">A7B1</span><span class="err">…</span><span class="mi">297</span><span class="n">F</span>  
<span class="n">price</span> <span class="o">=</span> <span class="mf">2.1000</span> <span class="c1"># ETH
</span></code></pre></div></div>

<h1 id="4-정리하기">4. 정리하기</h1>

<p>지금까지 가벼운 마음으로(?) 아래 내용을 데이터적으로 뜯어보았습니다.</p>

<blockquote>
  <p><strong><code class="language-plaintext highlighter-rouge">wizmo</code>의 NFT 경매에 대하여 <code class="language-plaintext highlighter-rouge">LGHTWRK</code>의 Offer가 수락되어, <code class="language-plaintext highlighter-rouge">wizmo</code>가 <code class="language-plaintext highlighter-rouge">LGHTWRK</code>에게 NFT를 전송하는 거래가 성사되었다.</strong></p>
</blockquote>

<p><img src="/assets/2023-09-18-opensea-transaction/flowchart.webp" alt="" /></p>
<blockquote>
  <p>Joshua가 작성한 Flowchart</p>
</blockquote>

<p>ETH, ERC-20의 송금과 달리, ERC-721은 좀 더 다양한 메타데이터를 지니고 있고, 심지어 OpenSea는 자체적으로 컨트랙트를 구현하여 ERC-721 토큰의 경매가 자동으로 성사될 수 있도록 프로토콜을 구현했습니다. <code class="language-plaintext highlighter-rouge">OpenSea의 Wyvern 컨트랙트</code>는 사실 최근에는 사용 빈도가 줄어들게 되었는데요. 그럼에도 불구하고, OpenSea와 같은 NFT Marketplace에서 발생한 NFT 매매 과정이 온체인 상에 어떻게 기록되어 있는지 조회하기에 좋은 예시라고 생각합니다.</p>

<p>참고로, OpenSea는 경매 과정의 각 특정 행위가 발생할 때마다 매번 온체인 상에 기록하는 것이 아니라, 오프체인 상에서 서명이 완료된 트랜잭션 메시지를 보관하고 있다가, 한꺼번에 Bulk 단위로 온체인 상에 메시지를 브로드캐스트하는 방식을 사용하곤 합니다. 이는 최종 사용자 측면에서 TX Fee의 부담을 줄여 사업의 P&amp;L을 최적화하기 위한 작업으로 보이지만, 블록체인의 트릴레마 항목 중 하나인 “탈중앙화” 훼손 논란의 여지가 있어 보이기도 합니다.</p>

<p>읽어주셔서 감사합니다.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="korean" /><category term="blockchain" /><category term="on_chain_data" /><summary type="html"><![CDATA[안녕하세요. 저는 블록체인 기반 서비스 기업에서 데이터 분석을 담당하고 있는 Joshua라고 합니다. 이번 아티클에서는 OpenSea에서 NFT Transfer가 발생했을 때, EVM 계열 블록체인의 온체인 상에 데이터가 어떤 모습으로 남아 있는지 파헤쳐 보도록 하겠습니다.]]></summary></entry><entry><title type="html">데이터 분석가의 파이썬 클라이언트 개발기 feat. pyinstaller</title><link href="http://localhost:4000/pyinstaller/" rel="alternate" type="text/html" title="데이터 분석가의 파이썬 클라이언트 개발기 feat. pyinstaller" /><published>2023-07-15T00:00:00+09:00</published><updated>2023-07-15T00:00:00+09:00</updated><id>http://localhost:4000/pyinstaller</id><content type="html" xml:base="http://localhost:4000/pyinstaller/"><![CDATA[<blockquote>
  <p>파이썬 파일을 실행하기 위해서는 파이썬의 High-level 언어를 Low-level로 변환해주는 <strong>Interpreter</strong>가 필요하고, 또 파이썬 파일 내에서 Load해야 하는 <strong>모듈</strong> 역시 함께 사전에 설치되어야 하는데요.  <code class="language-plaintext highlighter-rouge">pyinstaller</code>는 이러한 Interpreter와 모듈을 함께 동봉한 채로 파이썬 파일을 패키징하여 하나의 실행 파일로 만들어주는 역할을 하는 것이죠.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>데이터 분석가로 살아가며</li>
  <li>누워서 떡 먹듯 업무 자동화를 경험하실 수 있도록 하려면 어떻게 해야 할까요?</li>
  <li>파이썬 설치와 실행 방법을 모르더라도 <code class="language-plaintext highlighter-rouge">pyinstaller</code> 하나면 모든 것이 가능해요!</li>
  <li><code class="language-plaintext highlighter-rouge">.ipynb</code> 파일을 <code class="language-plaintext highlighter-rouge">.exe</code> 파일로 만드는 방법</li>
  <li>데이터 분석가가 갖추어야 하는 중요한 태도, “떠먹여 드리기”</li>
</ol>

<hr />

<h1 id="1-데이터-분석가로-살아가며">1. 데이터 분석가로 살아가며</h1>

<p><img src="/assets/2023-07-15-pyinstaller/milk.png" alt="" /></p>

<p>저는 블록체인 지갑 기업에서 데이터 분석가로 근무하고 있는 Joshua라고 합니다. 원래 이 업계에서 다른 포지션으로 근무하고 있었지만, 머신러닝과 빅데이터에 대한 천명(?)과 같은 깊은 흥미를 느끼게 되어 직장과 AI 대학원 생활을 2년 동안 병행해왔는데요. 정말 감사하게도 대학원을 잘 졸업하고, 지금 회사에서 데이터 분석가 포지션으로 근무하게 된지 1년이 넘어가고 있습니다.</p>

<p>훌륭하신, 그리고 인간적인 동료 분들과 함께 매일 치열하게 프로덕트에 대해 고민하고 있는데요. 특히, 한 분, 한 분과 이야기를 하거나 협업을 하다보면 제게 많은 자극을 알게 모르게 주시기도 하고, 스스로도 성장 욕구가 끊임 없이 일어나기도 한답니다. (입사 당시에도 그렇고, 1년이 지난 지금도 그 감정이 오롯이 유지되고 있어요.)</p>

<p><strong>머리로 기억하고 있는 선배 동료 분들의 어록 모음</strong></p>
<blockquote>
  <p>“조급한 마음으로 업무를 하게 되면 나중에 어떤 모습으로든 사고가 날 수 있다. 항상 차근차근 기초에 충실하는 게 중요해요.”
“3년 후, 5년 후의 미래를 종종 그려보며 커리어 방향을 점검해보는 게 되게 중요해요.”
“저는 나이가 들수록 말을 하거나 글을 쓰는 등 표현하는 게 부담스러워져요. 내가 알고 느끼는 것이 틀릴 수도 있으니까요.”</p>
</blockquote>

<p>이런 동료 분들과 함께, 그리고 성장 가능성이 무궁무진한 블록체인 도메인 속에서 매일 밤 이불을 덮으며 “<strong>나는 꼭 월드 클래스가 될 거야</strong>”라는 생각을 하며 지내고 있어요.</p>

<p>데이터 분석가의 메인 업무에 대한 이야기는 다음 아티클에서 또 전달해드리도록 하고, 오늘은 조금 희귀한(?) 스토리를 전달해드리고자 합니다.</p>

<p>가끔 몇몇 동료 분들이 제게 이런 말씀을 하실 때가 많아요.</p>
<blockquote>
  <p>“Joshua님은 데이터 분석가인데 왜 개발을 하고 계세요?”</p>
</blockquote>

<p>그럴 때마다 저는 이렇게 답변 드리곤 합니다.</p>
<blockquote>
  <p>“저.. 저는 단지 데이터 추출과 가공 때문에 코드를 짜고 있는 건데요? 개발 잘 몰라요^^;;;;;”</p>
</blockquote>

<p>물론 시간이 흐르며, 프론트엔드와 백엔드 개발도 데이터 크롤링과 가공의 프로세스도 지니고 있어서 상당히 유사한 작업이 많다는 사실을 이해하게 되어 지금은 살짝 인정을 하고 있어요. (그럼에도 불구하고 데이터 분석은 결이 좀 다르다구요!😆)</p>

<p>아무튼, 이번 아티클에서 제가 전달해드리려는 내용은 “<strong>데이터 분석가로서 반드시 알 필요는 없는, 그렇지만 알아두면 재미있고 쓸모 있는 클라이언트 개발 후기</strong>”입니다!</p>

<p>곰곰이 생각해보면, 현 회사에서 데이터 분석가로서 Day-to-day Responsibilities가 크게  <strong>메인 업무</strong>와  <strong>서브 업무</strong>  두 가지로 카테고리화되는 것 같아요.</p>

<p><strong>| 메인 업무</strong></p>
<ul>
  <li>핵심 지표 모니터링을 위한 대시보드 생성 및 관리</li>
  <li>Ad-hoc 데이터 분석</li>
  <li>A/B 테스트 결과 데이터 분석</li>
  <li>이벤트 로그 스키마 정의</li>
</ul>

<p><strong>| 서브 업무</strong></p>
<ul>
  <li>API 크롤링을 통한 시장 데이터 수집 후 분석</li>
  <li>블록체인 온체인 데이터 수집 후 분석</li>
  <li>블록체인 메인넷 리서치</li>
  <li>기타 등등</li>
</ul>

<p>특히  <strong>서브 업무</strong>는 데이터 분석가로서 Must-have 업무가 아닐 수 있지만, 저는 개인적으로 서브 업무를 함으로써 회사의 사업 전략과 프로덕트에 대한 Domain Knowledge를 키워갈 수 있는 매우 값진 경험이라고 생각하는데요.</p>

<p>최근에는 사내 재무팀 분들을 위해 내부용 파이썬 업무 자동화 클라이언트를 개발하여 배포하는 과정을 겪으며, 재무팀 동료 분들이 어떤 고민을 하시는지, 그리고 어떤 목표와 역할을 위해 최선을 다하고 계시는지 진득하게 이해할 수 있었어요.</p>

<h1 id="2-누워서-떡-먹듯-업무-자동화를-경험하실-수-있도록-하려면-어떻게-해야-할까요">2. 누워서 떡 먹듯 업무 자동화를 경험하실 수 있도록 하려면 어떻게 해야 할까요?</h1>

<p><img src="/assets/2023-07-15-pyinstaller/i-dont-know-why.png" alt="" /></p>

<p>회사 내부용 목적에 대해 공개할 수는 없지만, 재무팀 업무시 매뉴얼하게 데이터를 확인하는 것이 거의 불가능한 업무 포인트가 있었는데요. 그 부분을 API를 통해 크롤링할 수 있도록 파이썬 모듈을 만들 수 있겠다는 생각이 들었어요.</p>

<p>파이썬 크롤러 자체를 만드는 것은 어려운 일이 아니었지만, 파이썬 실행 환경에 대해 생각해보니 고민이 생겼어요.</p>
<blockquote>
  <p>“데이터 분석가와 백엔드 개발자에게는 파이썬 클라이언트를 설치하고, 노트북 상에서 코드를 실행하거나 명령 프롬프트 상에서 파이썬을 실행하는 게 너무나도 익숙한 일인데, 이게 과연 재무팀 분들께도 익숙한 일일까?”</p>
</blockquote>

<p>물론, 업무 자동화로 인한 시간 절감 효과가 파이썬 실행 환경 적응 시간보다 훨씬 크다면 큰 문제가 되지는 않겠지만, 그럼에도 불구하고  <code class="language-plaintext highlighter-rouge">CX(Colleague Experience?)</code>를 고려한 업무 자동화 환경을 제공해드리고 싶었거든요.</p>

<h1 id="3-파이썬-설치와-실행-방법을-모르더라도-pyinstaller-하나면-모든-것이-가능해요">3. 파이썬 설치와 실행 방법을 모르더라도 <code class="language-plaintext highlighter-rouge">pyinstaller</code> 하나면 모든 것이 가능해요!</h1>

<p>개발자 친구에게 이 고민을 털어놓기도 하고, 개인적으로 구글링을 하면서 알게 된 것은 바로  <strong>Python Executable File</strong>이라는 개념이었어요. 즉, 파이썬 환경을 구축하지 않고, 혹은 명령 프롬프트 같은 화성 같은 환경을 경험하지 않고도, <code class="language-plaintext highlighter-rouge">.exe</code> 확장자의 파일 자체를 클릭하는 것만으로 업무 자동화가 진행되는 실행 파일을 만드는 방법인 것이죠.</p>

<p><img src="/assets/2023-07-15-pyinstaller/infinite-challenge.jpeg" alt="" /></p>

<p>정말 감사하게도, 파이썬에는  <code class="language-plaintext highlighter-rouge">pyinstaller</code>라는 모듈이 있어요.</p>

<p><a href="https://pyinstaller.org/en/stable/">PyInstaller Manual</a>에 따르면,  <code class="language-plaintext highlighter-rouge">pyinstaller</code>는 Python 애플리케이션 및 실행에 필요한 모든 환경을 하나의 패키지로 묶어줌으로써, 사용자가 Python Interpreter나 모듈을 설치하지 않고 패키지 자체를 실행할 수 있도록 해주는 유틸리티입니다.</p>

<p>파이썬 파일을 실행하기 위해서는 파이썬의 High-level 언어를 Low-level로 변환해주는 <strong>Interpreter</strong>가 필요하고, 또 파이썬 파일 내에서 Load해야 하는 <strong>모듈</strong> 역시 함께 사전에 설치되어야 하는데요.  <code class="language-plaintext highlighter-rouge">pyinstaller</code>는 이러한 Interpreter와 모듈을 함께 동봉한 채로 파이썬 파일을 패키징하여 하나의 실행 파일로 만들어주는 역할을 하는 것이죠.</p>

<p><img src="https://miro.medium.com/v2/resize:fit:1400/0*uKgfsMJQvUG5okP2.jpg" alt="" /></p>

<h1 id="4-ipynb-파일을-exe-파일로-만드는-방법">4. <code class="language-plaintext highlighter-rouge">.ipynb</code> 파일을 <code class="language-plaintext highlighter-rouge">.exe</code> 파일로 만드는 방법</h1>

<p>우선 업무 자동화에 필요한 파이썬 코드를 Jupyter Notebook으로 완성을 합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step01.webp" alt="" /></p>

<p>사용자가 입력한 정수의 제곱값을 리턴해주는 귀여운 코드를 적어봤어요.</p>

<p><code class="language-plaintext highlighter-rouge">.ipynb</code>을 <code class="language-plaintext highlighter-rouge">.py</code> 형식의 파일로 변환하여 다운로드합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step02.webp" alt="" /></p>

<p>원하는 경로에 .py 파일을 이동해줍니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step03.webp" alt="" /></p>

<p>이제  <code class="language-plaintext highlighter-rouge">pyinstaller</code>  모듈을 설치하기 위해 명령 프롬프트를 실행합니다. (Anaconda Powershell Prompt나 Anaconda Prompt가 아닌, Windows 자체의 Command Prompt를 의미해요.)</p>

<p><img src="/assets/2023-07-15-pyinstaller/step04.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">pyinstaller</code>  모듈 설치를 위해  <code class="language-plaintext highlighter-rouge">pip install pyinstaller</code>  명령어를 입력해줍니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step05.webp" alt="" /></p>

<p>이제 명령 환경을 <code class="language-plaintext highlighter-rouge">.py</code> 파일이 보관되어 있는 디렉토리로 변경해줍니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step06.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">pyinstaller --onefile joshua_pyinstaller_practice.py</code>  명령어를 통해 패키징을 시작합니다. (onefile은 하나의 파일로 패키징해줘야 함을 의미해요!)</p>

<p><img src="/assets/2023-07-15-pyinstaller/step07.webp" alt="" /></p>

<p>그런데 가끔(아니 매우 자주), 안타깝게도 프롬프트가  <code class="language-plaintext highlighter-rouge">pyinstaller</code>라는 명령어를 제대로 이해하지 못하는 경우가 발생해요. 이 경우, 대부분 시스템 환경 변수를 프롬프트가 모르기 때문에 발생합니다.</p>

<p>Windows Task Bar의 검색창에서 <code class="language-plaintext highlighter-rouge">Environment Variables</code>를 검색하여 시스템 환경 변수 관리 페이지를 실행합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step08.webp" alt="" /></p>

<p>Advanced 탭 내의 Environment Variables 버튼을 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step09.webp" alt="" /></p>

<p>User variables의 New를 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step10.webp" alt="" /></p>

<p>잠시 홀드하고, 파이썬이 설치되어 있는 경로를 확인해야 해요. 즉, 파이썬의 Scripts 폴더를 찾아야 하는데요. 보통  <code class="language-plaintext highlighter-rouge">Users\AppData\Local\Programs\Python\Python311</code>  경로에 Scripts 폴더가 있어요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step11.webp" alt="" /></p>

<p>경로를 PATH 이름으로 환경 변수 리스트에 추가해주세요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step12.webp" alt="" /></p>

<p><img src="/assets/2023-07-15-pyinstaller/step13.webp" alt="" /></p>

<p>이런 환경 설정이 너무 어렵다면, 사실  <a href="https://www.python.org/downloads/">Python3 Setup 파일</a>을 다시 다운로드하여 Modify하는 방법이 있어요. 그럼 자동으로 환경 변수 세팅을 완료해주거든요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step14.webp" alt="" /></p>

<p>Modify를 클릭하세요.</p>

<p>pip 체크 여부를 반드시 확인한 후 Next 버튼을 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step15.webp" alt="" /></p>

<p>pip을 꼭 체크해주세요.</p>

<p>Add Python to environment variables를 꼭 체크 후 Install을 진행해주세요.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step16.webp" alt="" /></p>

<p>그런 후, Add Python to environment variables를 반드시 체크해주세요.</p>

<p>자 이제 다시,  <code class="language-plaintext highlighter-rouge">pyinstaller</code>  패키징을 시작합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step17.webp" alt="" /></p>

<p>드디어 성공했군요! 👏</p>

<p><img src="/assets/2023-07-15-pyinstaller/step18.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">.py</code> 파일이 보관되어 있는 경로를 찾아가보면, 새로운 폴더와 파일들이 생성된 것을 확인할 수 있습니다. 이 중, 우리가 배포해야 할 실행 파일은 <code class="language-plaintext highlighter-rouge">dist</code> 폴더에 있으니, <code class="language-plaintext highlighter-rouge">dist</code> 폴더를 클릭합니다.</p>

<p><img src="/assets/2023-07-15-pyinstaller/step19.webp" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">.exe</code> 파일이 생성이 된 것을 확인할 수 있습니다. 한 번 실행해볼까요?</p>

<p><img src="/assets/2023-07-15-pyinstaller/step20.webp" alt="" /></p>

<p>잘 실행되네요!😃</p>

<p><img src="/assets/2023-07-15-pyinstaller/step21.webp" alt="" /></p>

<p><img src="/assets/2023-07-15-pyinstaller/congratulations.jpeg" alt="" /></p>

<p>이제 마치 클라이언트 형태로 <code class="language-plaintext highlighter-rouge">.exe</code> 파일만 배포하면, 파이썬 환경 설치에 대한 부담 없이도 누구나 편리하게 원클릭 업무 자동화를 누릴 수 있답니다!</p>

<h1 id="5--데이터-분석가가-갖추어야-하는-중요한-태도-떠먹여-드리기">5.  데이터 분석가가 갖추어야 하는 중요한 태도, “떠먹여 드리기”</h1>

<p><img src="/assets/2023-07-15-pyinstaller/feeding.png" alt="" /></p>

<p>제가 회사에서 동료 분들께 반 농담, 반 진담으로 말씀 드리는 슬로건이 있는데요. 바로 “<code class="language-plaintext highlighter-rouge">떠먹여 드릴게요</code>”라는 표현입니다.</p>

<p>데이터는 늘 어렵고, 핵심을 꿰뚫이는 더욱 어려운 것 같아요. 데이터 분석가에게도 늘 어려운 일인데, 다른 동료 분들께는 얼마나 더 어려울까요.</p>

<p><strong>데이터 드리븐 문화</strong>를 위해 함께 데이터를 F/UP해야 하는 동료 분들의 부담을 조금이라도 줄여드리는 Soft한 역량이 데이터 분석가에게 요구되기 때문에, 떠먹여 드리기 위한 노력을 지속적으로 실천하는 것이 정말 중요하다고 생각하는데요. 가만히 누워서 입만 벌리고 계셔도 떠먹여 드릴 수 있는, 그런 데이터 분석가가 되는 것이 제게는 Midterm 목표가 된 것 같습니다.</p>

<p>이런 의미에서 이번 파이썬 클라이언트 개발기는 단순한 개발기 이상으로, 데이터를 업무에 빠르게 반영하여 Pain Point를 손쉽게 해결해드리고자 노력해본 저의 “<code class="language-plaintext highlighter-rouge">떠먹여 드릴게요</code>” 프로젝트 중 하나였습니다.</p>

<p>떠먹여 드리기도 하고, 저 또한 귀중한 서브 지식들을 함양할 수 있었던 것 같아서 참 뿌듯하기도 했어요. 앞으로 또 어떤  <strong>서브 업무</strong>들이 저를 기다리고 있을까요? 먼 산을 보며 글을 마칩니다. 읽어주셔서 감사합니다.</p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="korean" /><category term="python" /><summary type="html"><![CDATA[파이썬 파일을 실행하기 위해서는 파이썬의 High-level 언어를 Low-level로 변환해주는 Interpreter가 필요하고, 또 파이썬 파일 내에서 Load해야 하는 모듈 역시 함께 사전에 설치되어야 하는데요. pyinstaller는 이러한 Interpreter와 모듈을 함께 동봉한 채로 파이썬 파일을 패키징하여 하나의 실행 파일로 만들어주는 역할을 하는 것이죠.]]></summary></entry><entry><title type="html">It’s Harder than You Think to Extract DAU Separating New and Existing Users in BigQuery</title><link href="http://localhost:4000/extract-dau-separating-new-and-existing-users/" rel="alternate" type="text/html" title="It’s Harder than You Think to Extract DAU Separating New and Existing Users in BigQuery" /><published>2023-06-14T00:00:00+09:00</published><updated>2023-06-14T00:00:00+09:00</updated><id>http://localhost:4000/extract-dau-separating-new-and-existing-users</id><content type="html" xml:base="http://localhost:4000/extract-dau-separating-new-and-existing-users/"><![CDATA[<blockquote>
  <p>In this article, I’m going to talk about how to extract DAU separating new users and existing users directly from BigQuery. I prepared an insightful example to share some intuition with you, so that you can better understand.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Full BigQuery Codes</li>
  <li>Step by Step</li>
  <li>An Intuitive Example</li>
  <li>Review Full BigQuery Codes</li>
</ol>

<hr />

<p><img src="/assets/2023-06-14-extract-dau-separating-new-and-existing-users/data-pipeline.webp" alt="" /></p>
<blockquote>
  <p>Data pipeline from the website all the way up to Redash</p>
</blockquote>

<h1 id="1-full-bigquery-codes">1. Full BigQuery Codes</h1>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_flattened</span> <span class="k">AS</span> <span class="p">(</span>  
  <span class="c1">-- Confidential  </span>
<span class="p">),</span>  
<span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span>  
    <span class="k">WHERE</span> 
	    <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'session_start'</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">event_date</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">)</span>  
<span class="k">SELECT</span>  
    <span class="nb">date</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_all</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">&lt;&gt;</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_existing</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_new</span>  
<span class="k">FROM</span>
	<span class="n">CTE_users_min_gsn</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="p">;</span>
</code></pre></div></div>

<h1 id="2-step-by-step">2. Step by Step</h1>

<h2 id="21-daily-initial-session-sequence-values">2.1. Daily Initial Session Sequence Values</h2>

<p>First off, extract the <strong>daily initial session sequence values</strong> of all the users triggering <code class="language-plaintext highlighter-rouge">session_start</code>event.</p>
<ul>
  <li>the session sequence values are named <code class="language-plaintext highlighter-rouge">ga_session_number</code>in <a href="https://support.google.com/analytics/answer/7029846?hl=en#zippy=%2Cevent">BigQuery Export Schema of Google Analytics 4</a>.</li>
  <li>When a user(<code class="language-plaintext highlighter-rouge">user_pseudo_id</code>) starts their session for the first time, the  <code class="language-plaintext highlighter-rouge">ga_session_number</code>  in the event parameters equals to <code class="language-plaintext highlighter-rouge">1</code>, and then it increases sequentially each time the user returns and starts the new session again.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span>
    <span class="k">WHERE</span> 
	    <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'session_start'</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">event_date</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">)</span>
</code></pre></div></div>

<h2 id="22-separating-new--existing-users">2.2. Separating New &amp; Existing Users</h2>

<p>For the second step, categorize users as new or existing based on whether the <strong>daily initial session sequence value</strong> is <code class="language-plaintext highlighter-rouge">1</code> or <code class="language-plaintext highlighter-rouge">not</code> on a daily basis.</p>
<ul>
  <li>A user named Joshua, who first visited your website for example, can trigger multiple <code class="language-plaintext highlighter-rouge">session_start</code>events in a single day.</li>
  <li>Even though he returns to the website after his first visit, he should be still regarded as one of the new users when calculating on a daily basis.</li>
  <li>That ‘s why I mentioned above that you need to extract the <strong>“daily” initial session sequence values</strong> of all the users.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="nb">date</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_all</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">&lt;&gt;</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_existing</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_new</span>  
<span class="k">FROM</span>
	<span class="n">CTE_users_min_gsn</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="nb">date</span>
<span class="p">;</span>
</code></pre></div></div>

<h1 id="3-an-intuitive-example">3. An Intuitive Example</h1>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1, before noon</strong></th>
      <th><strong>Jan 1, afternoon</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td>1st Visit</td>
      <td>2nd Visit</td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td>-</td>
      <td>1st Visit</td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td>2nd Visit</td>
      <td>-</td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td>1st Visit</td>
      <td>2nd Visit</td>
    </tr>
  </tbody>
</table>

<p>On January 1st, the DAU will be:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">3 New Users</code> (Joshua, Shane, and Angela)</li>
  <li><code class="language-plaintext highlighter-rouge">1 Existing User</code> (Chloe)</li>
</ul>

<p>Keep in mind that Joshua and Angela are regarded as the new users <strong>in spite of the fact that they made their second visit</strong>.</p>

<h3 id="step-1-identify-the-session-sequence-values-of-all-the-users">STEP 1. Identify the session sequence values of all the users.</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1, before noon</strong></th>
      <th><strong>Jan 1, afternoon</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 2</td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td>-</td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 45</td>
      <td>-</td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 2</td>
    </tr>
  </tbody>
</table>

<h3 id="step2-aggregate-each-user-with-the-minimum-session-sequence-value">STEP2. Aggregate each user with the minimum session sequence value.</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 45</td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td><code class="language-plaintext highlighter-rouge">ga_session_number</code> = 1</td>
    </tr>
  </tbody>
</table>

<h3 id="step-3-classify-each-user-as-a-new-or-existing-user-based-on-whether-or-not-the-minimum-session-sequence-value-equals-to-1">STEP 3. Classify each user as a new or existing user based on whether or not the minimum session sequence value equals to 1.</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th><strong>Jan 1</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Joshua</strong></td>
      <td><code class="language-plaintext highlighter-rouge">New User</code></td>
    </tr>
    <tr>
      <td><strong>Shane</strong></td>
      <td><code class="language-plaintext highlighter-rouge">New User</code></td>
    </tr>
    <tr>
      <td><strong>Chloe</strong></td>
      <td><code class="language-plaintext highlighter-rouge">Existing User</code></td>
    </tr>
    <tr>
      <td><strong>Angela</strong></td>
      <td><code class="language-plaintext highlighter-rouge">New User</code></td>
    </tr>
  </tbody>
</table>

<h1 id="4-review-full-bigquery-codes">4. Review Full BigQuery Codes</h1>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_flattened</span> <span class="k">AS</span> <span class="p">(</span>  
  <span class="c1">-- Confidential  </span>
<span class="p">),</span>  
<span class="n">CTE_users_min_gsn</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">PARSE_DATE</span><span class="p">(</span><span class="s1">'%Y%m%d'</span><span class="p">,</span> <span class="n">event_date</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">date</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">ga_session_number</span><span class="p">)</span> <span class="k">AS</span> <span class="n">min_gsn</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span>  
    <span class="k">WHERE</span> 
	    <span class="n">event_name</span> <span class="o">=</span> <span class="s1">'session_start'</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">event_date</span><span class="p">,</span> <span class="n">user_pseudo_id</span>  
<span class="p">)</span>  
<span class="k">SELECT</span>  
    <span class="nb">date</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">user_pseudo_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_all</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">&lt;&gt;</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_existing</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="k">CASE</span> <span class="k">WHEN</span> <span class="n">min_gsn</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">user_pseudo_id</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau_new</span>  
<span class="k">FROM</span>
	<span class="n">CTE_users_min_gsn</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="nb">date</span>  
<span class="p">;</span>
</code></pre></div></div>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="english" /><category term="sql" /><category term="data_analytics" /><category term="bigquery" /><summary type="html"><![CDATA[In this article, I’m going to talk about how to extract DAU separating new users and existing users directly from BigQuery. I prepared an insightful example to share some intuition with you, so that you can better understand.]]></summary></entry><entry><title type="html">Ethereum On-chain Data: DAU, MAU, Stickiness, and Retention</title><link href="http://localhost:4000/ethereum-on-chain-data/" rel="alternate" type="text/html" title="Ethereum On-chain Data: DAU, MAU, Stickiness, and Retention" /><published>2023-05-29T00:00:00+09:00</published><updated>2023-05-29T00:00:00+09:00</updated><id>http://localhost:4000/ethereum-on-chain-data</id><content type="html" xml:base="http://localhost:4000/ethereum-on-chain-data/"><![CDATA[<blockquote>
  <p>In this article, I’m going to deep dive into Ethereum On-chain Data Analysis not just with the  <strong>DAU</strong>  and  <strong>MAU,</strong> but also with  <strong>Stickiness</strong>, and  <strong>Retention Rate</strong>, which are the basic metrics when it comes to data analysis. Let’s directly dive into it!</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Introduction</li>
  <li>DAU, MAU, and Stickiness (All the Transactions)
    <ul>
      <li>2.1.  Ethereum DAU and 30-day Moving MAU</li>
      <li>2.2. Ethereum DAU (by new and existing addresses)</li>
      <li>2.3. Ethereum DAU (by transaction types)</li>
      <li>2.4. Ethereum Stickiness</li>
    </ul>
  </li>
  <li>DAU, MAU, and Stickiness (Contract Call Only)
    <ul>
      <li>3.1. Ethereum DAU and 30-day Moving MAU</li>
      <li>3.2. Ethereum DAU (new and existing addresses)</li>
      <li>3.3. Ethereum DAU (by transaction types)</li>
      <li>3.4. Ethereum Stickiness</li>
    </ul>
  </li>
  <li>Cohord Retention (Contract Call Only)
    <ul>
      <li>4.1. Ethereum Cohort Retention (Since Jan 2023)</li>
      <li>4.2. Ethereum Cohort Retention (Since Jan 2022)</li>
    </ul>
  </li>
  <li>Why the Retention rate was high in May 2023?</li>
  <li>Conclusion</li>
</ol>

<hr />

<h1 id="1-introduction">1. Introduction</h1>

<p>There are already many Ethereum on-chain data analytics platforms such as Messari, Glassnode, and of course, Etherscan.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/messari.webp" alt="" /></p>
<blockquote>
  <p>Ethereum Daily Number of Active Addresses (Messari)</p>
</blockquote>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/glassnode.webp" alt="" /></p>
<blockquote>
  <p>Ethereum Daily Number of Active Addresses (Glassnode)</p>
</blockquote>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/etherscan.webp" alt="" /></p>
<blockquote>
  <p>Ethereum Daily Number of Transactions Broadcasted (Etherscan)</p>
</blockquote>

<p>Unfortunately, The charts above aren’t very helpful if you try to deeply analyze the on-chain data and find a specific action point regarding any blockchain services.</p>

<p>Inthis article, I’m going to deep dive into Ethereum On-chain Data Analysis not just with the  <strong>DAU</strong>  and  <strong>MAU,</strong> but also with  <strong>Stickiness</strong>, and  <strong>Retention Rate</strong>, which are the most basic metrics when it comes to Data Analysis. Let’s directly dive into it!</p>

<h1 id="2-dau-mau-and-stickiness-all-the-transactions">2. DAU, MAU, and Stickiness (All the Transactions)</h1>

<h2 id="21--ethereum-dau-and-30-day-moving-mau">2.1.  Ethereum DAU and 30-day Moving MAU</h2>

<p>Basically, I am not able to discern any meaningful insights from the chart below as a data analyst.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-dau-mau.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span> <span class="n">nonce</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span>
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span> 
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mau</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span>
	    <span class="n">block_date</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">)</span>  
<span class="k">SELECT</span>
	<span class="o">*</span>  
<span class="k">FROM</span> 
	<span class="n">CTE_dau_mau</span>  
<span class="k">WHERE</span> 
	<span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">;</span>
</code></pre></div></div>

<h2 id="22-ethereum-dau-by-new-and-existing-addresses">2.2. Ethereum DAU (by new and existing addresses)</h2>

<p>Here, I’ve distinguished daily new addresses from existing ones depending on the <strong>Nonce</strong> values.</p>
<ul>
  <li>If a transaction has a nonce of 0, it’s considered to be broadcast by <strong>a new address</strong>.</li>
  <li>On the other hand, if a transaction nonce is not equal to 0, it’s considered to be broadcast by <strong>an existing address</strong>.</li>
</ul>

<p>Despite this analysis, I am still not able to discern any meaningful insights from the chart below.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-dau-new-vs-old.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span>   
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">nonce</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="s1">'new_address'</span>  
            <span class="k">ELSE</span> <span class="s1">'existing_address'</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">new_existing</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span>
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
<span class="p">),</span>  
<span class="n">CTE_dnu_mnu</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">new_existing</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dnu</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span>
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span> 
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mnu</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">block_date</span><span class="p">,</span> <span class="n">new_existing</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">new_existing</span>  
<span class="p">)</span>  
<span class="k">SELECT</span>
	<span class="o">*</span>  
<span class="k">FROM</span>
	<span class="n">CTE_dnu_mnu</span>  
<span class="k">WHERE</span> 
	<span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">;</span>
</code></pre></div></div>

<h2 id="23-ethereum-dau-by-transaction-types">2.3. Ethereum DAU (by transaction types)</h2>

<p>Here, I’ve distinquished daily new addresses from existing ones depending on the <strong>Nonce</strong> values.</p>
<ul>
  <li>If a transaction has a nonce of 0, it’s considered to be broadcast by <strong>a new address</strong>.</li>
  <li>On the other hand, if a transaction nonce is not equal to 0, it’s considered to be broadcast by <strong>an existing address</strong>.</li>
</ul>

<p>Despite this analysis, I am still not able to discern any meaningful insights from the chart below.</p>

<p>Again, I am still not able to discern any meaningful insights from the chart below.</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">DynamicFee</code> indicates that the transaction has been broadcast in compliance with EIP-1559.</li>
  <li><code class="language-plaintext highlighter-rouge">Legacy</code> signifies that the transaction has been broadcast using the traditional data format.</li>
</ul>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-dau-tx-type.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span> <span class="n">nonce</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span>
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau</span> <span class="k">AS</span> <span class="p">(</span>   
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span>
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span>
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mau</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">block_date</span><span class="p">,</span> <span class="k">type</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span><span class="p">,</span> <span class="k">type</span>   
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span>  
<span class="k">FROM</span> 
	<span class="n">CTE_dau_mau</span>  
<span class="k">WHERE</span> 
	<span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">;</span>
</code></pre></div></div>

<h2 id="24-ethereum-stickiness">2.4. Ethereum Stickiness</h2>

<blockquote>
  <p><strong>Stickiness</strong> is, by definition, the proportion of users who started their sessions on a particular day among all monthly users.</p>
</blockquote>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/stickiness-formula.webp" alt="" /></p>

<p>For instance, users on various social media platforms like Facebook typically exhibit a significantly high Stickiness Ratio.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/dau-as-perc-of-mau.webp" alt="" /></p>

<p>When it comes to Ethereum Stickiness, I noticed a potential upward trend since May 2023 in the chart below.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-stickiness.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span> <span class="n">nonce</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span>
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span>
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span>
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mau</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">block_date</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau_stickiness</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span> <span class="n">dau</span><span class="p">,</span> <span class="n">mau</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="n">dau</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> <span class="o">/</span> <span class="k">CAST</span><span class="p">(</span><span class="n">mau</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">stickiness</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_dau_mau</span>  
    <span class="k">WHERE</span>
	    <span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>
	    <span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span> 
<span class="k">FROM</span> 
	<span class="n">CTE_dau_mau_stickiness</span><span class="p">;</span>
</code></pre></div></div>

<h1 id="3--dau-mau-and-stickiness-contract-call-only">3.  DAU, MAU, and Stickiness (Contract Call Only)</h1>

<p>Wait, I overlooked one crucial aspect in all of the above.</p>
<ol>
  <li>The primary essence of the Ethereum Network lies in its functionality as an application platform.</li>
  <li>Consequently, it would be more accurate and insightful to extract transactions data that involves at least one contract call, rather than considering all transactions data.</li>
</ol>

<p>Let’s redraw the same charts, but this time, focusing only on transactions that involve calling a contract.</p>

<h2 id="31-ethereum-dau-and-30-day-moving-mau">3.1. Ethereum DAU and 30-day Moving MAU</h2>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-contract-call-dau-mau.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span> <span class="n">nonce</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
        <span class="k">AND</span> <span class="k">data</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span><span class="n">x</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span> 
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span> 
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mau</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">block_date</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span>  
<span class="k">FROM</span> 
	<span class="n">CTE_dau_mau</span>  
<span class="k">WHERE</span> 
	<span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">;</span>
</code></pre></div></div>

<h2 id="32-ethereum-dau-new-and-existing-addresses">3.2. Ethereum DAU (new and existing addresses)</h2>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-contract-call-dau-new-vs-old.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span>   
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">nonce</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="s1">'new_address'</span>  
            <span class="k">ELSE</span> <span class="s1">'existing_address'</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">new_existing</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
        <span class="k">AND</span> <span class="k">data</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span><span class="n">x</span>  
<span class="p">),</span>  
<span class="n">CTE_dnu_mnu</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">new_existing</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dnu</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span> 
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span> 
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mnu</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">block_date</span><span class="p">,</span> <span class="n">new_old</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span><span class="p">,</span> <span class="n">new_old</span>  
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span>  
<span class="k">FROM</span> 
	<span class="n">CTE_dnu_mnu</span>  
<span class="k">WHERE</span> 
	<span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">;</span>
</code></pre></div></div>

<h2 id="33-ethereum-dau-by-transaction-types">3.3. Ethereum DAU (by transaction types)</h2>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-contract-call-dau-tx-type.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span> <span class="n">nonce</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
        <span class="k">AND</span> <span class="k">data</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span><span class="n">x</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span> 
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span> 
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mau</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">block_date</span><span class="p">,</span> <span class="k">type</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span><span class="p">,</span> <span class="k">type</span>   
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span>  
<span class="k">FROM</span> 
	<span class="n">CTE_dau_mau</span>  
<span class="k">WHERE</span> 
	<span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">;</span>
</code></pre></div></div>

<h2 id="34-ethereum-stickiness">3.4. Ethereum Stickiness</h2>

<p>I am even more convinced now that the upward trend I noticed earlier is indeed present here as well.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-contract-call-stickiness.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span> <span class="n">nonce</span><span class="p">,</span>  
        <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-12-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
        <span class="k">AND</span> <span class="k">data</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span><span class="n">x</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">dau</span><span class="p">,</span>  
        <span class="p">(</span>  
            <span class="k">SELECT</span> 
	            <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span>  
            <span class="k">FROM</span> 
	            <span class="n">CTE_raw</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span>  
                <span class="n">DATE_ADD</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span>  
                <span class="k">AND</span> <span class="n">SUB</span><span class="p">.</span><span class="n">block_date</span> <span class="o">&lt;=</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">block_date</span><span class="p">)</span>  
        <span class="p">)</span> <span class="k">AS</span> <span class="n">mau</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">block_date</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">),</span>  
<span class="n">CTE_dau_mau_stickiness</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">block_date</span><span class="p">,</span> <span class="n">dau</span><span class="p">,</span> <span class="n">mau</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="n">dau</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> <span class="o">/</span> <span class="k">CAST</span><span class="p">(</span><span class="n">mau</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">stickiness</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_dau_mau</span>  
    <span class="k">WHERE</span> 
	    <span class="n">block_date</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">block_date</span> <span class="k">DESC</span>  
<span class="p">)</span>  
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">CTE_dau_mau_stickiness</span><span class="p">;</span>
</code></pre></div></div>

<h1 id="4--cohord-retention-contract-call-only">4.  Cohord Retention (Contract Call Only)</h1>

<blockquote>
  <p><strong>Retention</strong> is basically an indicator of how many users come back to the platform over time.</p>
</blockquote>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/amplitude.webp" alt="" /></p>

<p>There are at least three methodologies to measure the Retention rate, but here I’ll use the Cohort Retention.</p>

<blockquote>
  <p><strong>Cohort Retention</strong> is one method of measuring the Retention trends by dividing it based on the first visit date of the new users.</p>
</blockquote>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/cohort-table.webp" alt="" /></p>

<h2 id="41-ethereum-cohort-retention-since-jan-2023">4.1. Ethereum Cohort Retention (Since Jan 2023)</h2>

<p>Newe addresses that have called contracts at least once demonstrate a notably high retention rate for at least a couple of weeks.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-cohort-retention-contract-call-only.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span>   
        <span class="n">nonce</span><span class="p">,</span> <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-01-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
        <span class="k">AND</span> <span class="k">data</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span><span class="n">x</span>  
<span class="p">),</span>  
<span class="n">CTE_raw_new</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span> 
	    <span class="o">*</span>   
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span>  
    <span class="k">WHERE</span> 
	    <span class="n">from_address</span> <span class="k">IN</span> <span class="p">(</span>  
	        <span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">from_address</span>  
	        <span class="k">FROM</span> <span class="n">CTE_raw</span>  
	        <span class="k">WHERE</span> <span class="n">nonce</span> <span class="o">=</span> <span class="mi">0</span>  
	    <span class="p">)</span>  
<span class="p">),</span>  
<span class="n">CTE_address_date_first</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">from_address</span><span class="p">,</span>  
        <span class="n">block_date</span> <span class="k">AS</span> <span class="n">active_date</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">block_date</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">from_address</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">block_date</span>
	        <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="n">UNBOUNDED</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="n">UNBOUNDED</span> <span class="k">FOLLOWING</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">first_date</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw_new</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">from_address</span><span class="p">,</span> <span class="n">block_date</span>  
<span class="p">),</span>  
<span class="n">CTE_address_date_first_length</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">from_address</span><span class="p">,</span>  
        <span class="n">active_date</span><span class="p">,</span> <span class="n">first_date</span><span class="p">,</span>  
        <span class="n">DATE_DIFF</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">first_date</span><span class="p">,</span> <span class="n">active_date</span><span class="p">)</span> <span class="k">AS</span> <span class="k">length</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_address_date_first</span>  
<span class="p">),</span>  
<span class="n">CTE_address_date_first_length7d</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">from_address</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">(</span><span class="n">active_date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">active_date</span><span class="p">,</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'WEEK'</span><span class="p">,</span> <span class="k">MIN</span><span class="p">(</span><span class="n">first_date</span><span class="p">))</span> <span class="k">AS</span> <span class="n">first_week</span><span class="p">,</span>  
        <span class="n">CEIL</span><span class="p">(</span><span class="k">length</span> <span class="o">/</span> <span class="mi">7</span><span class="p">.</span><span class="mi">0</span><span class="p">)</span> <span class="k">AS</span> <span class="k">length</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_address_date_first_length</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">from_address</span><span class="p">,</span> <span class="n">CEIL</span><span class="p">(</span><span class="k">length</span> <span class="o">/</span> <span class="mi">7</span><span class="p">.</span><span class="mi">0</span><span class="p">)</span>  
<span class="p">),</span>  
<span class="n">CTE_final</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">first_week</span><span class="p">,</span>  
        <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_address</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span>
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_0</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_1</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">2</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_2</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">3</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_3</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">4</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_4</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_address_date_first_length7d</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">first_week</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">first_week</span>  
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span> 
<span class="k">FROM</span> 
	<span class="n">CTE_final</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="42-ethereum-cohort-retention-since-jan-2022">4.2. Ethereum Cohort Retention (Since Jan 2022)</h2>

<p>Let’s repeat the process from above, this time starting from January 2022 for a more convincing analysis.</p>

<p>The retention rate in May 2023 was the second-highest since last year, warranting further analysis.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-cohort-retention-contract-call-only-since-2022.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span>   
        <span class="n">nonce</span><span class="p">,</span> <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="n">block_time</span> <span class="o">&gt;=</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2022-01-01'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
        <span class="k">AND</span> <span class="k">data</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span><span class="n">x</span>  
<span class="p">),</span>  
<span class="n">CTE_raw_new</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span> 
	    <span class="o">*</span>   
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span>  
    <span class="k">WHERE</span> 
	    <span class="n">from_address</span> <span class="k">IN</span> <span class="p">(</span>  
	        <span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">from_address</span>  
	        <span class="k">FROM</span> <span class="n">CTE_raw</span>  
	        <span class="k">WHERE</span> <span class="n">nonce</span> <span class="o">=</span> <span class="mi">0</span>  
	    <span class="p">)</span>  
<span class="p">),</span>  
<span class="n">CTE_address_date_first</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">from_address</span><span class="p">,</span>  
        <span class="n">block_date</span> <span class="k">AS</span> <span class="n">active_date</span><span class="p">,</span>  
        <span class="k">MIN</span><span class="p">(</span><span class="n">block_date</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">from_address</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">block_date</span>
	        <span class="k">ROWS</span> <span class="k">BETWEEN</span> <span class="n">UNBOUNDED</span> <span class="k">PRECEDING</span> <span class="k">AND</span> <span class="n">UNBOUNDED</span> <span class="k">FOLLOWING</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">first_date</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw_new</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">from_address</span><span class="p">,</span> <span class="n">block_date</span>  
<span class="p">),</span>  
<span class="n">CTE_address_date_first_length</span> <span class="k">AS</span> <span class="p">(</span>   
    <span class="k">SELECT</span>  
        <span class="n">from_address</span><span class="p">,</span>  
        <span class="n">active_date</span><span class="p">,</span> <span class="n">first_date</span><span class="p">,</span>  
        <span class="n">DATE_DIFF</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">first_date</span><span class="p">,</span> <span class="n">active_date</span><span class="p">)</span> <span class="k">AS</span> <span class="k">length</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_address_date_first</span>  
<span class="p">),</span>  
<span class="n">CTE_address_date_first_length7d</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">from_address</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">(</span><span class="n">active_date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">active_date</span><span class="p">,</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'WEEK'</span><span class="p">,</span> <span class="k">MIN</span><span class="p">(</span><span class="n">first_date</span><span class="p">))</span> <span class="k">AS</span> <span class="n">first_week</span><span class="p">,</span>  
        <span class="n">CEIL</span><span class="p">(</span><span class="k">length</span> <span class="o">/</span> <span class="mi">7</span><span class="p">.</span><span class="mi">0</span><span class="p">)</span> <span class="k">AS</span> <span class="k">length</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_address_date_first_length</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">from_address</span><span class="p">,</span> <span class="n">CEIL</span><span class="p">(</span><span class="k">length</span> <span class="o">/</span> <span class="mi">7</span><span class="p">.</span><span class="mi">0</span><span class="p">)</span>  
<span class="p">),</span>  
<span class="n">CTE_final</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">first_week</span><span class="p">,</span>  
        <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="n">new_address</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_0</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_1</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">2</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_2</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">3</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_3</span><span class="p">,</span>  
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">4</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">/</span> 
        <span class="k">CAST</span><span class="p">(</span><span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">length</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">THEN</span> <span class="mi">1</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span> <span class="k">AS</span> <span class="nb">DOUBLE</span><span class="p">)</span> 
        <span class="o">*</span> <span class="mi">100</span><span class="p">.</span><span class="mi">0</span> <span class="k">AS</span> <span class="n">week_4</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_address_date_first_length7d</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">first_week</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">first_week</span>  
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span> 
<span class="k">FROM</span> <span class="n">CTE_final</span><span class="p">;</span>
</code></pre></div></div>

<h1 id="5--why-the-retention-rate-was-high-in-may-2023">5.  Why the Retention rate was high in May 2023?</h1>

<p>The significant increase in the retention rate suggests a positive shift in user experience, indicating that users are now having a more positive experience than ever before.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/ethereum-cohort-retention-contract-call-only-since-2022-2.webp" alt="" /></p>

<p>Now, let’s extract the list of contract addresses that have been called the most by the new addresses from May 1 to May 8, 2023.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/to-address-rank-2023-05-01-2023-05-08.webp" alt="" /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>  
<span class="n">CTE_raw</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span>  
        <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'DAY'</span><span class="p">,</span> <span class="n">block_time</span><span class="p">)</span> <span class="k">AS</span> <span class="n">block_date</span><span class="p">,</span>  
        <span class="n">block_number</span><span class="p">,</span>  
        <span class="nv">"from"</span> <span class="k">AS</span> <span class="n">from_address</span><span class="p">,</span>   
        <span class="nv">"to"</span> <span class="k">AS</span> <span class="n">to_address</span><span class="p">,</span>  
        <span class="n">nonce</span><span class="p">,</span> <span class="n">success</span><span class="p">,</span> <span class="k">type</span><span class="p">,</span>  
        <span class="n">value</span><span class="p">,</span> <span class="k">data</span>  
    <span class="k">FROM</span> 
	    <span class="n">ethereum</span><span class="p">.</span><span class="n">transactions</span>  
    <span class="k">WHERE</span>  
        <span class="nb">TIMESTAMP</span> <span class="s1">'2023-05-01'</span> <span class="o">&lt;=</span> <span class="n">block_time</span>
        <span class="k">AND</span> <span class="n">block_time</span> <span class="o">&lt;</span> <span class="nb">TIMESTAMP</span> <span class="s1">'2023-05-08'</span>  
        <span class="k">AND</span> <span class="n">success</span> <span class="o">=</span> <span class="k">true</span>  
        <span class="k">AND</span> <span class="k">data</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span><span class="n">x</span>  
<span class="p">),</span>  
<span class="n">CTE_raw_new</span> <span class="k">AS</span> <span class="p">(</span> 
    <span class="k">SELECT</span> 
	    <span class="o">*</span>   
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw</span>  
    <span class="k">WHERE</span> 
	    <span class="n">from_address</span> <span class="k">IN</span> <span class="p">(</span>  
	        <span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">from_address</span>  
	        <span class="k">FROM</span> <span class="n">CTE_raw</span>  
	        <span class="k">WHERE</span> <span class="n">nonce</span> <span class="o">=</span> <span class="mi">0</span>  
	    <span class="p">)</span>  
<span class="p">),</span>  
<span class="n">CTE_ca_new_list</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">to_address</span><span class="p">,</span>  
        <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">from_address</span><span class="p">)</span> <span class="k">AS</span> <span class="n">address_cnt</span>  
    <span class="k">FROM</span> 
	    <span class="n">CTE_raw_new</span>  
    <span class="k">GROUP</span> <span class="k">BY</span> 
	    <span class="n">to_address</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">address_cnt</span> <span class="k">DESC</span>  
    <span class="k">LIMIT</span> 
	    <span class="mi">100</span>  
<span class="p">)</span>  
<span class="k">SELECT</span> 
	<span class="o">*</span> 
<span class="k">FROM</span> 
	<span class="n">CTE_ca_new_list</span><span class="p">;</span>
</code></pre></div></div>

<p>Now, let’s identify the top 2 contracts from the table shown below.</p>

<p><strong>Rank 1. Tether USD (USDT) Contract</strong></p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/etherscan-usdt.webp" alt="" /></p>

<p>Tether USD (USDT), being a widely traded stablecoin on the Ethereum Network, does not reveal any significant changes in the new user experience.</p>

<p><strong>Rank 2. Uniswap Universal Router Contract</strong></p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/etherscan-uniswap.webp" alt="" /></p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/universal-router.webp" alt="" /></p>
<blockquote>
  <p><a href="https://blog.uniswap.org/permit2-and-universal-router">Permit2 and Universal Router</a></p>
</blockquote>

<p>Now we’ve idenfified it. The Uniswap Universal Router, introduced in November 2022, has been instrumental in enhancing the positive user experience on the Ethereum Network.</p>

<p><img src="/assets/2023-05-29-ethereum-on-chain-data/universal-router-flowchart.webp" alt="" /></p>
<blockquote>
  <p><a href="https://blog.uniswap.org/permit2-and-universal-router">Permit2 and Universal Router</a></p>
</blockquote>

<p>As demonstrated above, we can execute multiple separate swaps in a single transaction, resulting in lowe gas fees.</p>

<h1 id="6--conclusion">6.  Conclusion</h1>

<ol>
  <li>In May 2023, new addresses exhibit the second-highest retention rate since January 2022.</li>
  <li>This abrupt increase in the retention rate appears to be significantly influenced by the swift and widespread adoption of the Uniswap Universal Router.</li>
</ol>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="english" /><category term="sql" /><category term="blockchain" /><category term="on_chain_data" /><category term="data_analytics" /><summary type="html"><![CDATA[In this article, I’m going to deep dive into Ethereum On-chain Data Analysis not just with the DAU and MAU, but also with Stickiness, and Retention Rate, which are the basic metrics when it comes to data analysis. Let’s directly dive into it!]]></summary></entry><entry><title type="html">Let’s Create the Sankey Chart</title><link href="http://localhost:4000/sankey-chart/" rel="alternate" type="text/html" title="Let’s Create the Sankey Chart" /><published>2023-05-21T00:00:00+09:00</published><updated>2023-05-21T00:00:00+09:00</updated><id>http://localhost:4000/sankey-chart</id><content type="html" xml:base="http://localhost:4000/sankey-chart/"><![CDATA[<blockquote>
  <p>In this article, I’m going to tell you how you can create the Sankey Chart starting from GA4, BigQuery, and up to Redash.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Introduction</li>
  <li><strong>Flatten</strong> the source table.</li>
  <li>Make sure each <strong>user</strong> and <strong>session</strong> has the same properties(or parameters).</li>
  <li>Delete the consecutive same <strong>page URL duplicates</strong> in the same <code class="language-plaintext highlighter-rouge">session_id</code>.</li>
  <li>Label each page’s <strong>visiting order number</strong> for each session.</li>
  <li><strong>Categorize</strong> all the pages.</li>
  <li>Pivot each session’s journey up to <strong>10 steps</strong>.</li>
  <li>Make the query result compatible with <strong>Redash</strong>.</li>
  <li>Final Result</li>
  <li>Conclusion</li>
</ol>

<hr />

<p><img src="/assets/2023-05-21-sankey-chart/Data Pipeline from the website all the way up to Redash.webp" alt="" /></p>
<blockquote>
  <p>Data Pipeline from the website all the way up to Redash</p>
</blockquote>

<h1 id="1-introduction">1. Introduction</h1>

<h2 id="11-what-is-sankey-chart">1.1. What is Sankey Chart?</h2>

<p><img src="/assets/2023-05-21-sankey-chart/Sankey-Diagram.webp" alt="" /></p>
<blockquote>
  <p><a href="https://www.originlab.com/doc/Origin-Help/Sankey-Diagram">Source</a></p>
</blockquote>

<p><strong>Sankey Chart</strong>, oftentimes also called Sankey Diagram, is a type of flow visualization in which the width of the arrows is proportional to the flow rate of the depicted extensive property. [<a href="https://en.wikipedia.org/wiki/Sankey_diagram">Wikipedia</a>]</p>

<h2 id="12-why-is-sankey-chart-important-in-data-analytics">1.2. Why is Sankey Chart Important in Data Analytics?</h2>

<p>In the Data Analytics world, though, we can figure out how our visitors make their journey throughout our website pages or app screens. With the Sankey Chart, we can apply <strong>our strategies</strong> as shown below.</p>
<ul>
  <li>“Many purchasing visitors mainly make a journey starting from <code class="language-plaintext highlighter-rouge">page A</code>, <code class="language-plaintext highlighter-rouge">page B</code>, <code class="language-plaintext highlighter-rouge">page C</code>, and finally make their purchase. Therefore, we might be able to create a CTA button in order to drive the other visitors to this journey, so that we could make our revenue much higher.”</li>
  <li>“<code class="language-plaintext highlighter-rouge">Page A</code> and <code class="language-plaintext highlighter-rouge">Page B</code> are the points where our visitors bounce off the most. Bet those two pages have some problems in terms of psychology or technology. Let’s now dive into specific user interviews or research to deal with this bounce-off rate.”</li>
</ul>

<h2 id="13-limitations-of-google-analytics-4">1.3. Limitations of Google Analytics 4</h2>

<p>Although GA4 supports some custom visualizations and you can explore the path analysis to figure out how your visitors take their journey throughout the websites, it’s literally awful and much of a hassle if you’re eager to get some insights regarding that. (See below how awful it is.)</p>

<p><img src="/assets/2023-05-21-sankey-chart/GA4’s Path Analysis.webp" alt="" /></p>

<p>Now that hopefully you got deeply understood what is the Sankey Chart and why it’s important in product analytics, it’s time to show you <strong>how to create the Sankey Chart from A to Z</strong>. Let’s directly dive into it!</p>

<h1 id="2-flatten-the-source-table">2. Flatten the source table.</h1>

<p>Although it’s really handy to connect the GA4 events to BigQuery, there’s a complicated issue hard to handle; Some of the datatypes imported to BigQuery are <code class="language-plaintext highlighter-rouge">STRUCT</code> type. It’s regarded as an array type, or you can imagine this as a <code class="language-plaintext highlighter-rouge">STRUCT</code> type column that allows each row to have a multiple-dimensional value in it.</p>

<p><img src="/assets/2023-05-21-sankey-chart/address_history.webp" alt="" />
<img src="/assets/2023-05-21-sankey-chart/1. Flatten the Table.webp" alt="" /></p>
<blockquote>
  <p><a href="https://medium.com/google-cloud/how-to-work-with-array-and-structs-in-bigquery-9c0a2ea584a6">Source</a></p>
</blockquote>

<p>You can simply use <code class="language-plaintext highlighter-rouge">UNNEST</code> to flatten each <code class="language-plaintext highlighter-rouge">STRUCT</code> type column in advance of your main query.</p>

<h2 id="21-the-entire-codes">2.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">WITH</span>
<span class="n">CTE_flattened</span> <span class="k">AS</span> <span class="p">(</span>
	<span class="k">SELECT</span>
		<span class="n">event_date</span><span class="p">,</span>
		<span class="n">event_timestamp</span><span class="p">,</span>
		<span class="n">user_pseudo_id</span><span class="p">,</span>
		<span class="n">ga_session_id</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">session_id</span><span class="p">,</span>
		<span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="k">AS</span> <span class="n">session_number</span><span class="p">,</span>
		<span class="n">event_name</span><span class="p">,</span>
		<span class="n">page_location</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
		<span class="n">ecommerce</span><span class="p">.</span><span class="n">purchase_revenue_in_usd</span> <span class="k">AS</span> <span class="n">revenue_usd</span><span class="p">,</span>
		<span class="n">geo</span><span class="p">.</span><span class="n">country</span><span class="p">,</span>
		<span class="n">device</span><span class="p">.</span><span class="n">category</span> <span class="k">AS</span> <span class="n">device</span><span class="p">,</span>
		<span class="n">utm_campaign</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">utm_campaign</span><span class="p">,</span>  
		<span class="n">utm_medium</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">utm_medium</span><span class="p">,</span>  
		<span class="n">utm_source</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">utm_source</span><span class="p">,</span>  
		<span class="n">page_referrer</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">string_value</span> <span class="k">AS</span> <span class="n">page_referrer</span>  
	<span class="k">FROM</span>
		<span class="nv">`your_table.events_*`</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span>
		<span class="k">ON</span> <span class="n">ga_session_id</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_id'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span>
		<span class="k">ON</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'ga_session_number'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span>
		<span class="k">ON</span> <span class="n">page_location</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'page_location'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_campaign</span>
		<span class="k">ON</span> <span class="n">utm_campaign</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'campaign'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_medium</span>
		<span class="k">ON</span> <span class="n">utm_medium</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'medium'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_source</span>
		<span class="k">ON</span> <span class="n">utm_source</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'source'</span>  
	<span class="k">LEFT</span> <span class="k">JOIN</span>
		<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span>
		<span class="k">ON</span> <span class="n">page_referrer</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="s1">'page_referrer'</span>  
	<span class="k">WHERE</span>  
		<span class="n">_table_suffix</span> <span class="k">BETWEEN</span>
		<span class="n">FORMAT_DATE</span><span class="p">(</span>
			<span class="s1">'%Y%m%d'</span><span class="p">,</span>
			<span class="n">DATE_SUB</span><span class="p">(</span><span class="k">CURRENT_DATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="mi">90</span> <span class="k">DAY</span><span class="p">)</span>
		<span class="p">)</span>
		<span class="k">AND</span>
		<span class="n">FORMAT_DATE</span><span class="p">(</span>
			<span class="s1">'%Y%m%d'</span><span class="p">,</span>
			<span class="k">CURRENT_DATE</span><span class="p">()</span>
		<span class="p">)</span>
		<span class="k">AND</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="o">=</span> <span class="mi">1</span>  
		<span class="k">AND</span> <span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
		<span class="k">AND</span> <span class="n">ga_session_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="p">),</span>
</code></pre></div></div>

<h2 id="22-detailed-explanation-of-key-codes">2.2. Detailed Explanation of Key Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_id</span>
	<span class="k">ON</span> <span class="n">ga_session_id</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">ga_session_id</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Each <code class="language-plaintext highlighter-rouge">event</code> may have <code class="language-plaintext highlighter-rouge">ga_session_id</code> in its parameters, and we have to grab it in order to follow through each user session’s journey based on the <code class="language-plaintext highlighter-rouge">ga_session_id</code>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ga_session_number</span>
	<span class="k">ON</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">ga_session_number</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Each <code class="language-plaintext highlighter-rouge">event</code> may have <code class="language-plaintext highlighter-rouge">ga_session_number</code> in its parameters, and we have to look through it in order to know if each <code class="language-plaintext highlighter-rouge">session</code> is the <strong>first visiting user’s</strong> or <strong>returning user’s</strong> session.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span>
	<span class="k">ON</span> <span class="n">page_location</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">page_location</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Most of each <code class="language-plaintext highlighter-rouge">event</code> has <code class="language-plaintext highlighter-rouge">page_location</code> in its parameters, and of course, we have to know <code class="language-plaintext highlighter-rouge">page_location</code> in order to follow through with their journey based on the <strong>page URL</strong>.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_campaign</span>
	<span class="k">ON</span> <span class="n">utm_campaign</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">campaign</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on what kind of <strong>campaign channel</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">utm_campaign</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_medium</span>
	<span class="k">ON</span> <span class="n">utm_medium</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">medium</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on what kind of <strong>medium channel</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">utm_medium</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">utm_source</span>
	<span class="k">ON</span> <span class="n">utm_source</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="k">source</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on what kind of <strong>source channel</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">utm_source</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">LEFT</span> <span class="k">JOIN</span>
	<span class="k">UNNEST</span> <span class="p">(</span><span class="n">event_params</span><span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span>
	<span class="k">ON</span> <span class="n">page_referrer</span><span class="p">.</span><span class="k">key</span> <span class="o">=</span> <span class="err">‘</span><span class="n">page_referrer</span><span class="err">’</span>
</code></pre></div></div>
<ul>
  <li>Many times, each <code class="language-plaintext highlighter-rouge">session</code> has a totally different shape of the journey depending on exactly what <strong>previous page URL</strong> the session has started from. Therefore, let’s also query <code class="language-plaintext highlighter-rouge">page_referrer</code> just in case.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">AND</span> <span class="n">ga_session_number</span><span class="p">.</span><span class="n">value</span><span class="p">.</span><span class="n">int_value</span> <span class="o">=</span> <span class="mi">1</span>  
<span class="k">AND</span> <span class="n">user_pseudo_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>  
<span class="k">AND</span> <span class="n">ga_session_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span>
</code></pre></div></div>
<ul>
  <li>Here, I wanted to know specifically about the <strong>first visiting users’ journey</strong>, and that’s why I try to query with <code class="language-plaintext highlighter-rouge">ga_session_number</code> only as <code class="language-plaintext highlighter-rouge">1</code>.</li>
  <li>We basically have to track the <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> and <code class="language-plaintext highlighter-rouge">ga_session_id</code> in order to <strong>make sure each user journey has been there from the same user and same session</strong>. That’s why I dropped all the missing <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> and <code class="language-plaintext highlighter-rouge">ga_session_id</code> instances.</li>
</ul>

<h1 id="3-make-sure-each-user-and-session-has-the-same-propertiesor-parameters">3. Make sure each user and session has the same properties(or parameters).</h1>

<p>Sometimes, even though it’s rooted in the same <code class="language-plaintext highlighter-rouge">session_id</code>, some events have their parameters fully, but others don’t. That’s why we make duplicates for the parameters throughout the same <code class="language-plaintext highlighter-rouge">user_pseudo_id</code> and <code class="language-plaintext highlighter-rouge">session_id</code>.</p>

<p><img src="/assets/2023-05-21-sankey-chart/ This is a real BigQuery table appended from GA4, and look only one event has the medium value.webp" alt="" /></p>
<blockquote>
  <p>This is a real <strong>BigQuery</strong> table appended from GA4, and you can look only one event has the medium value.</p>
</blockquote>

<h2 id="31-the-entire-codes">3.1. The Entire Codes</h2>

<p>You can use <code class="language-plaintext highlighter-rouge">FIRST_VALUE</code> and <code class="language-plaintext highlighter-rouge">LAST_VALUE</code> functions to make the duplicates.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_properties_spread</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span>
        <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span>
        <span class="n">session_id</span><span class="p">,</span>
        <span class="n">session_number</span><span class="p">,</span>  
        <span class="n">event_name</span><span class="p">,</span> 
        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
	        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
		        <span class="k">LOWER</span><span class="p">(</span><span class="n">page_location</span><span class="p">),</span> 
		        <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span>
	        <span class="p">),</span>
	        <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
        <span class="n">revenue_usd</span><span class="p">,</span>  
        <span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">country</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">country</span><span class="p">,</span>  
        <span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">device</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">utm_campaign</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">utm_campaign</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">utm_medium</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">utm_medium</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span><span class="n">utm_source</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">utm_source</span><span class="p">,</span>  
        <span class="n">LAST_VALUE</span><span class="p">(</span>
	        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
		        <span class="n">REGEXP_REPLACE</span><span class="p">(</span>
			        <span class="k">LOWER</span><span class="p">(</span><span class="n">page_referrer</span><span class="p">),</span> 
			        <span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span>
		        <span class="p">),</span> 
		        <span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span>
	        <span class="p">)</span>
        <span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">page_referrer</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_flattened</span> 
<span class="p">),</span>
</code></pre></div></div>

<h2 id="32-detailed-explanation-of-key-codes">3.2. Detailed Explanation of Key Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">REGEXP_REPLACE</span><span class="p">(</span>
	<span class="n">REGEXP_REPLACE</span><span class="p">(</span>
		<span class="k">LOWER</span><span class="p">(</span><span class="n">page_location</span><span class="p">),</span> 
		<span class="n">r</span><span class="s1">'(</span><span class="se">\?</span><span class="s1">.*)$'</span><span class="p">,</span> <span class="s1">''</span>
	<span class="p">),</span>
	<span class="n">r</span><span class="s1">'/$'</span><span class="p">,</span> <span class="s1">''</span>
<span class="p">)</span> <span class="k">AS</span> <span class="n">page_location</span><span class="p">,</span>
</code></pre></div></div>
<ul>
  <li>Many times, the <strong>page URL</strong> has different shapes even though it drives the visitors to the exact same page.</li>
  <li>The four URLs below have different values, but they direct you to the same Google main page anyways.
    <ul>
      <li><a href="https://google.com/">https://google.com</a></li>
      <li><a href="https://google.com/">https://google.com/</a></li>
      <li><a href="https://google.com?utm_source=medium">https://google.com?utm_source=medium</a></li>
      <li><a href="https://google.com/?utm_source=medium">https://google.com/?utm_source=medium</a></li>
    </ul>
  </li>
  <li>That’s why I use the <code class="language-plaintext highlighter-rouge">REGEXP_REPLACE</code> function to <strong>drop the useless letters</strong> in data analytics.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FIRST_VALUE</span><span class="p">(</span><span class="n">country</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	<span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	<span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
<span class="p">)</span> <span class="k">AS</span> <span class="n">country</span>
</code></pre></div></div>
<ul>
  <li>Because of some technical problems, one user and session might have multiple countries. (I’m guessing some users might have moved overseas, changed IP Address through VPNs, or GA4’s tech issue itself.) Regarding this issue, I would make a decision to <strong>grab the very first country value</strong> to know where the <code class="language-plaintext highlighter-rouge">user</code> and <code class="language-plaintext highlighter-rouge">session</code> have started.</li>
  <li>Let’s assume a visitor is aboard a plane, and when he/she starts the session the plane is located in the <strong>US</strong>, but when visiting the following page, the plane has just entered the <strong>Canada</strong> area. In this extreme case, we’d rather think of this visitor as starting from the <strong>US</strong>.</li>
</ul>

<h1 id="4-delete-the-consecutive-same-page-url-duplicates-in-the-same-session_id">4. Delete the consecutive same page URL duplicates in the same <code class="language-plaintext highlighter-rouge">session_id</code>.</h1>

<p>In most cases, if a visitor lands on page A, multiple events can happen.</p>
<ul>
  <li>i.e., <code class="language-plaintext highlighter-rouge">session_start</code>, <code class="language-plaintext highlighter-rouge">page_view</code>, <code class="language-plaintext highlighter-rouge">user_engagement</code>, <code class="language-plaintext highlighter-rouge">scroll</code>, and whatnot</li>
</ul>

<p>We need to delete all the same Page URLs triggered consecutively in one session, but <strong>only with the unique page URL</strong>.</p>

<h2 id="41-the-entire-codes">4.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_unique_pages</span> <span class="k">AS</span> <span class="p">(</span>
	<span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">session_number</span><span class="p">,</span>  
        <span class="n">event_name</span><span class="p">,</span>  
        <span class="n">page_location</span><span class="p">,</span>          
        <span class="n">LAG</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">previous_page_location</span><span class="p">,</span>  
        <span class="n">LEAD</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">next_page_location</span><span class="p">,</span>  
        <span class="n">revenue_usd</span><span class="p">,</span>  
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>      
    <span class="k">FROM</span> <span class="p">(</span>  
        <span class="k">SELECT</span>  
            <span class="o">*</span><span class="p">,</span>  
            <span class="k">CASE</span>  
	            <span class="k">WHEN</span> <span class="c1">-- Previous URL IS NULL  </span>
                    <span class="n">previous_page_location</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="s1">'remain'</span>  
                <span class="k">WHEN</span> <span class="c1">-- Previous URL &lt;&gt; Current URL  </span>
                    <span class="n">previous_page_location</span> <span class="o">&lt;&gt;</span> <span class="n">page_location</span> <span class="k">THEN</span> <span class="s1">'remain'</span>  
                <span class="k">WHEN</span> <span class="c1">-- Previous URL = Current URL  </span>
                    <span class="n">previous_page_location</span> <span class="o">=</span> <span class="n">page_location</span> 
                    <span class="k">AND</span> <span class="n">page_location</span> <span class="o">&lt;&gt;</span> <span class="n">next_page_location</span> <span class="k">THEN</span> <span class="s1">'del'</span>  
            <span class="k">END</span> <span class="k">AS</span> <span class="n">remain_or_del</span>  
        <span class="k">FROM</span> <span class="p">(</span>  
            <span class="k">SELECT</span>  
                <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
                <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">session_number</span><span class="p">,</span>  
                <span class="n">event_name</span><span class="p">,</span>
                <span class="n">page_location</span><span class="p">,</span>          
                <span class="n">LAG</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	                <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span>
	                <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="k">AS</span> <span class="n">previous_page_location</span><span class="p">,</span>  
                <span class="n">LEAD</span><span class="p">(</span><span class="n">page_location</span><span class="p">)</span> <span class="n">OVER</span><span class="p">(</span>
	                <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	                <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
                <span class="p">)</span> <span class="k">AS</span> <span class="n">next_page_location</span><span class="p">,</span>  
                <span class="n">revenue_usd</span><span class="p">,</span>  
                <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
                <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
            <span class="k">FROM</span> <span class="n">CTE_properties_spread</span>  
        <span class="p">)</span>  
    <span class="p">)</span>  
    <span class="k">WHERE</span>
	    <span class="n">remain_or_del</span> <span class="o">=</span> <span class="s1">'remain'</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">event_timestamp</span>  
<span class="p">),</span>
</code></pre></div></div>

<p>Here in the query above, I used <code class="language-plaintext highlighter-rouge">LAG</code> and <code class="language-plaintext highlighter-rouge">LEAD</code> window functions <strong>to know whether to delete duplicates</strong> based on the previous page URL and the next page URL.</p>

<h1 id="5-label-each-pages-visiting-order-number-for-each-session">5. Label each page’s visiting order number for each session.</h1>

<p>We can Label <code class="language-plaintext highlighter-rouge">visit_order</code> for each page URL based on the <code class="language-plaintext highlighter-rouge">event_timestamp</code> <strong>in ascending order</strong>.</p>
<ul>
  <li>Here, I used the <code class="language-plaintext highlighter-rouge">ROW_NUMBER</code> window function to do it.</li>
</ul>

<h2 id="51-the-entire-codes">5.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_visit_orders</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span>  
        <span class="n">page_location</span><span class="p">,</span>
        <span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span><span class="p">(</span>
	        <span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span> 
	        <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">event_timestamp</span>
        <span class="p">)</span> <span class="k">AS</span> <span class="n">visit_order</span><span class="p">,</span>  
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_unique_pages</span>  
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">visit_order</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="6-categorize-all-the-pages">6. Categorize all the pages.</h1>

<p>The page URL itself looks dirty since it’s not that human-readable, so here I wanted to <strong>categorize all the pages</strong> existing in the whole domain to <strong>make them literally human-readable</strong>.</p>

<h2 id="61-the-entire-codes">6.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_page_groups</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">event_date</span><span class="p">,</span> <span class="n">event_timestamp</span><span class="p">,</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span>  
        <span class="n">page_location</span><span class="p">,</span>   
        <span class="k">CASE</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com'</span> <span class="k">THEN</span> <span class="s1">'Google Home'</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com/joshua'</span> <span class="k">THEN</span> <span class="s1">'Joshua Intro'</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com/andrew'</span> <span class="k">THEN</span> <span class="s1">'Andrew Intro'</span>  
            <span class="k">WHEN</span> <span class="n">page_location</span> <span class="o">=</span> <span class="s1">'https://google.com/amber'</span> <span class="k">THEN</span> <span class="s1">'Amber Intro'</span>  
            <span class="k">WHEN</span> <span class="n">CONTAINS_SUBSTR</span><span class="p">(</span><span class="n">page_location</span><span class="p">,</span> <span class="s1">'https://google.com/policy'</span><span class="p">)</span> <span class="o">=</span> <span class="k">True</span> <span class="k">THEN</span> <span class="s1">'Policy Pages'</span>  
            <span class="k">WHEN</span> <span class="n">CONTAINS_SUBSTR</span><span class="p">(</span><span class="n">page_location</span><span class="p">,</span> <span class="s1">'https://google.com/events'</span><span class="p">)</span> <span class="o">=</span> <span class="k">True</span> <span class="k">THEN</span> <span class="s1">'Event Pages'</span>  
            <span class="k">ELSE</span> <span class="s1">'ETC'</span>  
        <span class="k">END</span> <span class="k">AS</span> <span class="n">page_group</span><span class="p">,</span>  
        <span class="n">visit_order</span><span class="p">,</span>  
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span>  
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
    <span class="k">FROM</span>
	    <span class="n">CTE_visit_orders</span>
    <span class="k">ORDER</span> <span class="k">BY</span> 
	    <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> <span class="n">visit_order</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="7-pivot-each-sessions-journey-up-to-10-steps">7. Pivot each session’s journey up to 10 steps.</h1>

<h2 id="71-the-entire-codes">7.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CTE_journeys</span> <span class="k">AS</span> <span class="p">(</span>  
    <span class="k">SELECT</span>  
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span>
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> 
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">1</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step01</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">2</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step02</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">3</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step03</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">4</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step04</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">5</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step05</span><span class="p">,</span>          
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">6</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step06</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">7</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step07</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">8</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step08</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">9</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step09</span><span class="p">,</span>  
        <span class="k">MAX</span><span class="p">((</span><span class="k">SELECT</span> <span class="n">page_group</span> <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">SUB</span>  
            <span class="k">WHERE</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">user_pseudo_id</span> <span class="k">AND</span> <span class="n">MAIN</span><span class="p">.</span><span class="n">session_id</span> <span class="o">=</span> <span class="n">SUB</span><span class="p">.</span><span class="n">session_id</span> <span class="k">AND</span> <span class="n">visit_order</span> <span class="o">=</span> <span class="mi">10</span><span class="p">))</span> <span class="k">AS</span> <span class="n">step10</span>  
    <span class="k">FROM</span> <span class="n">CTE_page_groups</span> <span class="n">MAIN</span>  
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="n">user_pseudo_id</span><span class="p">,</span> <span class="n">session_id</span><span class="p">,</span> 
        <span class="n">country</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> 
        <span class="n">utm_campaign</span><span class="p">,</span> <span class="n">utm_medium</span><span class="p">,</span> <span class="n">utm_source</span><span class="p">,</span> <span class="n">page_referrer</span>  
    <span class="k">ORDER</span> <span class="k">BY</span>  
        <span class="n">step01</span><span class="p">,</span> <span class="n">step02</span><span class="p">,</span> <span class="n">step03</span><span class="p">,</span> <span class="n">step04</span><span class="p">,</span> <span class="n">step05</span><span class="p">,</span> 
        <span class="n">step06</span><span class="p">,</span> <span class="n">step07</span><span class="p">,</span> <span class="n">step08</span><span class="p">,</span> <span class="n">step09</span><span class="p">,</span> <span class="n">step10</span>  
<span class="p">),</span>
</code></pre></div></div>

<h1 id="8-make-the-query-result-compatible-with-redash">8. Make the query result compatible with Redash.</h1>

<p>Since <strong>Redash Sankey Chart</strong> has its expected framework and naming rules of the query result, we need to make the final query result in order to fit the rule.</p>

<p><img src="/assets/2023-05-21-sankey-chart/Redash Sankey Visualization’s Constraints.webp" alt="" /></p>
<blockquote>
  <p>Redash Sankey Chart’s Constraints</p>
</blockquote>

<h2 id="81-the-entire-codes">8.1. The Entire Codes</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>  
    <span class="n">step01</span> <span class="k">AS</span> <span class="n">stage1</span><span class="p">,</span>
    <span class="n">step02</span> <span class="k">AS</span> <span class="n">stage2</span><span class="p">,</span> 
    <span class="n">step03</span> <span class="k">AS</span> <span class="n">stage3</span><span class="p">,</span> 
    <span class="n">step04</span> <span class="k">AS</span> <span class="n">stage4</span><span class="p">,</span> 
    <span class="n">step05</span> <span class="k">AS</span> <span class="n">stage5</span><span class="p">,</span>  
    <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value</span>  
<span class="k">FROM</span> 
	<span class="n">CTE_sankey</span>  
<span class="k">GROUP</span> <span class="k">BY</span> 
	<span class="n">step01</span><span class="p">,</span> <span class="n">step02</span><span class="p">,</span> <span class="n">step03</span><span class="p">,</span> <span class="n">step04</span><span class="p">,</span> <span class="n">step05</span>  
<span class="k">HAVING</span> 
	<span class="n">step01</span> <span class="o">=</span> <span class="s1">'Google Home'</span> 
	<span class="k">AND</span> <span class="n">value</span> <span class="o">&gt;=</span> <span class="mi">100</span>  
<span class="k">ORDER</span> <span class="k">BY</span> 
	<span class="n">value</span> <span class="k">DESC</span>
<span class="p">;</span>
</code></pre></div></div>

<h2 id="82-detailed-explanation-of-key-codes">8.2. Detailed Explanation of Key Codes</h2>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">HAVING</span>
	<span class="n">step01</span> <span class="o">=</span> <span class="err">‘</span><span class="n">Google</span> <span class="n">Home</span><span class="err">’</span> 
	<span class="k">AND</span> <span class="n">value</span> <span class="o">&gt;=</span> <span class="mi">100</span>
</code></pre></div></div>

<ul>
  <li>I just wanted to see how the users make their journey who is <strong>starting from Google Home</strong>.</li>
  <li>To make the visualization look simple and not distracting, I ordered the query to show me <strong>the types of user journeys of at least 100 users</strong>.</li>
</ul>

<h1 id="9-final-result">9. Final Result</h1>

<p><img src="/assets/2023-05-21-sankey-chart/Redash returns this kind of Sankey Chart.webp" alt="" /></p>
<blockquote>
  <p>Redash returns this kind of Sankey Chart.</p>
</blockquote>

<h1 id="10-conclusion">10. Conclusion</h1>

<ul>
  <li><strong>Redash Sankey Chart</strong> is much more valuable specifically when you try to figure out how the users make their journey depending on their countries, devices, UTM parameters, referrer pages, and stuff like that.</li>
  <li>It’s superbly complicated to query, but once you make the whole framework queries to return the Sankey table, I believe you can generate more value to do as many actions as possible which wouldn’t have been possible to do before.</li>
  <li>Nevertheless, <strong>Redash Sankey Chart</strong> only supports up to <code class="language-plaintext highlighter-rouge">5 steps</code>, which by that means if your website or app has too many pages and screens, it wouldn’t be enough to look through only 5 steps.</li>
</ul>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="english" /><category term="sql" /><category term="bigquery" /><category term="redash" /><category term="data_visualization" /><summary type="html"><![CDATA[In this article, I’m going to tell you how you can create the Sankey Chart starting from GA4, BigQuery, and up to Redash.]]></summary></entry><entry><title type="html">회귀 모델이 풀 수 없는 문제</title><link href="http://localhost:4000/when-regression-does-not-work/" rel="alternate" type="text/html" title="회귀 모델이 풀 수 없는 문제" /><published>2022-12-25T00:00:00+09:00</published><updated>2022-12-25T00:00:00+09:00</updated><id>http://localhost:4000/when-regression-does-not-work</id><content type="html" xml:base="http://localhost:4000/when-regression-does-not-work/"><![CDATA[<blockquote>
  <p>이번 아티클에서는 회귀모델(Regression Model)이 어떤 경우에 저조한 성과를 내는지, 더 나아가 Dataset이 어떤 특성을 지닐 때 회귀모델로 해당 문제를 풀어낼 수 없는지 필자가 경험한 바를 서술해보고자 한다.</p>
</blockquote>

<h3 id="contents">CONTENTS</h3>
<ol>
  <li>Introduction</li>
  <li>프로젝트 배경과 주제
    <ul>
      <li>2.1. 연구 주제</li>
      <li>2.2. 산업 현황 및 연구 목적</li>
      <li>2.3. 연구 문제 및 실험 정의</li>
    </ul>
  </li>
  <li>데이터 소개와 변수 정의
    <ul>
      <li>3.1. 데이터 톺아보기</li>
      <li>3.2. 122,400개의 인스턴스로 구성된 데이터</li>
      <li>3.3. 변수 정의</li>
    </ul>
  </li>
  <li>Data Preprocessing &amp; EDA
    <ul>
      <li>4.1. 변수명 Renaming</li>
      <li>4.2. Data Preprocessing</li>
      <li>4.3. EDA</li>
    </ul>
  </li>
  <li>Modeling
    <ul>
      <li>5.1. Simple Linear Regression (v1)</li>
      <li>5.2. Simple Linear Regression (v2) — “day” 변수 제외</li>
      <li>5.3. Polynomial Regression (v1) — “degree=2”</li>
      <li>5.4. Polynomial Regression (v2) — “degree=3”</li>
      <li>5.5. Polynomial Regression (v3) — “degree=4”</li>
      <li>5.6. Polynomial Regression (v4) — “degree=5”</li>
    </ul>
  </li>
  <li>Conclusion
    <ul>
      <li>6.1. Regression Model 외의 모델이 필요하다!</li>
      <li>6.2. Regression Model이 해당 Dataset 학습에 적절한 모델이 아님을 파악하는 방법은?</li>
    </ul>
  </li>
</ol>

<hr />

<p><img src="/assets/2022-12-25-when-regression-does-not-work/calculator.webp" alt="" /></p>

<h1 id="1-introduction">1. Introduction</h1>

<p>머신러닝과 딥러닝 알고리즘을 공부하신 분들이라면 누구나 아는 이야기이지만, 데이터 사이언스에서 가장 중요한 지침이 있다.</p>

<blockquote>
  <p>“어느 특정 모델이 모든 경우에 항상 우월한 퍼포먼스를 지니지 않는다.”</p>
</blockquote>

<p>즉, 아무리 복잡하고 인기가 많은 모델이더라도 데이터셋의 특성에 따라 우월한 Metric을 낳을 수도 있고, 혹은 저조한 Metric을 낳을 수도 있다. (그래서 모델링 작업에서 가장 중요한 것은 다름 아닌, Dataset에 대한 이해이기도 하다.)</p>

<p>이번 아티클에서는 회귀모델(Regression Model)이 어떤 경우에 저조한 성과를 내는지, 더 나아가 Dataset이 어떤 특성을 지닐 때 회귀모델로 해당 문제를 풀어낼 수 없는지 필자가 경험한 바를 서술해보고자 한다.</p>

<p>회귀모델 학습 실험을 하다가 우연히 직관적으로 알게 된 추측성 결론이었지만, 통계학 교수님으로부터 타당성을 인정 받았기 때문에 본 내용은 충분히 공개해도 되리라 생각한다. (교수님, 사랑합니다.)</p>

<h1 id="2-프로젝트-배경과-주제">2. 프로젝트 배경과 주제</h1>

<h2 id="21-연구-주제">2.1. 연구 주제</h2>

<blockquote>
  <p>“기상 정보를 통한 전력 사용량 예측 모델 구축하기”</p>
</blockquote>

<h2 id="22-산업-현황-및-연구-목적">2.2. 산업 현황 및 연구 목적</h2>

<h3 id="1-한국의-전력-사용량은-매해-증가하는-추세">(1) 한국의 전력 사용량은 매해 증가하는 추세</h3>
<ul>
  <li>30년 전 대비 5배 이상 높아진 수준</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/korea.webp" alt="" /></p>
<blockquote>
  <p><a href="https://yearbook.enerdata.co.kr/electricity/electricity-domestic-consumption-data.html">electricity domestic consumption data</a></p>
</blockquote>

<h3 id="2-한국의-전기료는-oecd-회원국들의-50에-미치지-못할-정도로-저렴한-수준">(2) 한국의 전기료는 OECD 회원국들의 50%에 미치지 못할 정도로 저렴한 수준</h3>
<ul>
  <li>전력 사용량은 증가하는 반면, 상대적으로 낮게 책정된 전기료 수준</li>
  <li>에너지 비용 모니터링 &amp; 예측 서비스를 도입하여 시장경쟁력 확보의 필요성</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/countries.webp" alt="" /></p>
<blockquote>
  <p><a href="https://home.kepco.co.kr/kepco/EB/A/htmlView/EBAAHP007.do">OECD 회원국의 가정용 &amp; 산업용 전기요금</a></p>
</blockquote>

<h3 id="3-한국의-전력-사용량은-여름철-증가하는-계절적-주기성이-존재함">(3) 한국의 전력 사용량은 여름철 증가하는 계절적 주기성이 존재함</h3>
<ul>
  <li>공급량 조절이 쉽지 않은 도메인 특성을 고려했을 때, 전력 사용량을 예측하여 효율적인 에너지 관리 방안 도입의 필요성</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/monthly.webp" alt="" /></p>
<blockquote>
  <p><a href="https://epsis.kpx.or.kr/epsisnew/selectEkgeEpsAepChart.do?menuId=030200">월별 평균 최대전력</a></p>
</blockquote>

<h2 id="23-연구-문제-및-실험-정의">2.3. 연구 문제 및 실험 정의</h2>

<blockquote>
  <p>“기상 데이터를 통해 <strong>전력사용량</strong> 예측 모델을 설계하고자 한다.”</p>
</blockquote>

<pre><code class="language-plain">	전력사용량 ~ 기온  
	전력사용량 ~ 풍속  
	전력사용량 ~ 습도  
	전력사용량 ~ 강수량  
	전력사용량 ~ 일조  
	전력사용량 ~ (건물 내) 비전기냉방설비운영 여부  
	전력사용량 ~ (건물 내) 태양광 보유 여부
</code></pre>

<h1 id="3-데이터-소개와-변수-정의">3. 데이터 소개와 변수 정의</h1>

<h2 id="31-데이터-톺아보기">3.1. 데이터 톺아보기</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>
<p><img src="/assets/2022-12-25-when-regression-does-not-work/df.head().webp" alt="" /></p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">df</span><span class="p">.</span><span class="n">tail</span><span class="p">()</span>
</code></pre></div></div>
<p><img src="/assets/2022-12-25-when-regression-does-not-work/df.tail().webp" alt="" /></p>

<h2 id="32-122400개의-인스턴스로-구성된-데이터">3.2. 122,400개의 인스턴스로 구성된 데이터</h2>

<ul>
  <li>60개의 건물별 (<code class="language-plaintext highlighter-rouge">num</code>)로 구성</li>
  <li>2020년 6월 1일부터 2020년 8월 24일까지의 엔지니어링 데이터로 구성</li>
  <li>측정 데이터의 Unit: 1시간</li>
</ul>

<h2 id="33-변수-정의">3.3. 변수 정의</h2>

<table>
  <thead>
    <tr>
      <th><strong>변수</strong></th>
      <th><strong>설명</strong></th>
      <th><strong>변수 타입</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">num</code></td>
      <td>건물번호 (1&lt;= Integer &lt;= 60)</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">date_time</code></td>
      <td>YYYY-MM-DD HH</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">전력사용량(kWh)</code></td>
      <td>전력사용량 (킬로와트시)</td>
      <td><code class="language-plaintext highlighter-rouge">y</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">기온(°C)</code></td>
      <td>섭씨 기온 (Celsius Degree)</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">풍속(m/s)</code></td>
      <td>풍속 (초당 미터 속도)</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">습도(%)</code></td>
      <td>습도</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">강수량(mm)</code></td>
      <td>강수량</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">일조(hr)</code></td>
      <td>1시간 중 일조량이 존재한 시간 (0.0 &lt;= Float &lt;= 1.0)</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">비전기냉방설비운영</code></td>
      <td>운영 여부 Boolean 표현 (0: False, 1: True)</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">태양광보유</code></td>
      <td>보유 여부 Boolean 표현 (0: False, 1: True)</td>
      <td><code class="language-plaintext highlighter-rouge">x</code></td>
    </tr>
  </tbody>
</table>

<h1 id="4-data-preprocessing--eda">4. Data Preprocessing &amp; EDA</h1>

<h2 id="41-변수명-renaming">4.1. 변수명 Renaming</h2>

<table>
  <thead>
    <tr>
      <th>AS-IS</th>
      <th>TO-BE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">num</code></td>
      <td><code class="language-plaintext highlighter-rouge">building_num</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">date_time</code></td>
      <td><code class="language-plaintext highlighter-rouge">date_time</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">전력사용량(kWh)</code></td>
      <td><code class="language-plaintext highlighter-rouge">target</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">기온(°C)</code></td>
      <td><code class="language-plaintext highlighter-rouge">temp_celsius</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">풍속(m/s)</code></td>
      <td><code class="language-plaintext highlighter-rouge">wind_speed</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">습도(%)</code></td>
      <td><code class="language-plaintext highlighter-rouge">humidity</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">강수량(mm)</code></td>
      <td><code class="language-plaintext highlighter-rouge">rain</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">일조(hr)</code></td>
      <td><code class="language-plaintext highlighter-rouge">sunshine</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">비전기냉방설비운영</code></td>
      <td><code class="language-plaintext highlighter-rouge">nature_ac</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">태양광보유</code></td>
      <td><code class="language-plaintext highlighter-rouge">sunpower</code></td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>고통스러운 한글 인코딩 문제는 언제 어디에서 터질지 모른다.</p>
</blockquote>

<h2 id="42-data-preprocessing">4.2. Data Preprocessing</h2>

<h3 id="1-target-전력사용량">(1) <code class="language-plaintext highlighter-rouge">target</code> (전력사용량)</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">target</code>의 분포: “Positive Skewness” (양의 왜도, 오른쪽 꼬리가 길다.)</li>
  <li>Model Fitting의 효과를 향상시키기 위해, 다음과 같이 변환하자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="c1"># Train할 때  
</span>	<span class="n">target</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">target</span><span class="p">)</span>  
	<span class="c1"># Predict할 때  
</span>	<span class="n">target</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">target</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span>
</code></pre></div></div>

<p><strong>[변환 전] Distribution of Target Values</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/변환 전- Distribution of Target Values.webp" alt="" /></p>
<blockquote>
  <p>이러한 분포는 자연현상과 사회현상에서 흔히 나타나는데, Model의 Overfitting 문제에 매우 취약하다.</p>
</blockquote>

<p><strong>[변환 후] Distribution of Target Values</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/변환 후- Distribution of Target Values.webp" alt="" /></p>
<blockquote>
  <p>Gotcha! 어느 정도 정규성을 확보했군…</p>
</blockquote>

<h3 id="2-building_num-건물번호">(2) <code class="language-plaintext highlighter-rouge">building_num</code> (건물번호)</h3>

<ul>
  <li>Integer Type (1 ≤ <code class="language-plaintext highlighter-rouge">building_num</code> ≤ 60)</li>
  <li>도메인 지식을 고려했을 때, 건물 별로 전력 설계 파이프라인, 건물의 위치 등에 따라 전력사용량이 국지적으로 큰 차이가 발생할 것이다.</li>
</ul>

<p><strong>각 60개 building_num별 Distribution of Target Values</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">if</span> <span class="n">skewness</span> <span class="o">&gt;=</span> <span class="mf">1.5</span><span class="p">:</span>  
	<span class="n">color</span> <span class="o">=</span> <span class="sh">'</span><span class="s">red</span><span class="sh">'</span>  
	<span class="k">elif</span> <span class="n">skewness</span> <span class="o">&lt;</span> <span class="o">-</span><span class="mf">1.5</span><span class="p">:</span>  
	<span class="n">color</span> <span class="o">=</span> <span class="sh">'</span><span class="s">blue</span><span class="sh">'</span>  
	<span class="k">else</span><span class="p">:</span>  
	<span class="n">color</span> <span class="o">=</span> <span class="sh">'</span><span class="s">grey</span><span class="sh">'</span>
</code></pre></div></div>
<p><img src="/assets/2022-12-25-when-regression-does-not-work/각 60개 building_num별 Distribution of Target Values.webp" alt="" /></p>

<p><strong>1부터 60까지는 Ordinal이라기보다는, Cardinal한 Label이므로, 모델이 값의 우열이 있는 것으로 오해할 수 있다. 그래서 One Hot Encoding을 통해 각 <code class="language-plaintext highlighter-rouge">building_num</code>을 dummy화하도록 한다.</strong></p>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/building_num.webp" alt="" /></p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">building_num</code>이 사라지고, <code class="language-plaintext highlighter-rouge">building_#</code>의 <strong>Scarse Vectors</strong>로 대체되었다.</p>
</blockquote>

<h3 id="3-date_time-yyyy-mm-dd-hh">(3) <code class="language-plaintext highlighter-rouge">date_time</code> (YYYY-MM-DD HH)</h3>

<ul>
  <li>YYYY-MM-DD HH 포맷이 String data type으로 되어 있으므로, 이를 변환해야 한다.</li>
  <li><code class="language-plaintext highlighter-rouge">Year</code>, <code class="language-plaintext highlighter-rouge">Month</code>, <code class="language-plaintext highlighter-rouge">Day</code>, <code class="language-plaintext highlighter-rouge">Hour</code>: 기상 혹은 기후 현상과 상관성이 있는 정보</li>
  <li>Day of Week (DoW): <code class="language-plaintext highlighter-rouge">date_time</code>에는 직접적으로 표기되어 있지 않으나, 전력사용량의 주기성을 지니고 있는 정보이므로 새롭게 생성하도록 한다.</li>
  <li>본 Dataset에서는 <code class="language-plaintext highlighter-rouge">Year</code>가 ‘2020’ 한 가지만 존재하므로, <code class="language-plaintext highlighter-rouge">Year</code> 변수는 삭제하도록 한다.</li>
</ul>

<p><strong>변환 결과</strong></p>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/date_time.webp" alt="" /></p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">date_time</code>은 사라지고, <code class="language-plaintext highlighter-rouge">month</code>, <code class="language-plaintext highlighter-rouge">day</code>, <code class="language-plaintext highlighter-rouge">hour</code>, <code class="language-plaintext highlighter-rouge">dow</code>가 생성되었다.</p>
</blockquote>

<h2 id="43-eda">4.3. EDA</h2>

<h3 id="1-correlation-coefficient-상관계수">(1) Correlation Coefficient (상관계수)</h3>

<p><strong>Heat Map</strong></p>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/heat-map.webp" alt="" /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">humidity</code>(습도) ~ <code class="language-plaintext highlighter-rouge">temp_celsius</code>(섭씨온도)
    <ul>
      <li>상관계수: <code class="language-plaintext highlighter-rouge">-0.5091</code></li>
      <li>약한 음의 상관관계를 가진다고 보는 것이 맞아보인다.</li>
    </ul>
  </li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/humidity(습도) ~ temp_celsius(섭씨온도).webp" alt="" /></p>
<blockquote>
  <p>humidity(습도) ~ temp_celsius(섭씨온도)</p>
</blockquote>

<ul>
  <li><code class="language-plaintext highlighter-rouge">sunshine</code>(일조) ~ <code class="language-plaintext highlighter-rouge">temp_celsius</code>(섭씨온도)
    <ul>
      <li>상관계수: <code class="language-plaintext highlighter-rouge">+0.5157</code></li>
      <li>약한 양의 상관관계를 가진다고 보는 것이 맞아보인다.</li>
      <li>하나는 categorical, 다른 하나는 numeric 이므로 둘 중 하나를 drop할 수 없다.</li>
    </ul>
  </li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/sunshine(일조) ~ temp_celsius(섭씨온도).webp" alt="" /></p>
<blockquote>
  <p>sunshine(일조) ~ temp_celsius(섭씨온도)</p>
</blockquote>

<ul>
  <li><code class="language-plaintext highlighter-rouge">sunshine</code>(일조) ~ <code class="language-plaintext highlighter-rouge">humidity</code>(습도)
    <ul>
      <li>상관계수: <code class="language-plaintext highlighter-rouge">-0.6276</code></li>
      <li>약한 음의 상관관계를 가진다고 보는 것이 맞아보인다.</li>
      <li>하나는 categorical, 다른 하나는 numeric 이므로 둘 중 하나를 drop할 수 없다.</li>
    </ul>
  </li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/sunshine(일조) ~ humidity(습도).webp" alt="" /></p>
<blockquote>
  <p>sunshine(일조) ~ humidity(습도)</p>
</blockquote>

<h3 id="2-pairplot">(2) Pairplot</h3>

<p><strong><code class="language-plaintext highlighter-rouge">building_{##}</code> 변수들을 제외한 채 visualize pairplot</strong></p>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/pairplot.webp" alt="" /></p>
<blockquote>
  <p>특정 하나의 독립변수가 Target에 절대적인 상관관계를 가지는 것이 관측되지 않는다.</p>
</blockquote>

<h3 id="3-각-독립변수들의-distribution-of-values">(3) 각 독립변수들의 Distribution of Values</h3>

<p><strong><code class="language-plaintext highlighter-rouge">temp_celsius</code> (섭씨온도)</strong></p>
<ul>
  <li>비선형 변환 불필요</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/temp_celsius (섭씨온도).webp" alt="" /></p>
<blockquote>
  <p>AS-IS</p>
</blockquote>

<p><strong><code class="language-plaintext highlighter-rouge">wind_speed</code> (풍속)</strong></p>
<ul>
  <li>log 변환 필요</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/wind_speed (풍속)-before-log.webp" alt="" /></p>
<blockquote>
  <p>AS-IS</p>
</blockquote>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/wind_speed (풍속)-after-log.webp" alt="" /></p>
<blockquote>
  <p>TO-BE</p>
</blockquote>

<p><strong><code class="language-plaintext highlighter-rouge">humidity</code> (습도)</strong></p>
<ul>
  <li>square root 변환 필요</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/humidity (습도)-before-sqr.webp" alt="" /></p>
<blockquote>
  <p>AS-IS</p>
</blockquote>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/humidity (습도)-after-sqr.webp" alt="" /></p>
<blockquote>
  <p>TO-BE</p>
</blockquote>

<p><strong><code class="language-plaintext highlighter-rouge">rain</code> (강수량)</strong></p>
<ul>
  <li>log 변환 필요</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/rain (강수량)-before-log.webp" alt="" /></p>
<blockquote>
  <p>AS-IS</p>
</blockquote>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/rain (강수량)-after-log.webp" alt="" /></p>
<blockquote>
  <p>TO-BE</p>
</blockquote>

<h3 id="4-다중공선성multi-collinearity-확인">(4) 다중공선성(Multi-collinearity) 확인</h3>

<p><strong>VIF ≥ 10 에 해당하는 독립변수는 학습시 제외하도록 한다.</strong></p>

<ul>
  <li><strong>“Variance Inflation Factors (분산팽창요인)”란?</strong>
    <blockquote>
      <p>특정 변수와 이미 높은 상관관계를 가짐으로써, 모델의 Overfitting에 영향을 끼칠 수 있는지를 측정하는 지표
일반적으로 VIF &gt;= 5인 경우는 warning 신호, VIF &gt;=10인 경우는 삭제 필요 신호</p>
    </blockquote>
  </li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/vif.webp" alt="" /></p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">nature_ac</code>, <code class="language-plaintext highlighter-rouge">sunpower</code>는 각 <code class="language-plaintext highlighter-rouge">building_##</code>의 변수와 매우 높은 상관관계를 가지기 때문에 <strong>VIF = Infinite</strong>인 결과를 확인할 수 있었다.</p>
</blockquote>

<h3 id="5-outliers-handling">(5) Outliers Handling</h3>

<blockquote>
  <p>“평균값으로부터 <strong>3 Sigma</strong> 이상 편차가 발생하는 인스턴스를 모두 삭제하도록 한다.”</p>
</blockquote>

<p><strong>Box Plot of <code class="language-plaintext highlighter-rouge">temp_celsius</code></strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Box Plot of temp_celsius.webp" alt="" /></p>
<blockquote>
  <p>Box Plot of <code class="language-plaintext highlighter-rouge">temp_celsius</code></p>
</blockquote>

<p><strong>Box Plot of <code class="language-plaintext highlighter-rouge">wind_speed</code></strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Box Plot of wind_speed.webp" alt="" /></p>
<blockquote>
  <p>Box Plot of <code class="language-plaintext highlighter-rouge">wind_speed</code></p>
</blockquote>

<p><strong>Box Plot of <code class="language-plaintext highlighter-rouge">humidity</code></strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Box Plot of humidity.webp" alt="" /></p>
<blockquote>
  <p>Box Plot of <code class="language-plaintext highlighter-rouge">humidity</code></p>
</blockquote>

<p><strong>Box Plot of <code class="language-plaintext highlighter-rouge">rain</code></strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Box Plot of rain.webp" alt="" /></p>
<blockquote>
  <p>Box Plot of <code class="language-plaintext highlighter-rouge">rain</code></p>
</blockquote>

<p><strong>Box Plot of <code class="language-plaintext highlighter-rouge">sunshine</code></strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Box Plot of sunshine.webp" alt="" /></p>
<blockquote>
  <p>Box Plot of <code class="language-plaintext highlighter-rouge">sunshine</code></p>
</blockquote>

<p><strong>Box Plot of <code class="language-plaintext highlighter-rouge">month</code>, <code class="language-plaintext highlighter-rouge">day</code>, <code class="language-plaintext highlighter-rouge">hour</code>, and <code class="language-plaintext highlighter-rouge">dow</code></strong></p>
<ul>
  <li>date_time 형식으로 이미 outliers 없이 골고루 분포되어 있으므로, Outliers Handling 불필요</li>
</ul>

<p><strong>“StandardScaler 모듈을 사용하여 모든 독립변수들을 정규화한다.”</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Box Plot of month, day, hour, and dow.webp" alt="" /></p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">mean = 0</code>, <code class="language-plaintext highlighter-rouge">std = 1</code>의 <strong>표준정규분포</strong>로 변환</p>
</blockquote>

<ul>
  <li>“<code class="language-plaintext highlighter-rouge">-3 ≤ Scaled Value ≤ +3</code>이 아닌 Feature가 1개라도 존재하는 인스턴스의 개수”
    <ul>
      <li>5,589개 (약 <code class="language-plaintext highlighter-rouge">4.57%</code>)</li>
      <li>이 정도의 데이터 손실이라면, 오히려 제거를 하는 것이 Training에 유익한 결과를 낳을 것이다.</li>
    </ul>
  </li>
</ul>

<p><strong>Pair Plot (After Removing All the Outliers)</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Pair Plot (After Removing All the Outliers).webp" alt="" /></p>
<blockquote>
  <p>데이터의 국지적인 경향성이 상당 부분 제거가 되었다.</p>
</blockquote>

<h1 id="5-modeling">5. Modeling</h1>

<h2 id="51-simple-linear-regression-v1">5.1. Simple Linear Regression (v1)</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">(</span><span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>  
	<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input</span><span class="p">,</span> <span class="n">data_target</span><span class="p">)</span>  
	<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">R-squared:</span><span class="sh">'</span><span class="p">,</span> <span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">data_input</span><span class="p">,</span> <span class="n">data_target</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
</code></pre></div></div>

<h3 id="1-target-잔차-분석">(1) Target 잔차 분석</h3>
<p><img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v1)-Target 잔차분석.webp" alt="" /></p>
<blockquote>
  <p>[Residuals Plot] 잔차가 특정 패턴 없이 정규성을 잘 따르고 있는 것 같은데?</p>
</blockquote>

<h3 id="2-각-독립변수-잔차분석">(2) 각 독립변수 잔차분석</h3>

<blockquote>
  <p>오차항의 이분산성(heteroscedasticity) 없이, <strong>잔차가 정규분포를 가장 잘 따르고 있다.</strong>
따라서 Polynomial or Logarithm을 즉각 적용해야 한다기보다, Regression Model 자체의 성능이 안 좋다는 것을 의미한다.</p>
</blockquote>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v1)-각 독립변수 잔차분석.webp" alt="" /></p>
<blockquote>
  <p>[Residuals Plot] 잔차가 특정 패턴 없이 정규성을 잘 따르고 있는 것 같은데?</p>
</blockquote>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v1)-qq plot.webp" alt="" /></p>
<blockquote>
  <p>[QQ Plot] 잔차의 분포가 정규분포에 가장 가깝네?</p>
</blockquote>

<h3 id="3-model-summary">(3) Model Summary</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">model</span> <span class="o">=</span> <span class="n">smf</span><span class="p">.</span><span class="nf">ols</span><span class="p">(</span>  
	<span class="sh">'</span><span class="s">target</span><span class="sh">'</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> ~ </span><span class="sh">'</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> + </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">data_input</span><span class="p">.</span><span class="n">columns</span><span class="p">),</span>  
	<span class="n">data</span> <span class="o">=</span> <span class="n">data_df</span>  
	<span class="p">).</span><span class="nf">fit</span><span class="p">()</span>
</code></pre></div></div>
<blockquote>
  <p><strong>F-test의 <code class="language-plaintext highlighter-rouge">p-value ≤ 0.05</code></strong>: 적어도 하나의 독립변수가 종속변수와 상관관계가 있다는 아주 강한 근거가 있다.<br />
<strong>R-squared</strong>: 지나치게 낮아서 본 모델의 설명력이 <code class="language-plaintext highlighter-rouge">7.80%</code> 밖에 없다.</p>
</blockquote>

<h3 id="4-model의-train-result--유의성-지표">(4) Model의 Train Result &amp; 유의성 지표</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v1)-result1.webp" alt="" /></p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">day</code> 변수 <strong>T-test의 <code class="language-plaintext highlighter-rouge">p-value ≥ 0.05</code></strong>: 제거하여 Refit Model 필요성이 있다.</p>
</blockquote>

<h3 id="5-독립변수별-train-result--유의성-지표">(5) 독립변수별 Train Result &amp; 유의성 지표</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v1)-result2.webp" alt="" /></p>

<h2 id="52-simple-linear-regression-v2--day-변수-제외">5.2. Simple Linear Regression (v2) — “day” 변수 제외</h2>

<h3 id="1-model-summary">(1) Model Summary</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">model</span> <span class="o">=</span> <span class="n">smf</span><span class="p">.</span><span class="nf">ols</span><span class="p">(</span>  
	    <span class="sh">'</span><span class="s">target</span><span class="sh">'</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> ~ </span><span class="sh">'</span> <span class="o">+</span> <span class="sh">'</span><span class="s"> + </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">data_input</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="nf">drop</span><span class="p">([</span><span class="sh">'</span><span class="s">day</span><span class="sh">'</span><span class="p">])),</span>  
	    <span class="n">data</span> <span class="o">=</span> <span class="n">data_df</span>  
	<span class="p">).</span><span class="nf">fit</span><span class="p">()</span>
</code></pre></div></div>
<blockquote>
  <p><strong>F-test의 <code class="language-plaintext highlighter-rouge">p-value ≤ 0.05</code></strong>: 적어도 하나의 독립변수가 종속변수와 상관관계가 있다는 아주 강한 근거가 있다.<br />
<strong>R-squared</strong>: 지나치게 낮아서 본 모델의 설명력이 <code class="language-plaintext highlighter-rouge">7.80%</code> 밖에 없다.</p>
</blockquote>

<h3 id="2-model의-train-result--유의성-지표">(2) Model의 Train Result &amp; 유의성 지표</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v2)-result1.webp" alt="" /></p>
<blockquote>
  <p>모든 변수가 T-test를 통과한다. (<strong>Confidence Level = <code class="language-plaintext highlighter-rouge">95%</code></strong>)</p>
</blockquote>

<h3 id="3-독립변수별-train-result--유의성-지표">(3) 독립변수별 Train Result &amp; 유의성 지표</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v2)-result2.webp" alt="" /></p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">day</code> 변수를 제외했음에도 불구하고, 모델의 설명력이 전혀 개선되지 않는다.
따라서, 본 Dataset에서는 <strong>Simple Linear Regression의 Training Capacity 자체가 매우 낮은 의미</strong>로 이해된다.</p>
</blockquote>

<h2 id="53-polynomial-regression-v1--degree2">5.3. Polynomial Regression (v1) — “degree=2”</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">poly</span> <span class="o">=</span> <span class="nc">PolynomialFeatures</span><span class="p">(</span><span class="n">degree</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>  
	<span class="n">poly</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	<span class="n">data_input_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	  
	<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">(</span><span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>  
	<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">)</span>  
	<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">R-squared:</span><span class="sh">'</span><span class="p">,</span> <span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>  
	<span class="c1"># &gt; R-squared: 0.1127
</span></code></pre></div></div>

<h3 id="1-잔차분석">(1) 잔차분석</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Polynomial Regression (v1)-잔차분석.webp" alt="" /></p>
<blockquote>
  <p>Polynomial Regression (v1) — “degree=2”</p>
</blockquote>

<h2 id="54-polynomial-regression-v2--degree3">5.4. Polynomial Regression (v2) — “degree=3”</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">poly</span> <span class="o">=</span> <span class="nc">PolynomialFeatures</span><span class="p">(</span><span class="n">degree</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>  
	<span class="n">poly</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	<span class="n">data_input_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	  
	<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">(</span><span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>  
	<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">)</span>  
	<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">R-squared:</span><span class="sh">'</span><span class="p">,</span> <span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>  
	<span class="c1"># &gt; R-squared: 0.1362
</span></code></pre></div></div>

<h3 id="1-잔차분석-1">(1) 잔차분석</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Polynomial Regression (v2)-잔차분석.webp" alt="" /></p>
<blockquote>
  <p>Polynomial Regression (v2) — “degree=3”</p>
</blockquote>

<h2 id="55-polynomial-regression-v3--degree4">5.5. Polynomial Regression (v3) — “degree=4”</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">poly</span> <span class="o">=</span> <span class="nc">PolynomialFeatures</span><span class="p">(</span><span class="n">degree</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>  
	<span class="n">poly</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	<span class="n">data_input_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	  
	<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">(</span><span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>  
	<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">)</span>  
	<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">R-squared:</span><span class="sh">'</span><span class="p">,</span> <span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>  
	<span class="c1"># &gt; R-squared: 0.1597
</span></code></pre></div></div>

<h3 id="1-잔차분석-2">(1) 잔차분석</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Polynomial Regression (v3)-잔차분석.webp" alt="" /></p>
<blockquote>
  <p>Polynomial Regression (v3) — “degree=4”</p>
</blockquote>

<h2 id="56-polynomial-regression-v4--degree5">5.6. Polynomial Regression (v4) — “degree=5”</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">poly</span> <span class="o">=</span> <span class="nc">PolynomialFeatures</span><span class="p">(</span><span class="n">degree</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>  
	<span class="n">poly</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	<span class="n">data_input_poly</span> <span class="o">=</span> <span class="n">poly</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">data_input</span><span class="p">)</span>  
	  
	<span class="n">lr</span> <span class="o">=</span> <span class="nc">LinearRegression</span><span class="p">(</span><span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>  
	<span class="n">lr</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">)</span>  
	<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">R-squared:</span><span class="sh">'</span><span class="p">,</span> <span class="n">lr</span><span class="p">.</span><span class="nf">score</span><span class="p">(</span><span class="n">data_input_poly</span><span class="p">,</span> <span class="n">data_target</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>  
	<span class="c1"># &gt; R-squared: 0.1806
</span></code></pre></div></div>

<h3 id="1-잔차분석-3">(1) 잔차분석</h3>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/Polynomial Regression (v4)-잔차분석.webp" alt="" /></p>
<blockquote>
  <p>Polynomial Regression (v4) — “degree=5”</p>
</blockquote>

<h1 id="6-conclusion">6. Conclusion</h1>

<h2 id="61-regression-model-외의-모델이-필요하다">6.1. Regression Model 외의 모델이 필요하다!</h2>

<h3 id="1-modeling-results">(1) Modeling Results</h3>

<table>
  <thead>
    <tr>
      <th><strong>회귀 모델</strong></th>
      <th><strong>특이사항</strong></th>
      <th><strong>R-squared</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Simple Linear Regression</td>
      <td>모든 독립변수 포함</td>
      <td><code class="language-plaintext highlighter-rouge">0.0780</code></td>
    </tr>
    <tr>
      <td>Simple Linear Regression</td>
      <td><code class="language-plaintext highlighter-rouge">day</code> 독립변수 제외</td>
      <td><code class="language-plaintext highlighter-rouge">0.0780</code></td>
    </tr>
    <tr>
      <td>Polynomial Regression</td>
      <td>Up to 2nd Degree</td>
      <td><code class="language-plaintext highlighter-rouge">0.1127</code></td>
    </tr>
    <tr>
      <td>Polynomial Regression</td>
      <td>Up to 3rd Degree</td>
      <td><code class="language-plaintext highlighter-rouge">0.1362</code></td>
    </tr>
    <tr>
      <td>Polynomial Regression</td>
      <td>Up to 4th Degree</td>
      <td><code class="language-plaintext highlighter-rouge">0.1597</code></td>
    </tr>
    <tr>
      <td>Polynomial Regression</td>
      <td>Up to 5th Degree</td>
      <td><code class="language-plaintext highlighter-rouge">0.1806</code></td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>아무리 Capacity를 높여도 모델의 설명력이 극적으로 개선되지 않았다!</p>
</blockquote>

<h3 id="2-model-capacity">(2) Model Capacity</h3>

<ul>
  <li><strong>Model Capacity란?</strong>
    <blockquote>
      <p><strong>모델 용량</strong>: 다양한 차원의 관계성을 학습할 수 있는 능력 (The ability to fit a variety of functions)
🌝 간단히, 모델의 학습 가능 차수(차원)로 불리기도 함</p>
    </blockquote>
  </li>
  <li><strong>Models with Low Capacity</strong>: 학습 자체가 어려워진다. (<code class="language-plaintext highlighter-rouge">Underfitting</code> 문제)</li>
  <li>
    <p><strong>Models with High Capacity</strong>: Memory Effect의 부정적 효과가 발생한다. (<code class="language-plaintext highlighter-rouge">Overfitting</code> 문제)</p>
  </li>
  <li><strong>Tree</strong>, <strong>Ensemble</strong>, <strong>Time-series</strong> 계열의 ML 모델들을 통해 접근하는 것이 적절해 보인다.</li>
</ul>

<p><img src="/assets/2022-12-25-when-regression-does-not-work/dacon.webp" alt="" /></p>
<blockquote>
  <p><a href="https://dacon.io/competitions/official/235736/data">사실 이 Dataset은 Dacon에서 가져왔는데, Regression Model로 접근하는 사람들은 단 한 명도 없었다.</a></p>
</blockquote>

<h2 id="62-regression-model이-해당-dataset-학습에-적절한-모델이-아님을-파악하는-방법은">6.2. Regression Model이 해당 Dataset 학습에 적절한 모델이 아님을 파악하는 방법은?</h2>

<h3 id="1-simple-linear-regression의-잔차가-이분산성-없이-정규성을-매우-잘-따르는데도-r-squared-값이-매우-저조하다">(1) Simple Linear Regression의 잔차가 이분산성 없이 정규성을 매우 잘 따르는데도, <code class="language-plaintext highlighter-rouge">R-squared</code> 값이 매우 저조하다.</h3>

<p><strong>Simple Linear Regression: Target 잔차 분석</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v1)-Target 잔차분석.webp" alt="" /></p>

<p><strong>Simple Linear Regression: Target QQ Plot</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Simple Linear Regression (v1)-qq plot.webp" alt="" /></p>

<h3 id="2-polynomial-regression의-degree를-높여도-잔차-자체가-개선되지-않는다">(2) Polynomial Regression의 <code class="language-plaintext highlighter-rouge">Degree</code>를 높여도 잔차 자체가 개선되지 않는다.</h3>

<p><strong><code class="language-plaintext highlighter-rouge">Degree=2</code>인 Polynomial Regression의 각 독립변수별 잔차</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Polynomial Regression (v1)-잔차분석.webp" alt="" /></p>

<p><strong><code class="language-plaintext highlighter-rouge">Degree=5</code>인 Polynomial Regression의 각 독립변수별 잔차</strong>
<img src="/assets/2022-12-25-when-regression-does-not-work/Polynomial Regression (v4)-잔차분석.webp" alt="" /></p>

<hr />

<h2 id="published-by-joshua-kim"><em>Published by</em> Joshua Kim</h2>
<p><img src="/assets/profile/joshua-profile.png" alt="Joshua Kim" /></p>]]></content><author><name></name></author><category term="korean" /><category term="machine_learning" /><category term="statistics" /><category term="python" /><summary type="html"><![CDATA[이번 아티클에서는 회귀모델(Regression Model)이 어떤 경우에 저조한 성과를 내는지, 더 나아가 Dataset이 어떤 특성을 지닐 때 회귀모델로 해당 문제를 풀어낼 수 없는지 필자가 경험한 바를 서술해보고자 한다.]]></summary></entry></feed>